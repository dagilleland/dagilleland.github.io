"Title","IsDraft","IsApproved","Title1","PageText","SortOrder","CreatedDate","Column1","MetaDescription","Column2","Summary"
"Try DNN","","","Try DNN","&lt;div style=&quot;padding-right: 3px; padding-left: 3px; float: right; padding-bottom: 3px; margin: 4px; border-left: orange 1px solid; width: 250px; padding-top: 3px; border-bottom: orange 1px solid&quot;&gt;   &lt;h3&gt;Quick Steps&lt;/h3&gt;    &lt;ol&gt;     &lt;li&gt;Browse to &lt;a href=&quot;http://demo.dotnetnuke.com/&quot; target=&quot;_blank&quot;&gt;http://demo.dotnetnuke.com/&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;Click &amp;quot;Create Your Demo Account&amp;quot; link &lt;/li&gt;      &lt;li&gt;Fill in the form and click the &amp;quot;Create Website&amp;quot; link. Then wait until your new website's page loads up (this may take a minute or so to get created). &lt;/li&gt;      &lt;li&gt;Once your new website loads up, click the &amp;quot;Login&amp;quot; link to log on &lt;/li&gt;      &lt;li&gt;Enter your username &amp;amp; password in the login page &lt;/li&gt;      &lt;li&gt;You should see your username below the Search box&amp;#160; &lt;/li&gt;   &lt;/ol&gt; &lt;/div&gt;  &lt;p&gt;One of the best ways to see what &lt;strong&gt;DotNetNuke&amp;#174;&lt;/strong&gt; can do and how easy it is to get working with it is to actually take it for a &amp;quot;test drive&amp;quot;.&lt;/p&gt;  &lt;p&gt;The wonderful folks at &lt;strong&gt;&lt;a href=&quot;http://www.DotNetNuke.com&quot; target=&quot;_blank&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt; have set up a place where you can sign up &amp;amp; get your own &lt;strong&gt;Demo Portal&lt;/strong&gt; absolutely &lt;strong&gt;&lt;em&gt;free&lt;/em&gt;&lt;/strong&gt;. These free sites last between 24 and 48 hours, but they can be a great place to &amp;quot;get your feet wet&amp;quot;.&lt;/p&gt;  &lt;p&gt;Lastly, if your demo portal winds up expiring and getting deleted before you get a chance to really play with it, you can go through these steps again, using the same information you used the first time.&lt;/p&gt;  &lt;p&gt;Here is how you can set up your own demo portal with DotNetNuke.&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Browse to &lt;a href=&quot;http://demo.dotnetnuke.com/&quot; target=&quot;_blank&quot;&gt;http://demo.dotnetnuke.com/&lt;/a&gt; (this link will open a new browser window, and you can [ALT] + [TAB] to switch between this article and DotNetNuke's demo site) &lt;/li&gt;    &lt;li&gt;Click &amp;quot;Create Your Demo Account&amp;quot; link     &lt;br /&gt;&lt;img height=&quot;256&quot; alt=&quot;Create Your Demo Account&quot; src=&quot;/Portals/_TryDNN/Articles/Try_DNN/A-B.png&quot; width=&quot;385&quot; /&gt; &lt;/li&gt;    &lt;li&gt;Fill in the form and click the &amp;quot;Create Website&amp;quot; link. The following image shows you what you can expect for the form. Of course, you would fill in your own information for the different fields (Website Name, Title, etc.). Once you've filled in the form and have clicked the &amp;quot;Create Website&amp;quot; link, wait until your new website's page loads up (this may take a minute or so to get created).     &lt;br /&gt;Note the fact that &lt;strong&gt;your demo website will only be active for 24hrs&lt;/strong&gt;, after which the site will be removed. This short-term site is just so you can play around and try out the capabilities of DotNetNuke.      &lt;br /&gt;&lt;img height=&quot;709&quot; alt=&quot;Create Website - Signup Form&quot; src=&quot;/Portals/_TryDNN/Articles/Try_DNN/C.png&quot; width=&quot;636&quot; /&gt;      &lt;br /&gt;&amp;quot;&lt;em&gt;*&lt;strong&gt;Note&lt;/strong&gt;: Once your website is created, you will need to login using the Administrator information specified above. Depending on volume, it can sometimes take a few minutes to fully provision your demo website. Please be patient.&lt;/em&gt;&amp;quot; &lt;/li&gt;    &lt;li&gt;Once your new website loads up, click the &amp;quot;Login&amp;quot; link to log on     &lt;br /&gt;&lt;img height=&quot;243&quot; alt=&quot;Your Demo Website is Created&quot; src=&quot;/Portals/_TryDNN/Articles/Try_DNN/D.png&quot; width=&quot;783&quot; /&gt; &lt;/li&gt;    &lt;li&gt;Enter your username &amp;amp; password in the login page     &lt;br /&gt;&lt;img height=&quot;254&quot; alt=&quot;Login to your Demo Website&quot; src=&quot;/Portals/_TryDNN/Articles/Try_DNN/E.png&quot; width=&quot;740&quot; /&gt; &lt;/li&gt;    &lt;li&gt;You should see your username below the Search box.     &lt;br /&gt;&lt;img height=&quot;90&quot; alt=&quot;Successfully Logged In&quot; src=&quot;/Portals/_TryDNN/Articles/Try_DNN/F.png&quot; width=&quot;217&quot; /&gt; &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;That's all there is to it! Now, take some time to play around and check out the features of your demo portal. You can try out some of the tutorials on this site, or check out the Guided Tour for a good introduction to working with DotNetNuke. If you find that your demo website expires, simply go through these steps again and re-create it from the beginning. Remember, the whole idea of the Demo portals is to have a safe place to learn about using DotNetNuke, away from your own live website.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;a class=&quot;a_itc&quot; style=&quot;float: right;&quot; href=&quot;http://www.itcrossing.com/&quot;&gt;&lt;img alt=&quot;powered by metaPost&quot; style=&quot;border: none ;&quot; src=&quot;/DesktopModules/itcMetaPost/images/m.gif&quot;&gt;&lt;/a&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/1/2007 9:26:30 PM","1434"," "," ","<p>One of the best ways to see what <strong>DotNetNuke&#174;</strong> can do and how easy it is to get working with it is to actually take it for a &quot;test drive&quot;.</p>  <p>The wonderful folks at <strong><a href=""http://www.DotNetNuke.com"" target=""_blank"">DotNetNuke</a></strong> have set up a place where you can sign up &amp; get your own Demo Portal <strong><em>absolutely free</em></strong>. These free sites last between 24 and 48 hours, but they can be a great place to &quot;get your feet wet&quot;.</p>  <p>This article tells you how to set up your own demo portal with DotNetNuke. This is a great way to build your own &quot;sandbox&quot; so you can play with all the features that are available.</p>"
"temo","","","temo","&lt;p&gt;adsff&lt;/p&gt;","0","10/1/2007 9:30:16 PM"," "," "," "," "
"Master - Tutorials & Self-Study","","","Master - Tutorials & Self-Study","&lt;p&gt;Tutorial &amp;amp; Self-Study Overview&lt;br /&gt; ==============================&lt;br /&gt; This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. A special &amp;quot;sandbox&amp;quot; portal has been created for you to practice the tutorials while keeping your main portal untouched by your practicing. The &amp;quot;sandbox&amp;quot; portal has been created on your website's domain at &lt;a href=&quot;http://SANDBOXURL&quot;&gt;http://SANDBOXURL&lt;/a&gt;. To access the sandbox portal, use the following user accounts (as directed in the tutorials).&lt;/p&gt; &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; - Bundle the tutorial &amp;amp; self-study with the Guided Tour into a Portal Template that can be loaded for creating a new portal&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - The Guided Tour can be made visible through an IFrame module on a page with only the Content Pane&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - The Overview &amp;amp; Self-Study &amp;amp; Tutorial pages can be regular Text/HTML pages on the site&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; - Make updates to images, etc. on the Guided Tour&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - Add new material:&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - How to make a page &amp;quot;hidden&amp;quot;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - Other page settings&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - Website Basics - Adding New Module Definitions (promo DNN Directory)&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; - Include a couple of free skins (?one based on the Guided Tour view?)&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; - Send the package to DotNetNuke as a resource to help new users learn how to work with their own site&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; - Promote as a way to help new administrators and content creators learn how to work with DotNetNuke&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt; ..........................................................................&lt;br /&gt; Learning DotNetNuke - A Website Owner's Guide to Using Your DotNetNuke Portal&lt;/p&gt; &lt;p&gt;&lt;br /&gt; DNN Tutorials&lt;/p&gt; &lt;p&gt;To do these tutorials, you will need to sign up for your demo portal at &lt;a href=&quot;http://demo.dotnetnuke.com/&quot;&gt;http://demo.dotnetnuke.com/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;How to / How Do I ...?&lt;/p&gt; &lt;p&gt;- Change the name of a page&lt;br /&gt; - Add a page&lt;br /&gt; - Move a page&lt;br /&gt; - &lt;br /&gt; ..........................................................................&lt;/p&gt; &lt;p&gt;Self-Study&lt;br /&gt; ==========&lt;br /&gt; Read Welcome&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;http://www.dotnetnuke.com/guidedtour/&lt;/a&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What is a page?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What is a module?&lt;/p&gt; &lt;p&gt;Page Basics&lt;br /&gt; -----------&lt;br /&gt; Read Overview of Pages&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/PagesOverview.htm&quot;&gt;http://www.dotnetnuke.com/guidedtour/PagesOverview.htm&lt;/a&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - Which group of users is anonymous? Administrators, All Users, Registered Users, Unauthenticated Users&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - Does the All Users group include Registered Users, Unauthenticated Users, or both?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What are the two rights that you can give to users who try to access a page on your website? View Page and/or Edit Page&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What is a &amp;quot;Skin&amp;quot;?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What is a &amp;quot;Container&amp;quot;?&lt;br /&gt; Read Create a New Page (Basic)&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/PagesCreateBasic.htm&quot;&gt;http://www.dotnetnuke.com/guidedtour/PagesCreateBasic.htm&lt;/a&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - Match the five Page Function icons with their purpose&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Add - Create a new page&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Settings - Access the Page Management settings to set ...&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Delete - Send a page (and its modules) to the portal's recycle bin&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Copy - &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ?? Preview - &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - Which security role always has View Page and Edit Page permissions?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - Administrators&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What is the difference between Page Name and Page Title?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - When you set the Parent Page for a page's settings, how does that affect the location of the page on the menu?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - [bonus: How can you force a page not to appear in the menu?]&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - Make it [not visible] or put it under a parent page that is [not visible]&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - Will a page with View Page permissions only for Registered Users &amp;amp; Administrators be visible in the menu bar to anonymous users?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - No.&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - After establishing the page settings for a new page, what link must you click to actually finish adding the page to the website?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - Update&lt;br /&gt; Tutorial - Add a new page to your SandBox&lt;/p&gt; &lt;p&gt;Read Create a New Page (Advanced)&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/PagesCreateAdvanced.htm&quot;&gt;http://www.dotnetnuke.com/guidedtour/PagesCreateAdvanced.htm&lt;/a&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - When you choose to Copy Modules from another page, and you select Copy Content, does that force the modules on the two pages to be linked so that changes to the content of the modules on either page will be reflected in the other page(s)?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - Yes&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - How can you force a page to automatically become visible (published) as of a specific date?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - How can you force a page to automatically become unavailable (un-published) as of a specific date?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - How does setting the Link Type for the Link Url of a page affect the page?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - None will .... &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; URL will .... &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Page will ....&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; File will ....&lt;br /&gt; Tutorial - Add another page and set advanced page settings&lt;/p&gt; &lt;p&gt;Read Move a Page&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/PagesMove.htm&quot;&gt;http://www.dotnetnuke.com/guidedtour/PagesMove.htm&lt;/a&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What two ways are there to move a page in the menu?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - Via Page Settings or the Admin/Pages page&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - How can you change the order of a page in a given level in the menu?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A - Via the Admin/Pages page only&lt;br /&gt; Tutorial - Move a page to appear under another page in the menu&lt;/p&gt; &lt;p&gt;Read Delete a Page&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/PagesDelete.htm&quot;&gt;http://www.dotnetnuke.com/guidedtour/PagesDelete.htm&lt;/a&gt;&lt;br /&gt; Read Recover a Deleted Page&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/PagesRecover.htm&quot;&gt;http://www.dotnetnuke.com/guidedtour/PagesRecover.htm&lt;/a&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - List the three places from which you can delete a page&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - When a page is deleted, can it be restored?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - How do you permanently delete a page?&lt;br /&gt; Tutorial - Delete a page and then restore the page. Verify that it has been restored, then delete the page permanently.&lt;/p&gt; &lt;p&gt;Read Securing Pages&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;http://www.dotnetnuke.com/guidedtour/PagesSecure.htm&quot;&gt;http://www.dotnetnuke.com/guidedtour/PagesSecure.htm&lt;/a&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - Which security role(s) would you grant View Page permissions in order to make a page visible to the public?&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; Q - What permissions would you set to make a page visible only to anonymous users and not to registered users?&lt;br /&gt; Tutorial - Create a page that is visible only to Registered Users. Then create a page that is visible only to Adminstrators. What is different about the modules on a page that is only visible to Administrators?&lt;br /&gt; Tutorial - Create a page that registered users can edit, then log on as a user who is not an administrator. As an ordinary registered user, experiment with changing the name of the page as it appears in the menu.&lt;/p&gt; &lt;p&gt;Module Basics&lt;br /&gt; -------------&lt;/p&gt; &lt;p&gt;&lt;br /&gt; Website Basics&lt;br /&gt; --------------&lt;/p&gt; &lt;p&gt;&lt;br /&gt; Common Modules&lt;br /&gt; --------------&lt;/p&gt;","0","10/2/2007 5:36:38 AM"," "," "," "," "
"Your Tour Guide to DotNetNuke","","","An Introduction to DotNetNuke","&lt;h1&gt;Overview&lt;/h1&gt; &lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;An Introduction to DotNetNuke&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning the basics of Pages in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","0","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Page Basics","&lt;h2&gt;Page Basics&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning the basics of&amp;nbsp;Modules (content managers)&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","1","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Module Basics","&lt;h2&gt;Module Basics&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning the basics of&amp;nbsp;Website Administration&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","2","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Website Administration Basics","&lt;h2&gt;Website Administration Basics&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;Site Settings&lt;/li&gt;         &lt;li&gt;Users&lt;/li&gt;         &lt;li&gt;Roles&lt;/li&gt;         &lt;li&gt;File Manager&lt;/li&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;how to apply Skins and Containers in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","3","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Text/HTML","&lt;h2&gt;Using the Text/HTML Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","5","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Links","&lt;h2&gt;Using the Links Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","7","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Announcements","&lt;h2&gt;Using the&amp;nbsp;Announcements Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","6","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Documents","&lt;h2&gt;Using the&amp;nbsp;Documents Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","8","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Events","&lt;h2&gt;Using the&amp;nbsp;Events Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","9","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Contact List","&lt;h2&gt;Using the&amp;nbsp;Contact List&amp;nbsp;Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","10","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Gallery","&lt;h2&gt;Using the&amp;nbsp;Gallery Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","11","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Common Modules - Forum","&lt;h2&gt;Using the&amp;nbsp;Forum Module&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;more of the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","12","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Your Tour Guide to DotNetNuke","","","Website Administration - Skins & Containers","&lt;h2&gt;Website Administration - Skins &amp;amp; Containers&lt;/h2&gt; &lt;ul&gt;     &lt;li&gt;quick summary     &lt;ul&gt;         &lt;li&gt;some pictures&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;readings&lt;/li&gt;     &lt;li&gt;questions&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#993300&quot;&gt;See the next page for learning&amp;nbsp;about the common modules&amp;nbsp;in DotNetNuke&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;","4","10/2/2007 6:42:43 PM","7094"," "," ","&lt;p&gt;This DotNetNuke tutorial &amp;amp; self-study is for website administrators as well as content creators. The self-study consists of readings&amp;nbsp;as well as a series of questions to aid your review of the materials. The tutorials guide you through creating and administering your own site. To do the tutorials, you should create a demo account through DotNetNuke (see &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx&quot;&gt;this article&lt;/a&gt; for details).&lt;/p&gt; &lt;p&gt;This article relies heavily on the &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guide Tour&lt;/a&gt; produced by the makers of &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.DotNetNuke.com&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&amp;reg;&lt;/sup&gt;. The &lt;a target=&quot;_blank&quot; href=&quot;http://www.dotnetnuke.com/guidedtour/&quot;&gt;Guided Tour&lt;/a&gt; is one of the best starting places to see&amp;nbsp;the potential of using&amp;nbsp;DotNetNuke for your website.&lt;/p&gt; &lt;p&gt;This article covers the following topics. Each topic is addressed to a particular audience: Portal Hosts, Website Administrators, and Content Creators.&amp;nbsp;If you find yourself falling under more than one category, then you'll find many of these to be a good starting point.&lt;/p&gt; &lt;p&gt; &lt;table cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot; border=&quot;1&quot;&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th rowspan=&quot;2&quot;&gt;Topic&lt;/th&gt;             &lt;th align=&quot;center&quot; colspan=&quot;3&quot;&gt;Audience&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;th align=&quot;center&quot;&gt;Host&lt;/th&gt;             &lt;th align=&quot;center&quot;&gt;Admin&lt;/th&gt;             &lt;th nowrap=&quot;nowrap&quot; align=&quot;center&quot;&gt;Content Creators&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;An Introduction to DotNetNuke&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Page Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Module Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Website Basics&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;Common Modules&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;             &lt;td align=&quot;center&quot;&gt;Y&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;"
"Laying Out Content on a Page","","","Laying Out Content on a Page","&lt;p&gt;This tutorial uses the DotNetNuke Demo portals available through http://demo.dotnetnuke.com as the starting point. You can review the article &amp;quot;Try DNN&amp;quot; [http://www.trydnn.com/Articles/tabid/776/ctl/ArticleView/mid/1585/articleId/23/Try-DNN.aspx] to set up your own demo portal before beginning this tutorial.&lt;/p&gt; &lt;p&gt;In this tutorial, we will take a page of content and change the layout by re-arranging modules on a page. This tutorial uses the terms &amp;quot;module&amp;quot;, &amp;quot;skin&amp;quot; and &amp;quot;pane&amp;quot; quite frequently, so you may want to review some basic DotNetNuke [terms and concepts &lt;strong&gt;[link]&lt;/strong&gt;] before proceeding.&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;Terms:         Module         Skin         Pane         Page/Tab         Module Actions menu&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Changing layout on a page is largely a matter of moving content modules around on the page. (This presumes, of course, that you are following best design practices [FOOTNOTE] and that you have more than one module on a page. [[FOOTNOTE] Best practices for designing pages includes organizing your page's content in modules. See the article about [planning your page's content &amp;amp; layout [link]]].) You can move modules to different panes on the page or re-order the modules within a given pane.&lt;/p&gt; &lt;p&gt;The pictures below show the original layout and the modified layout after completing the tutorial.&lt;/p&gt; &lt;p&gt;&lt;a onclick=&quot;window.open(this.href,'LayoutContent','resizable=yes,location=yes,menubar=no,scrollbars=yes,status=yes,toolbar=no,fullscreen=no,dependent=no,width=900,height=800,left=50,top=50,status'); return false&quot; href=&quot;/Portals/_TryDNN/Articles/Layout_Content/OriginalLayout-DesignView.png&quot;&gt;&lt;img height=&quot;379&quot; alt=&quot;Original Layout in Design View (Click to see a larger view)&quot; width=&quot;400&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/OriginalLayout-DesignView.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt; (Click &lt;a target=&quot;_blank&quot; href=&quot;/Portals/_TryDNN/Articles/Layout_Content/OriginalLayout.png&quot;&gt;here&lt;/a&gt; to see the page with its content)&lt;/p&gt; &lt;p&gt;&lt;a onclick=&quot;window.open(this.href,'','resizable=yes,location=yes,menubar=yes,scrollbars=yes,status=yes,toolbar=no,fullscreen=no,dependent=no,width=900,height=2400,left=50,top=50,status'); return false&quot; href=&quot;/Portals/_TryDNN/Articles/Layout_Content/ModifiedLayout-DesignView.png&quot;&gt;&lt;img height=&quot;379&quot; alt=&quot;Modified Layout in Design View (Click to see this with content)&quot; width=&quot;400&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/ModifiedLayout-DesignView.png&quot; /&gt;&lt;/a&gt;&amp;nbsp;&lt;br /&gt; (Click &lt;a target=&quot;_blank&quot; href=&quot;/Portals/_TryDNN/Articles/Layout_Content/ModifiedLayout.png&quot;&gt;here&lt;/a&gt; to see the page with its content)&lt;/p&gt; &lt;ol&gt;     &lt;li&gt;To start, we will move certain modules to different panes. This can be done through the Module Actions menu or by dragging the module from one pane to another. (For beginners, we recommend using the Module Actions menu to re-arrange the modules.)     &lt;ul&gt;         &lt;li&gt;Move the &lt;em&gt;Links&lt;/em&gt; module to the right pane. &lt;br /&gt;         &lt;img height=&quot;411&quot; alt=&quot;Move the Links module to the right pane&quot; width=&quot;342&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/MoveToRightPane.png&quot; /&gt;&lt;/li&gt;         &lt;li&gt;Move the &lt;em&gt;Sponsors&lt;/em&gt; module to the left pane &lt;br /&gt;         &lt;img height=&quot;407&quot; alt=&quot;Move the Sponsors module to the left pane&quot; width=&quot;359&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/MoveToLeftPane.png&quot; /&gt;&lt;/li&gt;         &lt;li&gt;Move the &lt;em&gt;Welcome...&lt;/em&gt; module to the top pane &lt;br /&gt;         &lt;img height=&quot;526&quot; alt=&quot;Move the Welcome to DotNetNuke module to the top pane&quot; width=&quot;436&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/MoveToTopPane.png&quot; /&gt;&lt;/li&gt;         &lt;li&gt;Move the &lt;em&gt;DotNetNuke License&lt;/em&gt; module to the bottom pane &lt;br /&gt;         &lt;img height=&quot;515&quot; alt=&quot;Move the DotNetNuke License module to the bottom pane&quot; width=&quot;436&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/MoveToBottomPane.png&quot; /&gt;&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;Next, we will change the order of a couple of modules in the right pane.     &lt;ul&gt;         &lt;li&gt;Move the &lt;em&gt;Links&lt;/em&gt; module up above the &lt;em&gt;Open Source&lt;/em&gt; module &lt;br /&gt;         &lt;img height=&quot;586&quot; alt=&quot;Move the Links module up above the Open Source module&quot; width=&quot;369&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/MoveUp.png&quot; /&gt;&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt;     &lt;li&gt;Lastly, we will remove the Books module from the left pane. (There are two ways to remove that module: a) Delete the module, or b) Move the module to another page. We will show both ways here; simply choose which way you want.)     &lt;ul&gt;         &lt;li&gt;To delete the Books module entirely, select Delete from the module actions menu &lt;br /&gt;         &lt;img height=&quot;298&quot; alt=&quot;Select Delete from the Books' module action menu&quot; width=&quot;172&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/Delete.png&quot; /&gt;&lt;/li&gt;         &lt;li&gt;To preseve the Books module by moving it to another page, you will need to go into the module's settings:         &lt;ol&gt;             &lt;li&gt;Select Settings from the module action menu &lt;br /&gt;             &lt;img height=&quot;301&quot; alt=&quot;Select Settings from the Books' module action menu&quot; width=&quot;174&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/Settings.png&quot; /&gt;&lt;/li&gt;             &lt;li&gt;Open the Page Settings and Advanced Settings areas and select which page you wish to move the module to. &lt;br /&gt;             &lt;img height=&quot;649&quot; alt=&quot;Select the page from the Move to Page drop-down list&quot; width=&quot;569&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/Settings-PageSettings-AdvancedSettings.png&quot; /&gt;&lt;/li&gt;             &lt;li&gt;Click the Update link &lt;br /&gt;             &lt;img height=&quot;58&quot; alt=&quot;Click Update&quot; width=&quot;168&quot; src=&quot;/Portals/_TryDNN/Articles/Layout_Content/Update.png&quot; /&gt;&lt;/li&gt;         &lt;/ol&gt;         &lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt; &lt;/ol&gt;","0","10/22/2007 2:56:44 PM","938"," "," ","&lt;p&gt;Changing layout on a page is largely a matter of moving content modules around on the page. In this tutorial, we will take a page of content and change the layout by re-arranging modules on a page. This tutorial uses the terms &amp;quot;module&amp;quot;, &amp;quot;skin&amp;quot; and &amp;quot;pane&amp;quot; quite frequently, so you may want to review some basic DotNetNuke [terms and concepts &lt;strong&gt;[link]&lt;/strong&gt;] before proceeding.&lt;/p&gt;"
"Text/HTML Token Replacement (DNN 4.6.x or higher)","","","Text/HTML Token Replacement (DNN 4.6.x or higher)","&lt;p&gt;&lt;font face=&quot;Courier New&quot; color=&quot;#003300&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ''' The TokenReplace class provides the option to replace tokens formatted &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; ''' [object:property] or [object:property|format] or [custom:no] within a string&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; ''' with the appropriate current property/custom values.&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; ''' Example for Newsletter: 'Dear [user:Displayname],' ==&amp;gt; 'Dear Superuser Account,'&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; ''' Supported Token Sources: User, Host, Portal, Tab, Module, Membership, Profile, &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; '''&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Row, Date, Ticks, ArrayList (Custom), IDictionary&lt;br /&gt; &lt;/font&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;Token Properties&lt;br /&gt; Supported Token Properties and Their Usage in the Text-HTML Module&lt;/p&gt; &lt;p&gt;user:DisplayName is displayed as:&amp;nbsp;[user:DisplayName]&amp;nbsp;&lt;br /&gt; user:FirstName is displayed as:&amp;nbsp;[user:FirstName]&amp;nbsp;&lt;br /&gt; user:LastName is displayed as:&amp;nbsp;[user:LastName]&amp;nbsp;&lt;br /&gt; user:UserName is displayed as:&amp;nbsp;[user:UserName]&amp;nbsp;&lt;br /&gt; user:Email is displayed as:&amp;nbsp;[user:Email]&amp;nbsp;&lt;br /&gt; user:PortalId is displayed as:&amp;nbsp;[user:PortalId]&amp;nbsp;&lt;br /&gt; user:IsSuperUser is displayed as:&amp;nbsp;[user:IsSuperUser]&amp;nbsp;&lt;br /&gt; user:AffiliateId is displayed as:&amp;nbsp;[user:AffiliateId]&amp;nbsp;&lt;br /&gt; user:TimeZone is displayed as:&amp;nbsp;[user:TimeZone]&amp;nbsp;&lt;br /&gt; user:PreferredLocale is displayed as:&amp;nbsp;[user:PreferredLocale]&amp;nbsp;&lt;br /&gt; user:Prefix is displayed as:&amp;nbsp;[user:Prefix]&amp;nbsp;&lt;br /&gt; user:MiddleName is displayed as:&amp;nbsp;[user:MiddleName]&amp;nbsp;&lt;br /&gt; user:Suffix is displayed as:&amp;nbsp;[user:Suffix]&amp;nbsp;&lt;br /&gt; user:Unit is displayed as:&amp;nbsp;[user:Unit]&amp;nbsp;&lt;br /&gt; user:Street is displayed as:&amp;nbsp;[user:Street]&amp;nbsp;&lt;br /&gt; user:City is displayed as:&amp;nbsp;[user:City]&amp;nbsp;&lt;br /&gt; user:Region is displayed as:&amp;nbsp;[user:Region]&amp;nbsp;&lt;br /&gt; user:Country is displayed as:&amp;nbsp;[user:Country]&amp;nbsp;&lt;br /&gt; user:PostalCode is displayed as:&amp;nbsp;[user:PostalCode]&amp;nbsp;&lt;br /&gt; user:Telephone is displayed as:&amp;nbsp;[user:Telephone]&amp;nbsp;&lt;br /&gt; user:Cell is displayed as:&amp;nbsp;[user:Cell]&amp;nbsp;&lt;br /&gt; user:Fax is displayed as:&amp;nbsp;[user:Fax]&amp;nbsp;&lt;br /&gt; user:Website is displayed as:&amp;nbsp;[user:Website]&amp;nbsp;&lt;br /&gt; user:IM is displayed as:&amp;nbsp;[user:IM]&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;br /&gt; profile:TimeZone is displayed as:&amp;nbsp;[profile:TimeZone]&amp;nbsp;&lt;br /&gt; profile:PreferredLocale is displayed as:&amp;nbsp;[profile:PreferredLocale]&amp;nbsp;&lt;br /&gt; profile:Prefix is displayed as:&amp;nbsp;[profile:Prefix]&amp;nbsp;&lt;br /&gt; profile:MiddleName is displayed as:&amp;nbsp;[profile:MiddleName]&amp;nbsp;&lt;br /&gt; profile:Suffix is displayed as:&amp;nbsp;[profile:Suffix]&amp;nbsp;&lt;br /&gt; profile:Unit is displayed as:&amp;nbsp;[profile:Unit]&amp;nbsp;&lt;br /&gt; profile:Street is displayed as:&amp;nbsp;[profile:Street]&amp;nbsp;&lt;br /&gt; profile:City is displayed as:&amp;nbsp;[profile:City]&amp;nbsp;&lt;br /&gt; profile:Region is displayed as:&amp;nbsp;[profile:Region]&amp;nbsp;&lt;br /&gt; profile:Country is displayed as:&amp;nbsp;[profile:Country]&amp;nbsp;&lt;br /&gt; profile:PostalCode is displayed as:&amp;nbsp;[profile:PostalCode]&amp;nbsp;&lt;br /&gt; profile:Telephone is displayed as:&amp;nbsp;[profile:Telephone]&amp;nbsp;&lt;br /&gt; profile:Cell is displayed as:&amp;nbsp;[profile:Cell]&amp;nbsp;&lt;br /&gt; profile:Fax is displayed as:&amp;nbsp;[profile:Fax]&amp;nbsp;&lt;br /&gt; profile:Website is displayed as:&amp;nbsp;[profile:Website]&amp;nbsp;&lt;br /&gt; profile:IM is displayed as:&amp;nbsp;[profile:IM]&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;br /&gt; portal:SkinPath is displayed as:&amp;nbsp;[portal:SkinPath]&amp;nbsp;&lt;br /&gt; portal:ContainerPath is displayed as:&amp;nbsp;[portal:ContainerPath]&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;br /&gt; tab:TabID is displayed as:&amp;nbsp;[tab:TabID]&amp;nbsp;&lt;br /&gt; tab:TabOrder is displayed as:&amp;nbsp;[tab:TabOrder]&amp;nbsp;&lt;br /&gt; tab:PortalID is displayed as:&amp;nbsp;[tab:PortalID]&amp;nbsp;&lt;br /&gt; tab:TabName is displayed as:&amp;nbsp;[tab:TabName]&amp;nbsp;&lt;br /&gt; tab:AuthorizedRoles is displayed as:&amp;nbsp;[tab:AuthorizedRoles]&amp;nbsp;&lt;br /&gt; tab:IsVisible is displayed as:&amp;nbsp;[tab:IsVisible]&amp;nbsp;&lt;br /&gt; tab:ParentID is displayed as:&amp;nbsp;[tab:ParentID]&amp;nbsp;&lt;br /&gt; tab:Level is displayed as:&amp;nbsp;[tab:Level]&amp;nbsp;&lt;br /&gt; tab:IconFile is displayed as:&amp;nbsp;[tab:IconFile]&amp;nbsp;&lt;br /&gt; tab:AdministratorRoles is displayed as:&amp;nbsp;[tab:AdministratorRoles]&amp;nbsp;&lt;br /&gt; tab:DisableLink is displayed as:&amp;nbsp;[tab:DisableLink]&amp;nbsp;&lt;br /&gt; tab:Title is displayed as:&amp;nbsp;[tab:Title]&amp;nbsp;&lt;br /&gt; tab:Description is displayed as:&amp;nbsp;[tab:Description]&amp;nbsp;&lt;br /&gt; tab:Keywords is displayed as:&amp;nbsp;[tab:Keywords]&amp;nbsp;&lt;br /&gt; tab:IsDeleted is displayed as:&amp;nbsp;[tab:IsDeleted]&amp;nbsp;&lt;br /&gt; tab:Url is displayed as:&amp;nbsp;[tab:Url]&amp;nbsp;&lt;br /&gt; tab:SkinSrc is displayed as:&amp;nbsp;[tab:SkinSrc]&amp;nbsp;&lt;br /&gt; tab:ContainerSrc is displayed as:&amp;nbsp;[tab:ContainerSrc]&amp;nbsp;&lt;br /&gt; tab:TabPath is displayed as:&amp;nbsp;[tab:TabPath]&amp;nbsp;&lt;br /&gt; tab:StartDate is displayed as:&amp;nbsp;[tab:StartDate]&amp;nbsp;&lt;br /&gt; tab:EndDate is displayed as:&amp;nbsp;[tab:EndDate]&amp;nbsp;&lt;br /&gt; tab:HasChildren is displayed as:&amp;nbsp;[tab:HasChildren]&amp;nbsp;&lt;br /&gt; tab:RefreshInterval is displayed as:&amp;nbsp;[tab:RefreshInterval]&amp;nbsp;&lt;br /&gt; tab:PageHeadText is displayed as:&amp;nbsp;[tab:PageHeadText]&amp;nbsp;&lt;br /&gt; tab:IsSuperTab is displayed as:&amp;nbsp;[tab:IsSuperTab]&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;br /&gt; Module:PortalID is displayed as:&amp;nbsp;[Module:PortalID]&amp;nbsp;&lt;br /&gt; Module:TabID is displayed as:&amp;nbsp;[Module:TabID]&amp;nbsp;&lt;br /&gt; Module:TabModuleID is displayed as:&amp;nbsp;[Module:TabModuleID]&amp;nbsp;&lt;br /&gt; Module:ModuleID is displayed as:&amp;nbsp;[Module:ModuleID]&amp;nbsp;&lt;br /&gt; Module:ModuleDefID is displayed as:&amp;nbsp;[Module:ModuleDefID]&amp;nbsp;&lt;br /&gt; Module:ModuleOrder is displayed as:&amp;nbsp;[Module:ModuleOrder]&amp;nbsp;&lt;br /&gt; Module:PaneName is displayed as:&amp;nbsp;[Module:PaneName]&amp;nbsp;&lt;br /&gt; Module:ModuleTitle is displayed as:&amp;nbsp;[Module:ModuleTitle]&amp;nbsp;&lt;br /&gt; Module:AuthorizedEditRoles is displayed as:&amp;nbsp;[Module:AuthorizedEditRoles]&amp;nbsp;&lt;br /&gt; Module:CacheTime is displayed as:&amp;nbsp;[Module:CacheTime]&amp;nbsp;&lt;br /&gt; Module:AuthorizedViewRoles is displayed as:&amp;nbsp;[Module:AuthorizedViewRoles]&amp;nbsp;&lt;br /&gt; Module:Alignment is displayed as:&amp;nbsp;[Module:Alignment]&amp;nbsp;&lt;br /&gt; Module:Color is displayed as:&amp;nbsp;[Module:Color]&amp;nbsp;&lt;br /&gt; Module:Border is displayed as:&amp;nbsp;[Module:Border]&amp;nbsp;&lt;br /&gt; Module:IconFile is displayed as:&amp;nbsp;[Module:IconFile]&amp;nbsp;&lt;br /&gt; Module:AllTabs is displayed as:&amp;nbsp;[Module:AllTabs]&amp;nbsp;&lt;br /&gt; Module:Visibility is displayed as:&amp;nbsp;[Module:Visibility]&amp;nbsp;&lt;br /&gt; Module:AuthorizedRoles is displayed as:&amp;nbsp;[Module:AuthorizedRoles]&amp;nbsp;&lt;br /&gt; Module:IsDeleted is displayed as:&amp;nbsp;[Module:IsDeleted]&amp;nbsp;&lt;br /&gt; Module:Header is displayed as:&amp;nbsp;[Module:Header]&amp;nbsp;&lt;br /&gt; Module:Footer is displayed as:&amp;nbsp;[Module:Footer]&amp;nbsp;&lt;br /&gt; Module:StartDate is displayed as:&amp;nbsp;[Module:StartDate]&amp;nbsp;&lt;br /&gt; Module:EndDate is displayed as:&amp;nbsp;[Module:EndDate]&amp;nbsp;&lt;br /&gt; Module:ContainerSrc is displayed as:&amp;nbsp;[Module:ContainerSrc]&amp;nbsp;&lt;br /&gt; Module:DisplayTitle is displayed as:&amp;nbsp;[Module:DisplayTitle]&amp;nbsp;&lt;br /&gt; Module:DisplayPrint is displayed as:&amp;nbsp;[Module:DisplayPrint]&amp;nbsp;&lt;br /&gt; Module:DisplaySyndicate is displayed as:&amp;nbsp;[Module:DisplaySyndicate]&amp;nbsp;&lt;br /&gt; Module:InheritViewPermissions is displayed as:&amp;nbsp;[Module:InheritViewPermissions]&amp;nbsp;&lt;br /&gt; Module:ModulePermissions is displayed as:&amp;nbsp;[Module:ModulePermissions]&amp;nbsp;&lt;br /&gt; Module:DesktopModuleID is displayed as:&amp;nbsp;[Module:DesktopModuleID]&amp;nbsp;&lt;br /&gt; Module:FolderName is displayed as:&amp;nbsp;[Module:FolderName]&amp;nbsp;&lt;br /&gt; Module:FriendlyName is displayed as:&amp;nbsp;[Module:FriendlyName]&amp;nbsp;&lt;br /&gt; Module:Description is displayed as:&amp;nbsp;[Module:Description]&amp;nbsp;&lt;br /&gt; Module:Version is displayed as:&amp;nbsp;[Module:Version]&amp;nbsp;&lt;br /&gt; Module:IsPremium is displayed as:&amp;nbsp;[Module:IsPremium]&amp;nbsp;&lt;br /&gt; Module:IsAdmin is displayed as:&amp;nbsp;[Module:IsAdmin]&amp;nbsp;&lt;br /&gt; Module:BusinessControllerClass is displayed as:&amp;nbsp;[Module:BusinessControllerClass]&amp;nbsp;&lt;br /&gt; Module:ModuleName is displayed as:&amp;nbsp;[Module:ModuleName]&amp;nbsp;&lt;br /&gt; Module:SupportedFeatures is displayed as:&amp;nbsp;[Module:SupportedFeatures]&amp;nbsp;&lt;br /&gt; Module:CompatibleVersions is displayed as:&amp;nbsp;[Module:CompatibleVersions]&amp;nbsp;&lt;br /&gt; Module:Dependencies is displayed as:&amp;nbsp;[Module:Dependencies]&amp;nbsp;&lt;br /&gt; Module:Permissions is displayed as:&amp;nbsp;[Module:Permissions]&amp;nbsp;&lt;br /&gt; Module:DefaultCacheTime is displayed as:&amp;nbsp;[Module:DefaultCacheTime]&amp;nbsp;&lt;br /&gt; Module:ModuleControlId is displayed as:&amp;nbsp;[Module:ModuleControlId]&amp;nbsp;&lt;br /&gt; Module:ControlSrc is displayed as:&amp;nbsp;[Module:ControlSrc]&amp;nbsp;&lt;br /&gt; Module:ControlType is displayed as:&amp;nbsp;[Module:ControlType]&amp;nbsp;&lt;br /&gt; Module:ControlTitle is displayed as:&amp;nbsp;[Module:ControlTitle]&amp;nbsp;&lt;br /&gt; Module:HelpUrl is displayed as:&amp;nbsp;[Module:HelpUrl]&amp;nbsp;&lt;br /&gt; Module:SupportsPartialRendering is displayed as:&amp;nbsp;[Module:SupportsPartialRendering]&amp;nbsp;&lt;br /&gt; Module:ContainerPath is displayed as:&amp;nbsp;[Module:ContainerPath]&amp;nbsp;&lt;br /&gt; Module:PaneModuleIndex is displayed as:&amp;nbsp;[Module:PaneModuleIndex]&amp;nbsp;&lt;br /&gt; Module:PaneModuleCount is displayed as:&amp;nbsp;[Module:PaneModuleCount]&amp;nbsp;&lt;br /&gt; Module:IsDefaultModule is displayed as:&amp;nbsp;[Module:IsDefaultModule]&amp;nbsp;&lt;br /&gt; Module:AllModules is displayed as:&amp;nbsp;[Module:AllModules]&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;br /&gt; PORTAL.NAME is displayed as:&amp;nbsp;&amp;nbsp;&amp;nbsp; [PORTAL.NAME]&amp;nbsp; Equivalent to PortalSettings.PortalName &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt; DATE is displayed as:&amp;nbsp;&amp;nbsp; [DATE]&amp;nbsp; If a format is specified, it will attempt to use that format; should the format fail or if no format is specified, it will display the date as a ShortDate String. &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; [DATE:MMM dd, yyyy]&lt;/p&gt; &lt;p&gt;&lt;br /&gt; TIME is displayed as:&amp;nbsp;&amp;nbsp; [TIME]&amp;nbsp; If a format is specified, it will attempt to use that format; should the format fail or if no format is specified, it will display the time as a ShortTime String. &lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; [TIME:hh:mm]&lt;/p&gt;","0","10/22/2007 3:30:06 PM","1354"," "," ","&lt;p&gt;In DotNetNuke 4.6, the Text/HTML module (which is the mainstay and most frequently used module in the DotNetNuke framework) gained some new features. The most notable is that there is now support for including Tokens in your module's content.&lt;/p&gt; &lt;p&gt;Tokens are basically a way to show customized information about the portal environment. For example, if you want to display the name of the user who has logged in, then you can use a token that looks like &lt;strong&gt;&lt;font color=&quot;#993300&quot;&gt;[&lt;/font&gt;&lt;em&gt;&lt;u&gt;user:DisplayName&lt;/u&gt;&lt;/em&gt;&lt;font color=&quot;#993300&quot;&gt;]&lt;/font&gt;&lt;/strong&gt;.&lt;/p&gt;"
"Blogging with DotNetNuke","","","Blogging with DotNetNuke","&lt;p&gt;TBA - This will be the start of the main article&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;a class=&quot;a_itc&quot; style=&quot;float: right;&quot; href=&quot;http://www.itcrossing.com/&quot;&gt;&lt;img alt=&quot;powered by metaPost&quot; style=&quot;border: none ;&quot; src=&quot;/DesktopModules/itcMetaPost/images/m.gif&quot;&gt;&lt;/a&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","3/2/2008 6:35:09 PM","1828"," "," ","<p>DotNetNuke is a framework on which you can build your website. Of course, when you have a website, you want to put content on it. A commonly sought type of content is a Weblog (or <strong><em>blog</em></strong> for short). DotNetNuke comes with a Blog module that you can use, or you can use other third-party modules, like Ventrian's News Articles module.</p>  <p>Beyond the blog itself, you will want a way for you (&amp; others on your site) to post blogs. Of course, people can just go to the site, log on, and make their blog entry. But a lot of people like to create their blogs &quot;offline&quot; and &quot;publish&quot; (that is, upload) their blog later on. They would use programs like Word or LiveWriter to do this (like I am doing right now).</p>  <p>If you are interested in having a website with blog, then read on and I'll tell you more about how to get started with blogging on DotNetNuke.</p>"
"Posting Demo Source Code","","","Posting Demo Source Code","&lt;p&gt;Do you want to do code samples. Then blog them. It makes it work quite easily with Visual Studio Solutions Insert plug-in.&lt;/p&gt; &lt;p&gt;Cool&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;div class=&quot;wlWriterSmartContent&quot; id=&quot;scid:18d43e01-4549-4fde-8ca6-c7b4b7385fac:04c68c68-ee3c-400c-b808-bb73c92cbccd&quot; style=&quot;padding-right: 0px; display: inline; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px&quot;&gt; &lt;p&gt;Download Solution - &lt;a href=&quot;/Portals/_TryDNN/images/News-Articles/WLW/PostingDemoSourceCode_57B7/ABC%20-%20Starter%20Classes_3.zip&quot;&gt;ABC - Starter Classes.zip&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear: both; height: 11px&quot;&gt;&lt;a class=&quot;a_itc&quot; style=&quot;float: right&quot; href=&quot;http://www.itcrossing.com/&quot;&gt;&lt;img style=&quot;border-right: medium none; border-top: medium none; border-left: medium none; border-bottom: medium none&quot; alt=&quot;powered by metaPost&quot; src=&quot;/DesktopModules/itcMetaPost/images/m.gif&quot; /&gt;&lt;/a&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","3/4/2008 5:14:20 AM"," "," "," "," "
"Where will this go??","","","Where will this go??","<p>Which news articles module will this rest on???</p><div class=""d_itc_f"" style=""clear:both;height:11px;""><a class=""a_itc"" style=""float: right;"" href=""http://www.itcrossing.com/""><img alt=""powered by metaPost"" style=""border: none ;"" src=""/DesktopModules/itcMetaPost/images/m.gif""></a><script src=""/DesktopModules/itcMetaPost/js/mg.js"" type=""text/javascript""></script></div>","0","3/5/2008 5:25:40 PM"," "," "," "," "
"Test ARticle","","","Test ARticle","&lt;p&gt;Draft only....&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","4/29/2008 5:32:15 PM"," "," "," "," "
"Centralizing My Notes","","","Centralizing My Notes","&lt;p class=&quot;SectionStart&quot;&gt;For quite a while now, I’ve wanted to have a central place that I can keep my articles, blogs and “notes-to-self”. &lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot; title=&quot;Comedy Business 70&quot; border=&quot;0&quot; alt=&quot;Comedy Business 70&quot; align=&quot;right&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/CentralizingMyNotes_1249F/Comedy%20Business%2070_3.gif&quot; width=&quot;90&quot; height=&quot;180&quot; /&gt;Well, I’ve finally gotten around to setting up my own site for all of this, at &lt;a href=&quot;&quot;&gt;http://kb.Gilleland.info&lt;/a&gt;. I’ve had my own domain for a while now, and have finally decided to set up a sub-domain, which I’ve called “kb”, for “Knowledge Base”. Over the next few weeks (and working around my holidays &amp;amp; camping) I’m going to see about moving/mirroring many of my postings from other places onto this site. In the mean time, I’ll be playing around with categorizing and customizing how WLW works with my site.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/17/2009 8:18:19 PM"," "," "," "," "
"Five Tips to Maximizing Your Website","","","Five Tips to Maximizing Your Website","&lt;p&gt;Here's a few quick tips for getting the most our of your website. Of course, they all involve some planning, but most profitable ventures do...&lt;em&gt;(Re-posted from a previous site of mine, from Sunday, September 03, 2006)&lt;/em&gt;&lt;/p&gt;  &lt;h2&gt;Know (and target) Your Audience&lt;/h2&gt;  &lt;p&gt;This means a few things: First, the content of your site must be of interest to whoever your market group is. If you are a non-profit organization, it should address the interests of your existing (and potential) members. If you are a business, it should communicate the products and services you have to offer.&lt;/p&gt;  &lt;p&gt;Second,&lt;/p&gt;  &lt;h2&gt;Get the Word Out&lt;/h2&gt;  &lt;p&gt;Don't expect the search engines to do all the footwork of driving people to your website. You are going to have to find ways to tell people (a) where to find you and (b) why they should take the time to look for you.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;&lt;em&gt;Ranking&lt;/em&gt;&lt;/strong&gt; is a term that refers to how high up your site will appear when listed on a given search engine like Google or Yahoo. There are numerous Internet companies who advertise that they can improve your website's rankings in the popular search engines (like Google, Yahoo and MSN). A big problem with using them, however, is cost. I have known people who spend upwards of $250 per month in an attempt to improve their search rankings. That can add up to well over $6000 a year, with no real guarantee that the results will last more than a short while (particularly as these search engines change their ranking algorithms).&lt;/p&gt;  &lt;p&gt;That means advertising your website address on your business cards, store receipts, and letterhead. If you do newspaper or flier ads, include your website address. Ask your customers, when they go through your till, &amp;quot;Have you visited our website?&amp;quot; Let them know if you advertise regular specials or if you put printable coupons on your site (and have a few &amp;quot;spare&amp;quot; ones at the till to apply to the customers current purchase, if they haven't gotten to your site yet). Remember, if you are hoping for your website to drive people to your business, then you need to find ways to let them know about your website.&lt;/p&gt;  &lt;h2&gt;Keep it Current&lt;/h2&gt;  &lt;p&gt;This is, by far, one of the more difficult – and necessary – tasks. Many websites are &amp;quot;dead.&amp;quot; What you do with your site's content should consume as much time as the planning you put into newspaper or flyer ads and the arrangement of products in your store window. Think &amp;quot;curbside appeal&amp;quot; - that's what helps to sell houses; no-one wants to buy a house that look run down or has old paint or shingles.&lt;/p&gt;  &lt;p&gt;The best way to keep you site current is to edit the content, perhaps by posting online &amp;quot;coupons&amp;quot; (if you're a business), or writing up short articles, tips, or other items of interest. Keeping your website current, however, doesn't mean you have to do all, or even most, of the writing. If you can leverage news feeds or RSS articles that are relevant to your site's visitors (and related to your site's content), then having these on a front page can make it &amp;quot;look&amp;quot; like something's new on your site.&lt;/p&gt;  &lt;h2&gt;Don't go Overboard&lt;/h2&gt;  &lt;p&gt;Rember the focus of your business or non-profit organization. Your website is only a tool meant to enhance what your real-world, day-time work is all about. Don't try to make your organization revolve around the website - remember your core products and services, and make your website work for you.&lt;/p&gt;  &lt;p&gt;People sometimes wonder if they should sell their products or services on-line. Very few businesses have, need, or can support an on-line store (though it's becoming more and more affordable to do so). Remember that if you plan on selling services or products online, you had better be ready to give on-line support as well, whether that be through your website directly or via e-mail. People who shop on-line expect support on-line. Before you decide to go this route, ask yourself if you are ready to do the work that's involved, or if you should just focus on your regular channels of doing business. What that means is, for the short-term at least, your website is probably better off by focusing on encouraging people to visit your brick-and-mortar store.&lt;/p&gt;  &lt;h2&gt;Get a Marathon Mindset&lt;/h2&gt;  &lt;p&gt;Don't expect your website to be a one-time project that will serve you forever. Come up with some kind of maintenance plan for your site. Over time, your website should evolve with your business or organization. Make some kind of schedule where you reguarly re-visit your site to examine its function, content and design. That should be at least twice a year. And, while you're at it, set aside money to make it happen. Often, if something is written into the budget, it's more likely to be done. If you view your website as an on-going concern, it will have the chance to grow with you. Remember, a marathon mindset is a must!&lt;/p&gt;  &lt;h2&gt;Conclusion&lt;/h2&gt;  &lt;p&gt;There are other tips you can apply, but the ones identified here are among the most important. Of course, the more you plan, the better your execution is likely to be. And the better your execution, the more likely you will be able to plan and take advantage of further opportunities. Your first website plan doesn't have to be big, but if you keep these tips in mind you will be able to grow it over time.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 8:48:30 PM","502"," "," ","<p></p>  <p>Here's a few quick tips for getting the most our of your website. Of course, they all involve some planning, but most profitable ventures do...   <br /><em>(Re-posted from a previous site of mine, from Sunday, September 03, 2006)</em></p>"
"Skinning DNN - Tips &amp; Tricks","","","Skinning DNN - Tips &amp; Tricks","&lt;h2&gt;A Planned Approach to Skinning&lt;/h2&gt;  &lt;p&gt;One of the first things that a person encounters when skinning for DNN is that there can be a lot of details to attend to. To be proficient at skinning, you should (at the least) know HTML, CSS, and a bit of XML. You should also get familiar with using graphics editors (like Serif's PhotoPlus or Adobe's PhotoShop).&lt;/p&gt;  &lt;h3&gt;Consistency&lt;/h3&gt;  &lt;p&gt;Building a pattern of consistency in skinning is essential (due to all the little details that typically crop up). Here's a pattern I try to use:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Make sure each Skin Object (except the SolpartMenu object) that supports a CssClass attribute (or other stylesheet classes) is given a CSS style using this naming pattern: &lt;strong&gt;&lt;em&gt;SkinObjectName&lt;/em&gt;Style&lt;/strong&gt;      &lt;ul&gt;       &lt;li&gt;To prevent naming conflicts when having more than one Skin or Container in a package, I will append an &lt;strong&gt;&lt;em&gt;_SkinName&lt;/em&gt;&lt;/strong&gt; to the style; e.g.: &lt;strong&gt;BreadcrumbsStyle_default&lt;/strong&gt; and&lt;strong&gt;BreadcrumbsStyle_dark&lt;/strong&gt; for the &lt;em&gt;default.html&lt;/em&gt; and &lt;em&gt;dark.html&lt;/em&gt;skins, respectively.&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Confine my work to using about 3-5 distinct table layouts; these will handle abut 80% of the skinning jobs I'll really need &lt;/li&gt;    &lt;li&gt;Use a standard set of names for content panes in all my skins; this will ensure that when I switch from one skin to another, hardly any of the modules will default to the main ContentPane if the original pane name doesn't exist in the new skin. I use the following names for my panes (and most developers use similar names):      &lt;ul&gt;       &lt;li&gt;ContentPane (This is required by all skins) &lt;/li&gt;        &lt;li&gt;LeftPane &lt;/li&gt;        &lt;li&gt;RightPane &lt;/li&gt;        &lt;li&gt;HeaderPane &lt;/li&gt;        &lt;li&gt;FooterPane &lt;/li&gt;        &lt;li&gt;InfoPane &lt;/li&gt;        &lt;li&gt;SiteInfoPane&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Always try to use a minimal amount of CSS styles. Also, avoid using width and height attributes of HTML elements if they can instead be put into the CSS stylesheet. &lt;/li&gt;    &lt;li&gt;Create my rough-draft HTML with some in-line style attributes, to do quick'n'dirty visual checks of the the look I'm trying to achieve. when I'm satisfied with the CSS styles, I'll move them to the CSS stylesheet file.&lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Make Use of Templates&lt;/h3&gt;  &lt;p&gt;Once you've done a couple of skins, you will quickly realize that most of the work in skinning is simply repetitive stuff. You can minimize this repetitive labour by using templates to ease your work.&lt;/p&gt;  &lt;p&gt;I use Edit Plus' ClipText feature to hold common code snippets. I have six key clip text files: three for Skins and three for Containers. Basically, making a Skin and making a Container are pretty much the same, but for each of these I need to create the following files:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;.html - an HTML Layout for the skin (including Skin Object references) &lt;/li&gt;    &lt;li&gt;.xml - an XML file for the Skin Object Attributes &lt;/li&gt;    &lt;li&gt;.css - some CSS Styles to be used by my skin/container&lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:02:53 PM","1362"," "," ","&lt;p&gt;This article highlights some tips, tricks, and patterns to creating Skins and Containers for DNN. In keeping with the philosophy of &amp;quot;cheap developer tools,&amp;quot; I'm going to focus on how to create these using the following software:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;EditPlus - a text editor with some cool features (~$30US, or use the trial version) &lt;/li&gt;    &lt;li&gt;Serif PhotoPlus - Version 6 is the latest free version from&lt;a href=&quot;http://www.freeserifsoftware.com/&quot;&gt;&lt;u&gt;www.FreeSerifSoftware.com&lt;/u&gt;&lt;/a&gt; - it's a graphics editor that gives a lot of functionality for just the right price!&lt;/li&gt; &lt;/ul&gt;"
"Datagrids in ASP.NET","","","Datagrids in ASP.NET","&lt;h2&gt;Intro to the Datagrid Web Control&lt;/h2&gt;  &lt;p&gt;The Datagrid web server control is ideal for showing information retrieved from a database. If you need to show many rows of data in a simple table-like format, this control makes it easy.&lt;/p&gt;  &lt;h3&gt;Using the Datagrid&lt;/h3&gt;  &lt;h3&gt;Commonly Used Properties&lt;/h3&gt;  &lt;h3&gt;Datagrid Designers&lt;/h3&gt;  &lt;h2&gt;Your First Working Example with the Datagrid&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;Use Northwind database &lt;/li&gt;    &lt;li&gt;Show the results of 10 most popular products&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Creating an Editable Datagrid&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;Create a web page with a datagrid on the page (give it an ID of grdShippers)&lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:06:15 PM","192"," "," ","<p>This article covers how to work with the Datagrid control in ASP.NET (web) applications.</p>"
"Moving a Windows App to the Web","","","Moving a Windows App to the Web","&lt;h2&gt;Abstract&lt;/h2&gt;  &lt;p&gt;This article looks at the main steps to convert a simple Windows application into a Web application.&lt;/p&gt;  &lt;h2&gt;Overview&lt;/h2&gt;  &lt;p&gt;One of the big advantages to coding in Visual Studio .NET is that there is little difference between what we do in a Windows application and what we do in a Web application. (For vetran programmers, you may argue that there is a big difference, and while that is true &lt;em&gt;under the hood&lt;/em&gt; of what you need to code for an application, there is far, far more stuff that just doesn't change when moving from Windows to Web apps.)&lt;/p&gt;  &lt;p&gt;In this article, we'll look at creating a Web form equivalent of a simple Windows form that holds text boxes, combo boxes, buttons, and a datagrid. Here's the &amp;quot;before and after&amp;quot; pictures:&lt;/p&gt;  &lt;p&gt;[[picture here]]&lt;/p&gt;  &lt;h3&gt;What Changes?&lt;/h3&gt;  &lt;p&gt;Code-wise, there is really very little that changes between these two apps. Here's a quick summary:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;We need to call .DataBind() for datagrids and drop-down lists &lt;/li&gt;    &lt;li&gt;no more messagebox.show available &lt;/li&gt;    &lt;li&gt;page.load has an IsPostBack variable &lt;/li&gt;    &lt;li&gt;.displaymemeber -&amp;gt; .datatextfield     &lt;br /&gt;.valuemember -&amp;gt; .datavaluefield &lt;/li&gt;    &lt;li&gt;how to add/retreive an item from viewstate &lt;/li&gt;    &lt;li&gt;solutions with multiple projects      &lt;ul&gt;       &lt;li&gt;must add a ref. to the class library proj into the pl project &lt;/li&gt;        &lt;li&gt;must add the namespace qualifier to any code accessing our bll&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:08:18 PM","302"," "," ","&lt;h2&gt;Abstract&lt;/h2&gt;  &lt;p&gt;This article looks at the main steps to convert a simple Windows application into a Web application.&lt;/p&gt;"
"Datagrid Control - Windows vs. Web Forms","","","Datagrid Control - Windows vs. Web Forms","&lt;p&gt;The datagrid control is a popular control for easily displaying a table of information. But there are two versions of this control: one for web applications and one for Windows applications. For the most part, they work the same, but there are some subtle differences you should be aware of. Here, we will compare these two versions of the datagrid control.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:10:06 PM"," "," "," "," "
"Subroutines and Passing By Reference","","","Subroutines and Passing By Reference","&lt;h2&gt;Subroutines and Passing by Reference&lt;/h2&gt;  &lt;h3&gt;Introduction&lt;/h3&gt;  &lt;p&gt;The three principles for effective system development are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Validity. &lt;/li&gt;    &lt;li&gt;Maintainability. &lt;/li&gt;    &lt;li&gt;Efficiency. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;The concept of employing the use of subroutines applies mainly to maintainability and efficiency. In general, subroutines are stand-alone, re-usable segments of program logic that reduce redundancy in a solution.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;Upon successful completion of this lesson the student should be able to:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Describe the purpose of subroutines. &lt;/li&gt;    &lt;li&gt;Identify areas where subroutines can be used. &lt;/li&gt;    &lt;li&gt;Develop the logic for a subroutine. &lt;/li&gt;    &lt;li&gt;Implement a call to a subroutine from a calling program. &lt;/li&gt;    &lt;li&gt;Identify the difference between passing by value and passing by reference. &lt;/li&gt;    &lt;li&gt;Pass multiple values to a subroutine and have them changed. &lt;/li&gt; &lt;/ul&gt;  &lt;hr /&gt;  &lt;h3&gt;Defining a Subroutine&lt;/h3&gt;  &lt;p&gt;Much like functions, subroutines are stand-alone, re-usable processes or logic whose functionality can be called upon from one or many places within a solution. Also like functions, subroutines have the capability of accepting one or more values as parameters.&lt;/p&gt;  &lt;p&gt;There is a one key difference between subroutines and functions. Subroutines by default DO NOT evaluate to or return a single value as functions do. Even though they do not automatically return a value, subroutines do have both a purpose and a place in effective systems development.&lt;/p&gt;  &lt;p&gt;As we have seen in the previous lesson with regards to built-in functions, people also have built-in subroutines whose functionality they call several times a day. An example of a subroutine that people are programmed with can be seen if we take into consideration doors.&lt;/p&gt;  &lt;p&gt;Everyone knows how to open a door. Everyone opens doors several times each day. In an early lesson the example of a student going to school was used. Think about how many doors the student must open during this simple activity.&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Open Bedroom Door. &lt;/li&gt;    &lt;li&gt;Open Bathroom Door. &lt;/li&gt;    &lt;li&gt;Open Shower Door. &lt;/li&gt;    &lt;li&gt;Open Garage Door. &lt;/li&gt;    &lt;li&gt;Open Car Door. &lt;/li&gt;    &lt;li&gt;Open School Building Door. &lt;/li&gt;    &lt;li&gt;Open Locker Door. &lt;/li&gt;    &lt;li&gt;Open Classroom Door. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;That's a lot of doors! Each of the doors that we encounter have some differences, such as the manner in which they are opened (sliding, twisting knob and pushing, pulling etc.), but they all share a common trait in that they are doors that must be opened. Typically if a student comes to a closed door they will try to open it. Some may argue that opening doors should be a function that returns a Boolean true or false as to whether the door was opened successfully or not. This is a valid point and can be explored, but for the purposes of this lesson we will limit the domain of possible doors to those that can be opened.&lt;/p&gt;  &lt;h3&gt;Flowcharting a Subroutine&lt;/h3&gt;  &lt;p&gt;When a person is faced with a closed door, they usually do not have to analyze, learn and develop new ways to open it. They just call a subroutine they have stored in their minds that contains instructions on how to open a door. If we were to create a flowchart for a subroutine that would solve the problem of opening a door, it might look something like this:&lt;/p&gt;  &lt;p&gt;[OpeningDoors.gif&amp;quot;]&lt;/p&gt;  &lt;p&gt;Notice the format of the above flowchart. The beginning Terminal symbol does not contain the word Start or Begin, but rather it is labeled OpenDoor. As with variable naming conventions, the name of a subroutine should be such that it describes the process or processes that it executes. The ending Terminal symbol contains the word Return, which essentially means, &amp;quot;Return to the point from which the subroutine was called.&amp;quot;&lt;/p&gt;  &lt;h3&gt;Calling Subroutines&lt;/h3&gt;  &lt;p&gt;Now that we have explored the general principle of what a subroutine is and what a flowchart for a subroutine looks like, we can look at employing the use of a subroutine in a program.&lt;/p&gt;  &lt;p&gt;Think about the student going to school example again and let's explore what the flowchart for that may look like without using a subroutine.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;div align=&quot;center&quot;&gt;[GoingToSchool.gif]&lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;As you can see, the above flowchart is in real danger of becoming very tedious. The above solution is not efficient in terms of time to develop and definitely is not very maintainable. Just ask yourself the question &amp;quot;What happens if I encounter a new type of door to open?&amp;quot; You would need to identify the process required to open that type of door and add that logical path to each of the above case structures. A daunting task to say the least!&lt;/p&gt;  &lt;p&gt;This is where using subroutines can really save time and effort. The same flowchart as above follows except this version employs multiple calls to a subroutine called OpenDoor.&lt;/p&gt;  &lt;p class=&quot;breakbefore&quot;&gt;&amp;#160;&lt;/p&gt;  &lt;div align=&quot;center&quot;&gt;[GoingToSchoolWithSubs.gif]&lt;/div&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;Notice the format of the above flowchart. When calling OpenDoor we use the Rounded Rectangle with a line across the top. This symbol is used to illustrate that there will be logic executing, but within a different place (i.e. outside of the Calling Flowchart logic.)&lt;/p&gt;  &lt;p&gt;Following the execution of the logic above, we begin, as always, with the Terminal symbol labeled Start. The execution of the logic proceeds in sequence until we reach the first Rounded Rectangle. The flow of logic then jumps out of the Calling Flowchart and into the beginning Terminal symbol of our subroutine labeled &amp;quot;OpenDoor&amp;quot;. The logic in the subroutine now executes from top to bottom as in all of the flowcharting examples thus far until it reaches the subroutine's ending Terminal symbol labeled &amp;quot;Return&amp;quot;. The logic then returns back to the main driver to the point from which it was called and the logic within the calling program continues.&lt;/p&gt;  &lt;p&gt;As you can see, using subroutines can simplify your task, while at the same time making your logic more efficient and MUCH more maintainable. With the above version of the solution, if we did come across a new type of door to open, only the flowchart for the OpenDoor subroutine would need to change.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;Passing Values by Reference&lt;/h3&gt;  &lt;p&gt;Before we can explore the topic of passing a value by reference, it is important to have a thorough understanding of what happens when information is passed by value.&lt;/p&gt;  &lt;h4&gt;An In-Depth Look at Passing By Value&lt;/h4&gt;  &lt;p&gt;Recall that the previous lesson introduced the concept of sending information to a logical unit of work such as a function. The means by which the information was sent to the functions is known as &lt;strong&gt;Passing by Value&lt;/strong&gt;.&lt;/p&gt;  &lt;p&gt;When passing by value, a &lt;i&gt;COPY&lt;/i&gt; of the actual value is sent to the function. That function, upon beginning its execution, which is also known as &lt;strong&gt;Coming Into Scope&lt;/strong&gt;, creates new variables. The names of the new variables and their corresponding data types are listed in the Annotation symbol of the function's opening Terminal symbol.&lt;/p&gt;  &lt;p&gt;Once the new variable has been created, the value passed from the Calling Flowchart is copied into the memory allocated for the new variable. At this point there really are two variables in memory that have the same value. The first is in the calling flowchart. A copy of the value is then sent into the second variable, which is the one created when the function began executing.&lt;/p&gt;  &lt;p&gt;Once the value in the first variable is copied into the second variable, the link between the two variables is broken. They are now completely separate because they exist in different &lt;b&gt;scopes&lt;/b&gt;. One is a variable that can only be used and manipulated within the context or scope of the Calling Flowchart; the other is a variable that can only be used and manipulated within the context or scope of the function or subroutine. A change to one variable will never affect the other.&lt;/p&gt;  &lt;p&gt;For example, let's say that the Calling Flowchart passes the value contained in a variable called Count, which is equal to 5, to a variable called TheCount declared in the Annotation symbol of some given subroutine.&lt;/p&gt;  &lt;p&gt;Here is a table of how this all works together:&lt;/p&gt; &lt;center&gt;   &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;10&quot; width=&quot;90%&quot;&gt;&lt;tbody&gt;       &lt;tr&gt;         &lt;th align=&quot;left&quot;&gt;&lt;u&gt;Step #&lt;/u&gt;&lt;/th&gt;          &lt;th&gt;&lt;u&gt;Description&lt;/u&gt;&lt;/th&gt;          &lt;th&gt;&lt;u&gt;Calling Flowchart Variable&lt;/u&gt;&lt;/th&gt;          &lt;th&gt;&lt;u&gt;Subroutine Variable&lt;/u&gt;&lt;/th&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 1--&gt;         &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;The logic in the Calling Flowchart is executing and is about to call the subroutine.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;p&gt;SCOPE = NONE&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 2--&gt;         &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;When the logic begins to execute for the subroutine, memory is set aside for the variable declared in the Annotation symbol of the subroutine. The subroutine variable contains no value at this point.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;p&gt;&amp;#160;&lt;/p&gt;            &lt;table width=&quot;70&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;70&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th valign=&quot;top&quot; align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;TheCount&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&amp;#160;&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = The subroutine&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 3--&gt;         &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;In the next step, the value contained in the variable Count from the Calling Flowchart is copied into the subroutine variable TheCount.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;150&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;TheCount&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;5&lt;/font&gt;&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = The subroutine&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 4--&gt;         &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;Now that the value has been successfully copied into the new variable, the link between the variables is broken.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;150&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;TheCount&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = The subroutine&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 5--&gt;         &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;Logic in the subroutine can execute, changing the value stored in the variable TheCount without affecting the value in the original variable Count. The value in the variable TheCount is tripled.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;150&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;TheCount :&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;15&lt;/font&gt;&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = The subroutine&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 6--&gt;         &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;Finally, the logic in the subroutine stops executing, a value is returned to the Calling Flowchart, and the variables in the subroutine fall Out Of Scope.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;p&gt;SCOPE = NONE&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;     &lt;/tbody&gt;&lt;/table&gt; &lt;/center&gt;  &lt;p&gt;As you can see in the above logic, no matter what happens to the variable TheCount in the subroutine, the value of the variable Count in the Calling Flowchart never changes.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Notice that the variables in the Calling Flowchart and in the subroutine above have different names. This is NOT a requirement. They are only named differently to aid in the explanation. The two variables could, in fact, have the same name.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h4&gt;Passing by Reference&lt;/h4&gt;  &lt;p&gt;There is another method of passing a value to a logical unit of work that is available to programmers. It is known as &lt;b&gt;Passing by Reference&lt;/b&gt;. When passing by reference you do not pass a copy of a variable to a function or subroutine, you in fact pass a reference to the &lt;b&gt;ORIGINAL&lt;/b&gt; variable. When passing by reference, both the Calling Flowchart and the function/subroutine have access to the same variable. The implication of this is that the scope of the variable is now shared. Therefore a change in the value contained in a variable during the execution of a subroutine or function will change the value of that variable in the Calling Flowchart.&lt;/p&gt;  &lt;p&gt;Here is a table that uses the same example as above except this one illustrates the effects of passing a variable by reference:&lt;/p&gt; &lt;center&gt;   &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;10&quot; width=&quot;90%&quot;&gt;&lt;tbody&gt;       &lt;tr&gt;         &lt;th align=&quot;left&quot;&gt;&lt;u&gt;Step #&lt;/u&gt;&lt;/th&gt;          &lt;th&gt;&lt;u&gt;Description&lt;/u&gt;&lt;/th&gt;          &lt;th&gt;&lt;u&gt;Calling Flowchart Variable&lt;/u&gt;&lt;/th&gt;          &lt;th&gt;&lt;u&gt;Subroutine Variable&lt;/u&gt;&lt;/th&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 1--&gt;         &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;The logic in the Calling Flowchart is executing and is about to call the subroutine.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;p&gt;SCOPE = NONE&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 2--&gt;         &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;When the logic of the subroutine begins to execute, memory is set aside to store the &lt;em&gt;address&lt;/em&gt; of the original variable. The subroutine variable contains no value at this point.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;p&gt;&amp;#160;&lt;/p&gt;            &lt;table width=&quot;70&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;70&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th valign=&quot;top&quot; align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;TheCount&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&amp;#160;&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = BOTH&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 3--&gt;         &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;The next step is that the value contained in the variable Count from the Calling Flowchart is &lt;strong&gt;directly accessed&lt;/strong&gt; by the subroutine variable TheCount. The variables are effectively linked together.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;150&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;TheCount&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;The address of Count&lt;/font&gt;&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Reference Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;5&lt;/font&gt;&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = BOTH&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 4--&gt;         &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;Any logic in the function that changes the value stored in the variable TheCount directly affects the value in the original variable Count. If the value in the variable TheCount is tripled, the value of the original variable Count is also tripled.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;15&lt;/font&gt;&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = BOTH&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;150&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;TheCount&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;The address of Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Reference Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;15&lt;/font&gt;&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = BOTH&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;        &lt;tr&gt;&lt;!--Begin Step 5--&gt;         &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;          &lt;td width=&quot;200&quot;&gt;           &lt;p&gt;Finally, the logic in the function stops executing, a value is returned to the Calling Flowchart, and the variables in the function fall Out Of Scope.&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;table width=&quot;10&quot;&gt;&lt;tbody&gt;               &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Name :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;Count&lt;/td&gt;               &lt;/tr&gt;                &lt;tr&gt;                 &lt;th align=&quot;center&quot;&gt;Value :&lt;/th&gt;                  &lt;td align=&quot;center&quot;&gt;15&lt;/td&gt;               &lt;/tr&gt;             &lt;/tbody&gt;&lt;/table&gt;            &lt;p&gt;SCOPE = Calling Flowchart&lt;/p&gt;         &lt;/td&gt;          &lt;td align=&quot;center&quot;&gt;           &lt;p&gt;SCOPE = NONE&lt;/p&gt;         &lt;/td&gt;       &lt;/tr&gt;     &lt;/tbody&gt;&lt;/table&gt; &lt;/center&gt;  &lt;p&gt;With the ability to pass by reference it can sometimes be confusing when deciding when to use a subroutine and when to use a function. In reality, they can both be used interchangeably in most cases, dependant upon the requirements of the system. In practice, however, it has been noted that there does seem to be a &amp;quot;Guideline&amp;quot; that most developers follow when developing solutions that employ subroutines and/or functions.&lt;/p&gt;  &lt;p&gt;There are three basic categories that logical units of work fall into, and based upon the category, the choice is made to go with a subroutine or a function.&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;If a logical unit of work is required to calculate and return ONE piece of information, typically this is accomplished through the use of a &lt;strong&gt;function&lt;/strong&gt;. This, however, is (as always) subject to the requirements of the user and the system. &lt;/li&gt;    &lt;li&gt;If a logical unit of work is simply required to execute without returning any values, developers will tend to use a &lt;strong&gt;subroutine&lt;/strong&gt;. &lt;/li&gt;    &lt;li&gt;If a logical unit of work is required to return multiple values, developers tend to use a &lt;strong&gt;subroutine&lt;/strong&gt; and pass each of the values that need to be sent to the subroutine by reference. &lt;/li&gt; &lt;/ol&gt;  &lt;h4&gt;Flowcharting Passing by Reference&lt;/h4&gt;  &lt;p&gt;Drawing a flowchart that uses passing by reference is very similar to drawing a flowchart that uses passing by value. In fact, the two are so similar that there are only two ways that the techniques can be told apart.&lt;/p&gt;  &lt;ol&gt;   &lt;p&gt;&amp;#160;&lt;/p&gt;    &lt;li&gt;A subroutine that has a variable passed by reference looks exactly like a function that has a variable passed by value with the key difference being the closing Terminal symbol. If the closing Terminal symbol is annotated with a variable that has the EXACT same name and data type as a variable that was passed in, that particular variable was passed by reference.      &lt;p&gt;An example of this is the following subroutine that has the same variable passed in as returned. In this case, the subroutine accepts a number and returns ten times that number.&lt;/p&gt;      &lt;blockquote&gt;       &lt;p&gt;&amp;#160;&lt;/p&gt;       &lt;center&gt;[subroutine1.gif]&lt;/center&gt;        &lt;p&gt;&amp;#160;&lt;/p&gt;     &lt;/blockquote&gt;      &lt;p&gt;&amp;#160;&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;The second way that a subroutine that has information passed by reference can be identified is if the logical unit of work is returning MORE than one value in its closing Terminal symbol. These are very easy to identify.      &lt;p align=&quot;left&quot;&gt;An example of this technique is illustrated below. This particular subroutine prompts the user for three pieces of information before returning all three back to the Calling Flowchart from which the subroutine was called.&lt;/p&gt;      &lt;blockquote&gt;       &lt;p&gt;&amp;#160;&lt;/p&gt;       &lt;center&gt;[$subroutine2.gif]&lt;/center&gt;        &lt;p&gt;&amp;#160;&lt;/p&gt;     &lt;/blockquote&gt;   &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;Putting it All Together&lt;/h3&gt;  &lt;p&gt;Aside from being an excellent way to avoid the redundancy of certain portions of a flowcharted solution, subroutines and functions can also be used to modularize your solution. Modularization refers to the process of breaking up your flowchart into &lt;strong&gt;Logical Units of Work&lt;/strong&gt;. Instead of having a monstrous flowchart that spans multiple pages where it is difficult to see where some structures begin and others end, the entire solution can be modularized into logical segments, with each respective segment performing some outlined functionality.&lt;/p&gt;  &lt;p&gt;When trying to come up with a solution to a problem like this it is important to have a &amp;quot;Mental Road Map&amp;quot; that you can follow. The steps you can use to develop this map are essentially the same no matter what you are trying to solve.&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Identify the problem you wish to solve. &lt;/li&gt;    &lt;li&gt;Identify any independent, logical units of work that may exist within the solution. &lt;/li&gt;    &lt;li&gt;For each logical unit of work, identify whether it should be functions or subroutines by:      &lt;ul&gt;       &lt;li&gt;Identifying whether the logical unit of work needs information passed to it. &lt;/li&gt;        &lt;li&gt;Identifying whether the logical unit of work will be returning a single piece of information. &lt;/li&gt;        &lt;li&gt;Identifying whether the logical unit of work will be returning multiple pieces of information. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Create a Main Flowchart that will act as a framework for the solution. &lt;/li&gt;    &lt;li&gt;Create the flowcharts for the subroutines and functions you outlined in Step #2 and 3. &lt;/li&gt;    &lt;li&gt;When your solution has been completed, look over your flowcharts to see if they can be further modularized. &lt;/li&gt;    &lt;li&gt;Test your solution. &lt;/li&gt; &lt;/ol&gt;  &lt;h2&gt;Conclusions&lt;/h2&gt;  &lt;p&gt;Subroutines are an efficient and maintainable way to flowchart repetitious logic. Passing values by reference allows you to change the value that a variable contains outside of the scope in which the variable was defined.&lt;/p&gt; &lt;center&gt;   &lt;blockquote&gt;&lt;strong&gt;Remember:&lt;/strong&gt;       &lt;br /&gt;      &lt;br /&gt;      &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot;&gt;&lt;tbody&gt;         &lt;tr&gt;           &lt;th&gt;When Passing by Value&lt;/th&gt;            &lt;td&gt;A COPY of the value in the variable is passed.&lt;/td&gt;         &lt;/tr&gt;          &lt;tr&gt;           &lt;th&gt;When Passing by Reference&lt;/th&gt;            &lt;td&gt;The address of the variable is passed which allows access to the ORIGINAL value.&lt;/td&gt;         &lt;/tr&gt;       &lt;/tbody&gt;&lt;/table&gt;   &lt;/blockquote&gt; &lt;/center&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:28:33 PM","960"," "," ","<p>Upon successful completion of this lesson the student should be able to:</p>  <ul>   <li>Describe the purpose of subroutines. </li>    <li>Identify areas where subroutines can be used. </li>    <li>Develop the logic for a subroutine. </li>    <li>Implement a call to a subroutine from a calling program. </li>    <li>Identify the difference between passing by value and passing by reference. </li>    <li>Pass multiple values to a subroutine and have them changed. </li> </ul>"
"WebControls for DNN's User Profiling","","","WebControls for DNN's User Profiling","&lt;p&gt;DNN provides advanced user profiling capabilities, allowing developers and site administrators to set up their own information about the registered users on their site. This article explores how to create a custom WebControl for profiling by extending from DNN's EditControl.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:45:00 PM"," "," "," "," "
"Making Your Custom Controls AJAX/ATLAS Friendly","","","Making Your Custom Controls AJAX/ATLAS Friendly","&lt;p&gt;So, you've made a few custom webcontrols and feel fairly confident about how to go about the process. But what about when you (or someone else) tries to use your custom control along with AJAX or ATLAS? Will it work as expected? What you should plan for in your custom control to make it AJAX/ATLAS friendly?&lt;/p&gt;  &lt;p&gt;This article will explore the issues and opportunities for making your custom controls interact with ATLAS. We'll also explore how to build some AJAX functionality right into your custom control, to make it easier to use.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:45:59 PM"," "," "," "," "
"WebControl Walkthrough - Building Your Own Composite Custom Control","","","WebControl Walkthrough - Building Your Own Composite Custom Control","&lt;p&gt;This article will walk the reader through the creation of a few custom web controls. The custom controls discussed here are built as composite controls; composite controls are simply controls that combine other pre-existing controls to offer new, complex functionality.&lt;/p&gt;  &lt;p&gt;The composite custom controls covered in this areticle are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;LabelledTextBox - A Label and TextBox control are combined here into a single control &lt;/li&gt;    &lt;li&gt;LabelledComboBox - A Label and ComboBox control are combined into a singl &lt;/li&gt;    &lt;li&gt;DateDropDownPicker -&lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:47:02 PM"," "," "," "," "
"Checklist for Creating Web Controls","","","Checklist for Creating Web Controls","&lt;p&gt;In this article, I will offer a checklist for creting your own custom controls by inheriting from ASP.NET's WebControl class.&lt;/p&gt;  &lt;p&gt;Custom controls offer the best in re-usability among various projects, and creating your own custom controls can lead you on a journey of making complete libraries of reusable web controls.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/18/2009 11:47:57 PM"," "," "," "," "
"Household Repairs &ndash; Repair Clinic","","","Household Repairs &ndash; Repair Clinic","&lt;p&gt;&lt;a href=&quot;http://www.RepairClinic.com&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; align=&quot;left&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-HouseholdRepairsRepairClinic_F00-image_3.png&quot; width=&quot;240&quot; height=&quot;101&quot; /&gt;&lt;/a&gt; Here’s a site that I want to remember: Repair Clinic (&lt;a href=&quot;http://www.RepairClinic.com&quot; target=&quot;_blank&quot;&gt;www.RepairClinic.com&lt;/a&gt;). You can lookup appliance parts or get some tips/help/instructions on how to repair all sorts of stuff. It’s worth checking out (&amp;amp; remembering, for myself; hence this post).&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/mg.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/19/2009 12:04:27 AM"," "," "," "," "
"Lipsum Demo","","","Lipsum Demo","&lt;h1&gt;&lt;a href=&quot;http://html-ipsum.com/&quot;&gt;HTML Ipsum&lt;/a&gt; Presents&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Pellentesque habitant morbi tristique&lt;/strong&gt; senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. &lt;em&gt;Aenean ultricies mi vitae est.&lt;/em&gt; Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, &lt;code&gt;commodo vitae&lt;/code&gt;, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. &lt;a href=&quot;#&quot;&gt;Donec non enim&lt;/a&gt; in turpis pulvinar facilisis. Ut felis.&lt;/p&gt; &lt;h2&gt;Header Level 2&lt;/h2&gt; &lt;ol&gt;     &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;     &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt; &lt;/ol&gt; &lt;blockquote&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus magna. Cras in mi at felis aliquet congue. Ut a est eget ligula molestie gravida. Curabitur massa. Donec eleifend, libero at sagittis mollis, tellus est malesuada tellus, at luctus turpis elit sit amet quam. Vivamus pretium ornare est.&lt;/p&gt; &lt;/blockquote&gt; &lt;h3&gt;Header Level 3&lt;/h3&gt; &lt;ul&gt;     &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;     &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&lt;code&gt; #header h1 a {  display: block;  width: 300px;  height: 80px;  } &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;HTML Ipsum Presents&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Pellentesque habitant morbi tristique&lt;/strong&gt; senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. &lt;em&gt;Aenean ultricies mi vitae est.&lt;/em&gt; Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, &lt;code&gt;commodo vitae&lt;/code&gt;, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. &lt;a href=&quot;#&quot;&gt;Donec non enim&lt;/a&gt; in turpis pulvinar facilisis. Ut felis.&lt;/p&gt; &lt;h2&gt;Header Level 2&lt;/h2&gt; &lt;ol&gt;     &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;     &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt; &lt;/ol&gt; &lt;blockquote&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus magna. Cras in mi at felis aliquet congue. Ut a est eget ligula molestie gravida. Curabitur massa. Donec eleifend, libero at sagittis mollis, tellus est malesuada tellus, at luctus turpis elit sit amet quam. Vivamus pretium ornare est.&lt;/p&gt; &lt;/blockquote&gt; &lt;h3&gt;Header Level 3&lt;/h3&gt; &lt;ul&gt;     &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;     &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&lt;code&gt; #header h1 a {  display: block;  width: 300px;  height: 80px;  } &lt;/code&gt;&lt;/pre&gt; &lt;dl&gt;    &lt;dt&gt;Definition list&lt;/dt&gt;    &lt;dd&gt;Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna  aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea  commodo consequat.&lt;/dd&gt;    &lt;dt&gt;Lorem ipsum dolor sit amet&lt;/dt&gt;    &lt;dd&gt;Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna  aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea  commodo consequat.&lt;/dd&gt; &lt;/dl&gt;&lt;dl&gt;    &lt;dt&gt;Definition list&lt;/dt&gt;    &lt;dd&gt;Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna  aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea  commodo consequat.&lt;/dd&gt;    &lt;dt&gt;Lorem ipsum dolor sit amet&lt;/dt&gt;    &lt;dd&gt;Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna  aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea  commodo consequat.&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt;&amp;#160;&lt;/p&gt;","0","6/19/2009 7:19:38 AM","1674"," "," ","&lt;p&gt;This is the article summary. This article is just for testing layouts. The content is your basic &quot;Lorem Ipsum&quot; text, some of which is taken from the &lt;a target=&quot;_blank&quot; href=&quot;http://html-ipsum.com/&quot;&gt;HTML-Ipsum&lt;/a&gt; site.&lt;/p&gt; &lt;p&gt;For more Lorem Ipsum content, check out&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://HTML-Ipsum.com&quot;&gt;HTML-Ipsum&lt;/a&gt;&amp;#160;— A site with Lorem Ipsum wrapped in various HTML tags.&lt;/li&gt;     &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://lipsum.com&quot;&gt;Lipsum&lt;/a&gt;&amp;#160;— One of the traditional sources for generating Lorem Ipsum content, with some background on the Lorem Ipsum origins and translation.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt;"
"Lipsum Demo","","","Lipsum - Page 2","&lt;h2&gt;More Lorem Ipsum&lt;/h2&gt; &lt;p&gt;Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.&lt;/p&gt; &lt;p&gt;Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.&lt;/p&gt; &lt;ol&gt;     &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;     &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt;     &lt;li&gt;Vestibulum auctor dapibus neque.&lt;/li&gt; &lt;/ol&gt; &lt;ol&gt;     &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;     &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt;     &lt;li&gt;Vestibulum auctor dapibus neque.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.&lt;/p&gt; &lt;p&gt;Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.&lt;/p&gt;","1","6/19/2009 7:19:38 AM","1674"," "," ","&lt;p&gt;This is the article summary. This article is just for testing layouts. The content is your basic &quot;Lorem Ipsum&quot; text, some of which is taken from the &lt;a target=&quot;_blank&quot; href=&quot;http://html-ipsum.com/&quot;&gt;HTML-Ipsum&lt;/a&gt; site.&lt;/p&gt; &lt;p&gt;For more Lorem Ipsum content, check out&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://HTML-Ipsum.com&quot;&gt;HTML-Ipsum&lt;/a&gt;&amp;#160;— A site with Lorem Ipsum wrapped in various HTML tags.&lt;/li&gt;     &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://lipsum.com&quot;&gt;Lipsum&lt;/a&gt;&amp;#160;— One of the traditional sources for generating Lorem Ipsum content, with some background on the Lorem Ipsum origins and translation.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt;"
"Ventrian&rsquo;s News Articles","","","Ventrian&rsquo;s News Articles","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;http://www.ventrian.com/Products/Modules/NewsArticles.aspx&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-VentriansNewsArticles_FB9E-image_4.png&quot; target=&quot;_blank&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'5dadbdca'})&quot; &gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 0px 0px 5px; display: inline; border-top: 0px; border-right: 0px&quot; title=&quot;Ventrian&amp;#39;s News Articles Module&quot; border=&quot;0&quot; alt=&quot;Ventrian&amp;#39;s News Articles Module&quot; title=&quot;Ventrian&amp;#39;s News Articles Module&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-VentriansNewsArticles_FB9E-image_thumb_1.png&quot; width=&quot;240&quot; height=&quot;161&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;&lt;a href=&quot;http://www.ventrian.com/Products/Modules/NewsArticles.aspx&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Ventrian’s News Articles&lt;/strong&gt;&lt;/a&gt; by &lt;!--Begin mp_html_link_1_5dadbdca--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_5dadbdca'  } )&quot; target=&quot;_blank&quot;&gt;Scott McCulloch&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_5dadbdca--&gt; is one of the most popular and fully-featured modules for creating articles on &lt;a href=&quot;http://www.DotNetNuke.com&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;DotNetNuke&lt;/a&gt;&lt;sup&gt;&#174;&lt;/sup&gt;.&lt;/p&gt;  &lt;p&gt;Originally released in March 2005, this module has gone through a lot of versions (the current being 00.07.45, commonly called 7.45). It works in DotNetNuke 4.5.5 and higher. It has a number of features, including&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Workflow capabilities&lt;/strong&gt;, allowing for large teams of writers and editors &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Advanced article management&lt;/strong&gt;, such as tagging articles for categories or being featured or secure and allowing full control of drafts and start/end publishing dates &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Fully customizable layout&lt;/strong&gt;, through the use of layout templates &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Companion modules&lt;/strong&gt; for showing latest articles or archives &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Reader Comments and RSS feeds&lt;/strong&gt; (by latest, categories, and author) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;There are other features, of course, and the purpose of this review isn’t to name them, but to simply point you in the direction of &lt;a href=&quot;http://www.Ventrian.com&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;Ventrian&lt;/a&gt;’s website (&lt;a href=&quot;http://www.Ventrian.com&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;www.Ventrian.com&lt;/a&gt;) so that you can learn more.&lt;/p&gt;  &lt;p&gt;I’ve been using this News Articles module for years now, and I have to say it is the &lt;!--Begin mp_html_link_2_5dadbdca--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_2_5dadbdca'  } )&quot; target=&quot;_blank&quot;&gt;“best of breed”&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;2&lt;/sup&gt;&lt;!--End mp_html_link_2_5dadbdca--&gt; that is out there. The long-standing development and support by the author is another reason that this is simply a must-have module for almost any DotNetNuke site. It gets even better when you add in &lt;a href=&quot;http://www.itcrossing.com/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;IT Crossing&lt;/a&gt;’s &lt;a href=&quot;http://dnn.itcrossing.com/products/modules/metapost/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;metaPost&lt;/strong&gt;&lt;/a&gt; module that allows authors to post from &lt;a href=&quot;http://windowslivewriter.spaces.live.com&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Windows Live Writer&lt;/strong&gt;&lt;/a&gt; or other &lt;a href=&quot;http://en.wikipedia.org/wiki/WYSIWYG&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;wysiwyg&lt;/a&gt; editors that support uploading through &lt;a href=&quot;http://en.wikipedia.org/wiki/MetaWeblog&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;MetaWeblog API&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_5dadbdca--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_5dadbdca&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_5dadbdca--&gt; &lt;p&gt;&lt;img src=&quot;http://www.dotnetnuke.com/Portals/25/CoreTeam/MemberPhotos/ScottMcCulloch.jpg&quot; /&gt; A picture of Scott McCulloch as found (and linked directly from) DotNetNuke.&lt;/p&gt;&lt;!--End mp_html_detail_body_1_5dadbdca--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_5dadbdca--&gt;   &lt;!--Begin mp_html_detail_2_5dadbdca--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_2_5dadbdca&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;2&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_2_5dadbdca--&gt; &lt;p&gt;”Best of Breed” – A term that indicates the “best product of its type”. (source: &lt;a href=&quot;http://encyclopedia2.thefreedictionary.com/best-of-breed&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;TheFreeDictionary.com&lt;/a&gt;)&lt;/p&gt;&lt;!--End mp_html_detail_body_2_5dadbdca--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_2_5dadbdca--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/25/2009 10:12:29 PM"," "," "," "," "
"De-Crappify Your Computer","","","De-Crappify Your Computer","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-DeCrappifyYourComputer_166-image_4.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'c34b43b7'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-DeCrappifyYourComputer_166-image_thumb_1.png&quot; width=&quot;244&quot; height=&quot;70&quot; /&gt;&lt;/a&gt; ScreenCast.com has &lt;a href=&quot;http://www.screencast.com/users/Featured/folders/Featured/media/6205791f-c012-4c5e-a053-01227cc6c97b&quot; target=&quot;_blank&quot;&gt;a video on “de-crappifying” your computer&lt;/a&gt; from all those programs &amp;amp; services that start up when you turn your computer on. It’s worth a look:&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.screencast.com/users/Featured/folders/Featured/media/6205791f-c012-4c5e-a053-01227cc6c97b&quot; target=&quot;_blank&quot;&gt;http://www.screencast.com/users/Featured/folders/Featured/media/6205791f-c012-4c5e-a053-01227cc6c97b&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 8:08:43 AM"," "," "," "," "
"Jing &ndash; Free Screen Capture from TechSmith","","","Jing &ndash; Free Screen Capture from TechSmith","&lt;p&gt;I was looking over the latest version of some TechSmith software (specifically Camtasia) to see what features are in the new version (I have Camtasia 4.x and the current one is version 6.x). As I was browsing around, I ran across this free product that they offer: &lt;a href=&quot;http://www.techsmith.com/jing/default.asp&quot; target=&quot;_blank&quot;&gt;Jing&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.techsmith.com/jing/default.asp&quot;&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-JingFreeScreenCapturefromTechSmith_13B29-image_3.png&quot; width=&quot;757&quot; height=&quot;320&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;Jing is a simple screen capture program that can capture a single image (allowing you to do add text, boxes &amp;amp; arrows to it) or a short video (5 minute limit). For the image capture it saves it as a PNG file, and for videos it saves it as a SWF. For example, the above image was captured from Jing, as was the short video below.&lt;/p&gt;  &lt;div style=&quot;padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px&quot; id=&quot;scid:fb3a1972-4489-4e52-abe7-25a00bb07fdf:36d3696e-5f3a-4f9a-8d1e-ae4f95429604&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;p&gt;Sample Flash Video &lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-JingFreeScreenCapturefromTechSmith_13B29-2009-05-28_2210.swf&quot; target=&quot;_blank&quot;&gt;Click to Open&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;Note that the flash file has to be uploaded to a SharePoint site as a file. To actually show the swf in this blog, I tried to embed the final URL of the file in a manually added &amp;lt;object&amp;gt; tag, but it looks like the SharePoint strips out that html when posting (bummer). Other sites that allow attachments such as SWFs should work find.&lt;/p&gt;  &lt;p&gt;&lt;OBJECT classid=&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot; WIDTH=&quot;550&quot; HEIGHT=&quot;400&quot; id=&quot;myMovieName&quot;&gt;&lt;PARAM NAME=&quot;movie&quot; VALUE=&quot;https://cstspoint.nait.ca/personal/dgilleland/Blog/Lists/Posts/Attachments/22/20090528_2210_2836BB2F.swf&quot;&gt;&lt;PARAM NAME=&quot;quality&quot; VALUE=&quot;high&quot;&gt;&lt;PARAM NAME=&quot;bgcolor&quot; VALUE=&quot;#FFFFFF&quot;&gt;&lt;EMBED href=&quot;https://cstspoint.nait.ca/personal/dgilleland/Blog/Lists/Posts/Attachments/22/20090528_2210_2836BB2F.swf&quot; quality=high bgcolor=#FFFFFF WIDTH=&quot;550&quot; HEIGHT=&quot;400&quot; NAME=&quot;myMovieName&quot; ALIGN=&quot;&quot; TYPE=&quot;application/x-shockwave-flash&quot; PLUGINSPAGE=&quot;http://www.macromedia.com/go/getflashplayer&quot;&gt;&lt;/EMBED&gt;&lt;/OBJECT&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 8:21:25 AM"," "," "," "," "
"Some Windows Live Writer Plug-Ins","","","Some Windows Live Writer Plug-Ins","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;/p&gt;  &lt;p&gt;Here’s some notes on some plug-ins for Windows Live Writer that I use, sometimes occasionally and sometimes frequently.&lt;/p&gt;  &lt;h2&gt;Working&lt;/h2&gt;  &lt;h3&gt;Insert File(s)&lt;/h3&gt;  &lt;p&gt;The &lt;a href=&quot;http://gallery.live.com/liveItemDetail.aspx?li=b839fc2f-afa0-4728-8f54-cf4c0d3be8f5&amp;amp;bt=9&amp;amp;pl=8&quot; target=&quot;_blank&quot;&gt;Insert File(s)&lt;/a&gt; plug-in can insert up to three files that will be uploaded to your blog (if your blog allows file uploading). Watch out for the file size, though, because the Publishing of your blog could time out…&lt;/p&gt;  &lt;p&gt;xPollinate&lt;/p&gt;  &lt;p&gt;The &lt;a href=&quot;http://gallery.live.com/liveItemDetail.aspx?li=c2bf1378-8b18-4a4e-880e-e399c8d7b7b4&amp;amp;bt=9&amp;amp;pl=8&quot; target=&quot;_blank&quot;&gt;xPollinate&lt;/a&gt; plug-in simplifies the cross-posting of your blogs. Here’s a screen-shot:&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-SomeWLWPlugIns_8476-image_2.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'5797a29a'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;Click to see bigger image&quot; border=&quot;0&quot; alt=&quot;Click to see bigger image&quot; title=&quot;Click to see bigger image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-SomeWLWPlugIns_8476-image_thumb.png&quot; width=&quot;124&quot; height=&quot;122&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;And here’s some caveats about using xPollinate:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Note that it requires you to first post your blog, then run xPollinate. &lt;/li&gt;    &lt;li&gt;If you make changes to or edit your original blog, then you will have to re-run xPollinate to cross-post those changes. &lt;/li&gt;    &lt;li&gt;If you re-run xPollinate, it will do the cross-postings as brand new postings (which is fine, if you want to “publish” it as an update to an earlier posting). &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Attach Zip File&lt;/h3&gt;  &lt;p&gt;&lt;a href=&quot;http://gallery.live.com/liveItemDetail.aspx?li=d9449418-e352-4850-8398-458edece8e74&amp;amp;bt=9&amp;amp;pl=8&quot; target=&quot;_blank&quot;&gt;On the Fly Zip and Attach&lt;/a&gt; (which shows up as Attach Zip File) &lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-SomeWLWPlugIns_8476-image_4.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'5797a29a'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2009/WLW-SomeWLWPlugIns_8476-image_thumb_1.png&quot; width=&quot;184&quot; height=&quot;23&quot; /&gt;&lt;/a&gt;&amp;#160; Here’s the caveats:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Make sure the total zip file size isn’t too big – the Publishing will time out if it is &lt;/li&gt;    &lt;li&gt;When zipping, it “preserves” the folder source for the zipped files – which can be thought of as a security breach (for example, it can expose the login user name if you are taking files from the desktop). &lt;/li&gt; &lt;/ol&gt;  &lt;h2&gt;Not Sure If Working…&lt;/h2&gt;  &lt;p&gt;tba&lt;/p&gt;  &lt;h2&gt;Not Working&lt;/h2&gt;  &lt;h3&gt;LiveBlog Transfer&lt;/h3&gt;  &lt;p&gt;The &lt;a href=&quot;http://gallery.live.com/liveItemDetail.aspx?li=0ceaf7be-9887-43c4-af18-6e7a3ef5fcc3&amp;amp;bt=9&amp;amp;pl=8&quot; target=&quot;_blank&quot;&gt;LiveBlog Transfer&lt;/a&gt; plug-in is supposed to allow either “backing up” blogs or transferring them to other blog sites. Read the comments, though, as there are problems with this plug-in on the Windows Live Writer 2009.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;TODO: See about re-making this program &amp;amp; fixing what appears broken.&lt;/p&gt; &lt;/blockquote&gt;  &lt;h3&gt;Smileys&lt;/h3&gt;  &lt;p&gt;The &lt;a href=&quot;http://gallery.live.com/liveItemDetail.aspx?li=76de73f7-b3e9-48ee-9fd9-e9d4ee81f215&amp;amp;bt=9&amp;amp;pl=8&quot; target=&quot;_blank&quot;&gt;Insert MSN, Yahoo and Custom Smileys&lt;/a&gt; plugin seems to need one of these messenger tools installed – it’s not working as a “stand-alone”&lt;/p&gt;  &lt;h3&gt;Insert Google Maps&lt;/h3&gt;  &lt;p&gt;For some reason, &lt;a href=&quot;http://gallery.live.com/liveItemDetail.aspx?li=c4b3945e-2f67-4653-a67f-152d3881624b&amp;amp;bt=9&amp;amp;pl=8&quot; target=&quot;_blank&quot;&gt;Insert Google Maps&lt;/a&gt; didn’t work on my system.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 8:23:58 AM"," "," "," "," "
"Constraining Generics","","","Constraining Generics","&lt;p&gt;I love the generic types introduced in .net 2.0, and I knew that you could constrain the generic type by class name, but I didn’t know you could do further constraints, such as that it must be a value type (Of T As Structure) or a reference type (Of T As Class). You can also specify the constraint that is must have a default constructor (Of T As New) or that it must implement a specific interface (Of T As NameOfInterface). Even cooler, you can combine these constraints!!!&lt;/p&gt;  &lt;p&gt;I just LOVE .net :)&lt;/p&gt;  &lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-ConstrainingGenerics_F1BB-image_3.png&quot; width=&quot;653&quot; height=&quot;294&quot; /&gt;&lt;/p&gt;  &lt;p&gt;There is no constraints that the type must have an operator, but you could create an interface the specifies operations and make that interface a constraint. Here’s an example:&lt;/p&gt;  &lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-ConstrainingGenerics_F1BB-image_5.png&quot; width=&quot;634&quot; height=&quot;673&quot; /&gt; &lt;/p&gt;  &lt;p&gt;Another cool item: Generic Delegates. Yes, you can apply generics to delegates &amp;amp; methods, giving you a lot of cool functionality. I won’t go into that for now.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 8:26:34 AM"," "," "," "," "
"My Development Virtual Machine","","","My Development Virtual Machine","&lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot; title=&quot;Virtual Machines&quot; border=&quot;0&quot; alt=&quot;Virtual Machines&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-MyDevelopmentVirtualMachine_5058-Home%20Improvement%2060_3.png&quot; width=&quot;210&quot; height=&quot;320&quot; /&gt; A few years ago, I was blessed to win an MSDN subscription, and with it a number of development tools &amp;amp; OSes. Just recently, I started into building a collection of virtual computers for my own software development as well as for use on NAIT projects, so I thought I would take a moment to outline my dev computer’s contents here.&lt;/p&gt;  &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; This list is still under development…&lt;/em&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;OS – Windows 2003 Server, Standard Edition      &lt;ul&gt;       &lt;li&gt;IIS6 &lt;/li&gt;        &lt;li&gt;.NET Frameworks 2.0, 3.0, and 3.5 &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Software      &lt;ul&gt;       &lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/sql/prodinfo/features/compare-features.mspx?PHPSESSID=0324345d45ef1bf1f764044e03584cd0&quot; target=&quot;_blank&quot;&gt;SQL Server 2005, Developer Edition&lt;/a&gt; + SP2 &lt;/li&gt;        &lt;li&gt;Visual Studio 2008 Team System + &lt;a href=&quot;http://www.microsoft.com/downloads/details.aspx?FamilyID=27673c47-b3b5-4c67-bd99-84e525b5ce61&amp;amp;displaylang=en&quot; target=&quot;_blank&quot;&gt;SP1&lt;/a&gt;           &lt;ul&gt;           &lt;li&gt;SQL Express 2005 &lt;/li&gt;            &lt;li&gt;Free Add-ins:              &lt;ul&gt;               &lt;li&gt;&lt;a href=&quot;http://ankhsvn.open.collab.net/&quot; target=&quot;_blank&quot;&gt;AnkhSVN 2.0&lt;/a&gt; &lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/KB/macros/versioningcontrolledbuild.aspx&quot; target=&quot;_blank&quot;&gt;Versioning Controlled Build&lt;/a&gt; &lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;http://www.nunit.org&quot; target=&quot;_blank&quot;&gt;nUnit 2.5&lt;/a&gt; &lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/vbasic/bb735936.aspx&quot; target=&quot;_blank&quot;&gt;Visual Basic Power Packs&lt;/a&gt; &lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/downloads/details.aspx?FamilyId=c22d6a7b-546f-4407-8ef6-d60c8ee221ed&amp;amp;displaylang=en&quot; target=&quot;_blank&quot;&gt;Silverlight Tools for VS2008 SP1&lt;/a&gt; and &lt;a href=&quot;http://download.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=Silverlight&amp;amp;DownloadId=62368&amp;amp;FileTime=128818992804800000&amp;amp;Build=15036&quot; target=&quot;_blank&quot;&gt;Silverlight Toolkit&lt;/a&gt; &lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;http://www.telerik.com/products/orm.aspx&quot; target=&quot;_blank&quot;&gt;Telerik OpenAccess ORM Express&lt;/a&gt;&amp;#160; &lt;/li&gt;                &lt;li&gt;Alachisoft’s &lt;a href=&quot;http://www.alachisoft.com/tdev/index.html&quot; target=&quot;_blank&quot;&gt;Tier Developer 6.1&lt;/a&gt; ORM &amp;amp; Code Generator (which appears to be utilizing CodeSmith templates!) &lt;/li&gt;             &lt;/ul&gt;           &lt;/li&gt;            &lt;li&gt;Purcha$ed Add-ins:              &lt;ul&gt;               &lt;li&gt;&lt;a href=&quot;http://www.devexpress.com/Products/Visual_Studio_Add-in/Refactoring/index.xml&quot; target=&quot;_blank&quot;&gt;Refactor! Pro&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://www.devexpress.com/Products/Visual_Studio_Add-in/Coding_Assistance/&quot; target=&quot;_blank&quot;&gt;CodeRush&lt;/a&gt; &lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;http://www.typemock.com/Downloads.php&quot; target=&quot;_blank&quot;&gt;TypeMock Isolator 5.3&lt;/a&gt; &lt;/li&gt;             &lt;/ul&gt;           &lt;/li&gt;            &lt;li&gt;???              &lt;ul&gt;               &lt;li&gt;Microsoft Blend &lt;/li&gt;             &lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://editplus.com&quot; target=&quot;_blank&quot;&gt;Edit Plus 3&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://www.codesmithtools.com/&quot; target=&quot;_blank&quot;&gt;CodeSmith Professional 5.0&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://www.scootersoftware.com/&quot; target=&quot;_blank&quot;&gt;Beyond Compare 3&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://www.google.com/chrome&quot; target=&quot;_blank&quot;&gt;Google Chrome&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;Silverlight 2.0 &lt;/li&gt;        &lt;li&gt;SnagIt 8 (the most recent version is &lt;a href=&quot;http://www.techsmith.com/screen-capture.asp&quot; target=&quot;_blank&quot;&gt;SnagIt 9&lt;/a&gt;, which has a lot of improvements!) &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://download.live.com/writer&quot; target=&quot;_blank&quot;&gt;Windows Live Writer 2009&lt;/a&gt; (installed through the &lt;a href=&quot;http://cid-f3d1cb89f9b6fc4f.skydrive.live.com/browse.aspx/Applications&quot; target=&quot;_blank&quot;&gt;.msi&lt;/a&gt; as explained &lt;a href=&quot;http://www.newbtech.com/2009/04/windows-live-writer-2009-installing-on.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;) &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://rarlabs.com/download.htm&quot; target=&quot;_blank&quot;&gt;WinRar&lt;/a&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;My overall approach is to use differencing disks, which allows me to have a base from which to create brand-new computers with all my regular software in under 5 minutes! I’m still building my system, but within this week, I’ll have the base VHDs from which to make a number of virtual machines for the different projects I’m working on. The following diagram illustrates my current plan for what computers I’m hoping to set up.&lt;/p&gt;  &lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-MyDevelopmentVirtualMachine_5058-image_3.png&quot; width=&quot;466&quot; height=&quot;386&quot; /&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 8:31:56 AM"," "," "," "," "
"Virtual Hard Drives - .vhd and .v01","","","Virtual Hard Drives - .vhd and .v01","&lt;p&gt;I was doing a bit of research in the .v01 extension that showed up when I was making a bunch of virtual machines with differencing disks. It turns out that the .v01, .v02, etc. extensions are simply the points at which the virtual hard disk (.vhd) is split on non-NTFS file systems (such as FAT on a USB drive). I ran across &lt;a href=&quot;http://www.wirwar.com/blog/2007/10/26/splitting-a-virtual-pc-vhd/&quot; target=&quot;_blank&quot;&gt;a good blog explaining this&lt;/a&gt;. Here’s what he wrote:&lt;/p&gt;  &lt;div style=&quot;padding-left: 15px&quot;&gt;   &lt;h4&gt;Splitting a Virtual PC VHD&lt;/h4&gt;    &lt;p&gt;Two weeks ago me and some colleagues attended the &lt;a href=&quot;http://www.u2u.be/&quot;&gt;U2U&lt;/a&gt; course&lt;a href=&quot;http://www.u2u.be/CoursePage.aspx?CODE=USP7D&quot;&gt;&lt;em&gt;Developing Microsoft SharePoint 2007 Solutions Part 2: Advanced&lt;/em&gt;&lt;/a&gt;, led by the legendary &lt;a href=&quot;http://weblogs.asp.net/jan/&quot;&gt;Jan “SmartPart” Tielens&lt;/a&gt;. I can recommend this course to everyone interested in SharePoint development. It’s filled with interesting topics and it was put together by the also legendary &lt;a href=&quot;http://blog.u2u.info/DottextWeb/patrick/&quot;&gt;Patrick Tisseghem&lt;/a&gt;. During the course we had to practice the stuff we had learned by going through several hands-on labs. For this U2U provided us with a Virtual PC virtual hard disk image (VHD), that contained a complete SharePoint 2007 developer environment (Windows Server 2003, WSS 3.0, MOSS 2007, Visual Studio 2005, SQL Server 2005, Office 2007 etc.). &lt;/p&gt;    &lt;p&gt;A couple of days ago, back at our office, me and my colleague Harmjan had some spare time and wanted to practice some of the hands-on labs from that course. Unfortunately the hard drive of my Harmjan’s laptop didn’t have enough free space to contain the U2U course VHD, which is about 11GB in size. He did however bring his brandnew &lt;a href=&quot;http://www.apple.com/ipodclassic/&quot;&gt;iPod&lt;/a&gt;, which still had plenty of free disk space. So he asked me to copy the VHD to his iPod, so he could run it from there. &lt;/p&gt;    &lt;p&gt;To my surprise the file copy operation failed! As it turned out Harmjan’s iPod was formatted with the &lt;a href=&quot;http://en.wikipedia.org/wiki/File_Allocation_Table#FAT32&quot;&gt;FAT32&lt;/a&gt; file system. One of the main limitations of this file system is, that the maximum size of a file you can put on it is 4GB (well, it’s 2&lt;sup&gt;32&lt;/sup&gt;-1 actually…). That meant the U2U VHD would never fit. Ofcourse I could have reformatted the iPod to &lt;a href=&quot;http://en.wikipedia.org/wiki/NTFS&quot;&gt;NTFS&lt;/a&gt;, but since an iPod’s firmware doesn’t support this file system it would mean the iPod couldn’t be used as an iPod anymore. &lt;/p&gt;    &lt;p&gt;So there had to be an alternative approach. I remembered I had once encountered a situation where a VHD was splitted into several smaller chunks. I searched for this behaviour in the Virtual PC help file and found this: &lt;/p&gt;    &lt;blockquote&gt;     &lt;p&gt;In some situations, Virtual PC might automatically split a virtual hard disk file into smaller files because of file-size limitations imposed by the host operating system. For example, if the virtual hard disk is stored on a FAT32 volume of the host operating system, it is split into multiple 4GB files.&lt;/p&gt;   &lt;/blockquote&gt;    &lt;p&gt;So this was it! We just had to find a way to split the U2U VHD into several smaller chunks (each less than 4GB). But how to do it? As far as I know Virtual PC has no option to split an existing VHD into smaller chunks. The Virtual Disk wizard only supports this process in the opposite direction, i.e. merging several VHD chunks into one big VHD. I searched the internet, but didn’t find a solution. I did encounter several posts of people who had asked this question before. &lt;a href=&quot;http://blogs.msdn.com/virtual_pc_guy/archive/2007/04/04/unsplitting-a-split-virtual-hard-disk.aspx&quot;&gt;One&lt;/a&gt; of these posts was located on Ben Armstrong’s &lt;a href=&quot;http://blogs.msdn.com/virtual_pc_guy/&quot;&gt;Virtual PC Guy&lt;/a&gt; blog. Unfortunately, from the comments on that post I concluded even he didn’t seem to have an answer. I still sent him an e-mail, asking how to do it, though. &lt;/p&gt;    &lt;p&gt;While waiting for a reply from Ben I got bold and downloaded a copy of the &lt;a href=&quot;http://www.microsoft.com/technet/virtualserver/downloads/vhdspec.mspx&quot;&gt;official VHD specs&lt;/a&gt; from Microsoft. Maybe I could hack together a little tool that would do the job. The only information I could find about splitted VHD’s was this: &lt;/p&gt;    &lt;blockquote&gt;     &lt;p&gt;Versions prior to Microsoft Virtual Server 2005 supported splitting of disk images, if the disk image grew larger than the maximum supported file size on the host file system. &lt;/p&gt;      &lt;p&gt;Some file systems, such as the FAT32 file system, have a 4-GB limit on file size. If the hard disk image expands more than 4 GB, Microsoft Virtual PC 2004 and previous versions will split the hard disk image into another file. The split files do not have any headers or footers, just raw data. The last split file has the footer stored at the end of the file. The first file in the split disk image has an extension of .vhd. The following split files use the .v01, .v02, … filename extension. The split files will be in the same directory as the main hard disk image. The maximum number of split files that can be present is 64.The size of the split file cannot be altered.&lt;/p&gt;   &lt;/blockquote&gt;    &lt;p&gt;There it was! As it turns out a split VHD is nothing more than a normal VHD, chopped up into smaller chunks. No extra headers or footers, just a raw file splitting operation. I couldn’t believe it was this simple. &lt;/p&gt;    &lt;p&gt;So I quickly downloaded a copy of the popular &lt;a href=&quot;http://www.freebyte.com/hjsplit/&quot;&gt;HJSplit&lt;/a&gt; file splitting utility and split the U2U VHD into several chunks, using a maximum chunk size of 3.5GB (I could have used a larger chunk size, but I wanted to be on the safe side). I then renamed the chunks, so they matched the pattern required by Virtual PC (i.e. U2U.vhd, U2U.v01, U2U.v02, U2U.v03, …). I copied the chunks to the iPod and created a new Virtual PC instance (.vmc), that used the newly, splitted, VHD. And guess what… It worked! I experimented with several other chunk sizes and it doesn’t really seem to matter what chunk size you choose. &lt;/p&gt;    &lt;p&gt;I immediately notified Ben Armstrong of my findings and in his reply he said he too was surprised this approach had worked. By now he has already spoken to his colleagues at the Microsoft virtualization team and they confirmed that splitting VHD’s this way is safe and he said he planned to blog about this sometime in the near future.&lt;/p&gt; &lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 8:42:25 AM"," "," "," "," "
"An Unfinished Guide...","","","An Unfinished Guide...","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;I’ve been setting up Portable Apps on my flash drive (after successfully removing U3 &amp;amp; reformatting it), and I was browsing around their site when I found the documentation for developers. So, I thought I would take and adapt the title (“&lt;a href=&quot;http://portableapps.com/development/beginner_packaging&quot; target=&quot;_blank&quot;&gt;An Unfinished Beginner’s Development and Packaging Guide&lt;/a&gt;”) and apply it to the stuff I’m going to write up for DMIT152, Application Programming.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-AnUnfinishedGuide_11B32-image_2.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'20208109'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2009/WLW-AnUnfinishedGuide_11B32-image_thumb.png&quot; width=&quot;640&quot; height=&quot;130&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:14:02 PM"," "," "," "," "
"Testing Email Apps during Development","","","Testing Email Apps during Development","&lt;p&gt;Here’s a good &lt;a href=&quot;http://weblogs.asp.net/dfindley/archive/2006/04/23/Migrating-from-System.Web.Mail-to-System.Net.Mail.aspx&quot; target=&quot;_blank&quot;&gt;article/resource&lt;/a&gt; on testing e-mailing apps in an environment that doesn’t have SMTP. Basically, you add info in the configuration file for dropping the e-mails in a local area, like this:&lt;/p&gt;  &lt;pre class=&quot;code&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #a31515&quot;&gt;system.net&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;&amp;gt;     &amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #a31515&quot;&gt;mailSettings&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;&amp;gt;         &amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #a31515&quot;&gt;smtp &lt;/span&gt;&lt;span style=&quot;color: red&quot;&gt;deliveryMethod&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;=&lt;/span&gt;&amp;quot;&lt;span style=&quot;color: blue&quot;&gt;Network&lt;/span&gt;&amp;quot;&lt;span style=&quot;color: blue&quot;&gt;&amp;gt;             &amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #a31515&quot;&gt;network &lt;/span&gt;&lt;span style=&quot;color: red&quot;&gt;host&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;=&lt;/span&gt;&amp;quot;&lt;span style=&quot;color: blue&quot;&gt;mail.mydomain.com&lt;/span&gt;&amp;quot; &lt;span style=&quot;color: red&quot;&gt;port&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;=&lt;/span&gt;&amp;quot;&lt;span style=&quot;color: blue&quot;&gt;25&lt;/span&gt;&amp;quot; &lt;span style=&quot;color: blue&quot;&gt;/&amp;gt;         &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #a31515&quot;&gt;smtp&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;&amp;gt;         &amp;lt;!-- &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;Use this setting for development   &amp;lt;smtp deliveryMethod=&amp;quot;SpecifiedPickupDirectory&amp;quot;&amp;gt;     &amp;lt;specifiedPickupDirectory pickupDirectoryLocation=&amp;quot;C:\Temp&amp;quot; /&amp;gt;   &amp;lt;/smtp&amp;gt;   &lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;--&amp;gt;     &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #a31515&quot;&gt;mailSettings&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;&amp;gt; &amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #a31515&quot;&gt;system.net&lt;/span&gt;&lt;span style=&quot;color: blue&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt; There’s more to look at &lt;a href=&quot;http://weblogs.asp.net/steveschofield/archive/2007/09/08/smtp-server-on-vista-using-port-25-and-587.aspx&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://weblogs.asp.net/steveschofield/archive/2006/12/19/iis7-post-23-vista-and-smtp-server-where-is-it.aspx&quot; target=&quot;_blank&quot;&gt;here (for leveraging Vista's IIS7 &amp;amp; building &amp;quot;realistic&amp;quot; SMTP forwarding)&lt;/a&gt; as well.&lt;a href=&quot;http://11011.net/software/vspaste&quot;&gt;&lt;/a&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:17:32 PM"," "," "," "," "
"Article on Professional Development","","","Article on Professional Development","&lt;p&gt;&lt;a href=&quot;http://techrepublic.com.com/&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-ArticleonProfessionalDevelopment_81A7-image_3.png&quot; width=&quot;229&quot; height=&quot;70&quot; /&gt;&lt;/a&gt; Here’s a good article from TechRepublic on “&lt;a href=&quot;http://blogs.techrepublic.com.com/programming-and-development/?p=1139&amp;amp;tag=nl.e055&quot; target=&quot;_blank&quot;&gt;10 tips to go from a beginner to intermediate developer&lt;/a&gt;” – a good read for instructors &amp;amp; students alike. In summary, here’s the ten tips:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Learn another language &lt;/li&gt;    &lt;li&gt;Learn advanced search techniques, tactics, and strategies &lt;/li&gt;    &lt;li&gt;Help others &lt;/li&gt;    &lt;li&gt;Be patient and keep practicing &lt;/li&gt;    &lt;li&gt;Leave your dogmas at the door &lt;/li&gt;    &lt;li&gt;Learn a few advanced ideas in-depth &lt;/li&gt;    &lt;li&gt;Learn the basic theories underlying your field &lt;/li&gt;    &lt;li&gt;Look at senior developers’ code &lt;/li&gt;    &lt;li&gt;Learn good habits &lt;/li&gt;    &lt;li&gt;Have fun &lt;/li&gt; &lt;/ol&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:19:05 PM"," "," "," "," "
"&ldquo;Wow! Cool Blogs&rdquo;","","","&ldquo;Wow! Cool Blogs&rdquo;","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-WowCoolBlogs_BC0-image_3.png&quot; width=&quot;350&quot; height=&quot;261&quot; /&gt;Thank you! Thank you!&lt;/p&gt;  &lt;p&gt;I know, you think my blogs are cool. But what’s way cool about them is not just that they got &lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#8000ff&quot;&gt;fancy images&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt; and are so &lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#ff8000&quot;&gt;professional and well-written&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;. What’s cool is that I write it all off-line, using Windows Live Writer (WLW), and then post it up when I’m satisfied with it. I use it for any blog I want: &lt;strong&gt;&lt;u&gt;SharePoint&lt;/u&gt;&lt;/strong&gt;, WordPress, &lt;a href=&quot;http://www.DotNetNuke.com&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;DotNetNuke&lt;/a&gt; portals, whatever!&lt;/p&gt;  &lt;p&gt;I can also edit previous blogs with WLW, and since WLW can run on my USB drive, I can write this from anywhere I want! There’s a whole suite of other features available via WLW plug-ins, including doing &lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-WowCoolBlogs_BC0-image_7.png&quot; width=&quot;183&quot; height=&quot;547&quot; /&gt;Code snippets right out of Visual Studio, &lt;/li&gt;    &lt;li&gt;Polaroid-style pictures, &lt;/li&gt;    &lt;li&gt;Maps from Virtual Earth, &lt;/li&gt;    &lt;li&gt;Video inserts, &lt;/li&gt;    &lt;li&gt;Amazon Links (for those books you like – don’t forget your referral id!), &lt;/li&gt;    &lt;li&gt;and much, much more! &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p style=&quot;clear: both&quot;&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:21:55 PM"," "," "," "," "
"VisualSVN Server and AnkhSVN &ndash; The Best of Both Worlds","","","VisualSVN Server and AnkhSVN &ndash; The Best of Both Worlds","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;Having a code repository while creating code samples is a great team idea, and makes sense from the perspective of keeping everyone up-to-date and coordinated on the code. Thanks to &lt;a href=&quot;http://www.visualsvn.com/server/&quot; target=&quot;_blank&quot;&gt;VisualSVN Server&lt;/a&gt; and &lt;a href=&quot;http://ankhsvn.open.collab.net/&quot; target=&quot;_blank&quot;&gt;AnkhSVN&lt;/a&gt;, it’s easy to get up &amp;amp; running.&lt;/p&gt;  &lt;h2&gt;VisualSVN Server&lt;/h2&gt;  &lt;p&gt;&lt;a href=&quot;http://www.visualsvn.com/server/&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; align=&quot;left&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-VisualSVNServerandAnkhSVNTheBestofBothWo_14C91-image_3.png&quot; width=&quot;226&quot; height=&quot;91&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;The makers of VisualSVN actually have two products: A pay-for client plug-in for Visual Studio (called VisualSVN) and a free server app (called &lt;a href=&quot;http://www.visualsvn.com/server/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;VisualSVN Server&lt;/a&gt;). Of course, I’m recommending the server app. What’s so nice about this is that all the regular hoopla in setting up a Subversion server (particularly for a Windows environment) is all done for you through a short &amp;amp; to-the-point installer. I haven’t tried it yet, myself, but I do know that they have a good reputation, and from my research they appear to be one of the best combinations of price/maturity out there.&lt;/p&gt;  &lt;p&gt;From their own pages, they state:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-VisualSVNServerandAnkhSVNTheBestofBothWo_14C91-image_8.png&quot; width=&quot;244&quot; height=&quot;173&quot; /&gt; “&lt;em&gt;VisualSVN Server is a package that contains everything you need to install, configure and manage Subversion server for your team on Windows platform. It includes Subversion, Apache and a management console.        &lt;br /&gt;You can use any Subversion client to connect to VisualSVN Server or a web browser to quickly browse though repositories. …&lt;/em&gt;&lt;em&gt;        &lt;br /&gt;VisualSVN Server is less than 6MB in size and can be downloaded and installed in a couple of minutes with just few clicks.&lt;/em&gt;”&lt;/p&gt; &lt;/blockquote&gt;  &lt;h2&gt;AnkhSVN&lt;/h2&gt;  &lt;p&gt;&lt;a href=&quot;http://ankhsvn.open.collab.net/&quot;&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; align=&quot;left&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-VisualSVNServerandAnkhSVNTheBestofBothWo_14C91-image_9.png&quot; width=&quot;240&quot; height=&quot;44&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://ankhsvn.open.collab.net/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;AnkhSVN&lt;/a&gt; is a free plug-in for Visual Studio that acts as a Subversion client, which makes it a perfect companion to VisualSVN Server. This is a product I have used, and am currently using in a project on &lt;a href=&quot;http://www.codeplex.com/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;CodePlex&lt;/a&gt;. It works well, and its integration with Visual Studio is quite seamless &lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-VisualSVNServerandAnkhSVNTheBestofBothWo_14C91-image_14.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'7cde65e3'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-VisualSVNServerandAnkhSVNTheBestofBothWo_14C91-image_thumb_4.png&quot; width=&quot;240&quot; height=&quot;221&quot; /&gt;&lt;/a&gt; (even alongside the built-in components of the Team System version of Visual Studio, which I’m running). It’s a full-featured SVN client.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:24:08 PM"," "," "," "," "
"My 2009 Summer of Code","","","My 2009 Summer of Code","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;Well, here I am at the end of another term and going into my May/June “Intercession” time. During Intercession, instructors will do all sorts of “housecleaning” stuff, like getting ready for teaching in September, cleaning their office space, taking some short one &amp;amp; two day courses, etc.&lt;/p&gt;  &lt;p&gt;This summer, many of us will be actively working on curriculum development, and I find myself looking at our 2nd &amp;amp; 3rd term programming courses and dreaming of what they could be. Since I’ll be working on these, it seems a good idea to get my own “Summer Of Code” going, like Google does.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://socghop.appspot.com/program/home/google/gsoc2009&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-My2009SummerofCode_5E46-image_3.png&quot; width=&quot;575&quot; height=&quot;191&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;There’s a few things I would like to learn, and things I would like to develop for my students. I want to give some really good practices for my students to learn &amp;amp; apply in their post-graduate careers, and a couple of hallmark things I would love for them to learn is TDD (Test Driven Development) and Design Patterns. There’s a couple of really good sources I’m looking at exploring as I work a bit on my &lt;a href=&quot;http://code.google.com/p/star-trek-oop&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;Star Trek game project&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Here’s some other thoughts I want to capture as I transition to this summer:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Re-build my machine. I want to only run a virtual machine. &lt;/li&gt;    &lt;li&gt;Come up with a scheme for blogging &amp;amp; writing articles (I’ve got so many locations, both personal and Work, and I need to consolidate).     &lt;br /&gt;&lt;em&gt;&lt;strong&gt;&lt;font color=&quot;#ff8000&quot;&gt;Update&lt;/font&gt;:&lt;/strong&gt; I’ve pretty much decided on my blogging/writing scheme to post as much as possible on &lt;/em&gt;&lt;a href=&quot;&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;my personal “Knowledge Bank”&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. For articles that I have in other places, my knowledge bank (&lt;/em&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;http://kb.Gilleland.info&lt;/em&gt;&lt;/a&gt;&lt;em&gt;) will be just a mirror for those postings.&lt;/em&gt;&lt;/li&gt;    &lt;li&gt;Make some cool software!! &lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:45:25 PM"," "," "," "," "
"Articles by Martin Fowler","","","Articles by Martin Fowler","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div class=&quot;ExternalClass9C29A3F38AFB4C20BA328C94789848DF&quot;&gt;I thought I should make note (for myself &amp;amp; others) of the page that has articles by Martin Fowler. Of interest to me (right now) are the Analysis Patterns. See the following URL: &lt;a href=&quot;http://www.martinfowler.com/articles.html#ap &quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;http://www.martinfowler.com/articles.html#ap&lt;/a&gt;&amp;#160; &lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:48:20 PM"," "," "," "," "
"Nullable Types in VB.NET","","","Nullable Types in VB.NET","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div class=&quot;ExternalClassFDA7CF55A89642AC926FF8D05130ED03&quot;&gt;   &lt;div&gt;I ran accross &lt;a href=&quot;http://bartdesmet.net/blogs/bart/archive/2007/08/30/visual-basic-9-0-feature-focus-nullable-types.aspx&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;this article&lt;/a&gt; about nullable types in VB 9.0. Basically, there is now integrated syntax to denote a nullable type. For example:&lt;/div&gt;   &lt;span style=&quot;text-align: left; text-transform: none; text-indent: 0px; border-collapse: separate; font: 12px/14px verdana; white-space: normal; letter-spacing: normal; color: rgb(51,51,51); word-spacing: 0px&quot; class=&quot;Apple-style-span&quot;&gt;&lt;font color=&quot;#0000ff&quot;&gt;Dim&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/font&gt;age&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;font color=&quot;#0000ff&quot;&gt;As Integer&lt;/font&gt;?&lt;/span&gt;     &lt;div&gt;You will then see that the variable &lt;strong&gt;age&lt;/strong&gt; now has the property &lt;strong&gt;&lt;em&gt;.HasValue&lt;/em&gt;&lt;/strong&gt; that can be checked to see if the value is null or not. This has great potential for the whole issue about databases storing nulls and co-ordinating it with our OOP programming.&lt;/div&gt;    &lt;div&gt;&amp;#160;&lt;/div&gt;    &lt;div&gt;Here's another snippet from the article:&lt;/div&gt;    &lt;blockquote style=&quot;margin-right: 0px&quot; dir=&quot;ltr&quot;&gt;     &lt;div&gt;&lt;span style=&quot;text-align: left; text-transform: none; text-indent: 0px; border-collapse: separate; font: 12px/14px verdana; white-space: normal; letter-spacing: normal; color: rgb(51,51,51); word-spacing: 0px&quot; class=&quot;Apple-style-span&quot;&gt;         &lt;p style=&quot;margin: 1em 0px&quot;&gt;The use of nullables goes even further by means of three-valued logic and&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;strong&gt;null propagation&lt;/strong&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;when working with arithmetic operations on nullable value types. Take a look at the following fragment:&lt;/p&gt;          &lt;blockquote&gt;           &lt;p style=&quot;margin: 1em 0px&quot;&gt;&lt;font color=&quot;#0000ff&quot;&gt;Dim&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/font&gt;a&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;font color=&quot;#0000ff&quot;&gt;As Integer&lt;/font&gt;? =&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;font color=&quot;#0000ff&quot;&gt;Nothing&lt;/font&gt;               &lt;br /&gt;&lt;font color=&quot;#0000ff&quot;&gt;Dim&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/font&gt;b&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;font color=&quot;#0000ff&quot;&gt;As Integer&lt;/font&gt;? = 123               &lt;br /&gt;&lt;font color=&quot;#0000ff&quot;&gt;Dim&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;/font&gt;c&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;#160;&lt;/span&gt;&lt;font color=&quot;#0000ff&quot;&gt;As Integer&lt;/font&gt;? = a + b&lt;/p&gt;         &lt;/blockquote&gt;          &lt;p style=&quot;margin: 1em 0px&quot;&gt;In here c will get the 'value' Nothing. Thus, whenever you apply arithmetic operations on one or more nullables of which one is null-valued (Nothing), the result will be the null value too.&lt;/p&gt;          &lt;p style=&quot;margin: 1em 0px&quot;&gt;Nullable types are especially useful when mapping database schemas to objects, as is done in LINQ to SQL for example. Tomorrow, we'll look at the Ternary Operator 'If' which makes working with these Nullable Types easier in some cases.&lt;/p&gt;       &lt;/span&gt;&lt;/div&gt;   &lt;/blockquote&gt; &lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:49:18 PM"," "," "," "," "
"More Reads to Start 2009","","","More Reads to Start 2009","&lt;div class=&quot;ExternalClass316ED934C77D4680BAF401E7790FE423&quot;&gt;   &lt;div&gt;Here are a list of good reads to start out 2009:&lt;/div&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2008/02/21/powerful-css-techniques-for-effective-coding/&quot;&gt;Powerful CSS-Techniques for Effective Coding&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href=&quot;http://weblog.raganwald.com/2008/04/single-most-important-thing-you-must-do.html&quot;&gt;The Single Most Important Thing You Must Do To Improve Your Programming Career&lt;/a&gt; (self: tell my students!) &lt;/li&gt;      &lt;li&gt;&lt;a href=&quot;http://xkcd.com/378/&quot;&gt;xkcd - A Webcomic&lt;/a&gt; (self: link for my students on my website, &amp;amp; build RSS feed onto front page) &lt;/li&gt;      &lt;li&gt;&lt;a href=&quot;http://thedailywtf.com/&quot;&gt;The Daily WTF&lt;/a&gt; (self: note to my students) &lt;/li&gt;   &lt;/ul&gt; &lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:51:30 PM"," "," "," "," "
"Blog on Project Management","","","Blog on Project Management","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div class=&quot;ExternalClass5F82D7695D9D420FB514AEAD2EEA812D&quot;&gt;   &lt;div&gt;This was a &lt;a href=&quot;http://www.codinghorror.com/blog/archives/001161.html&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;great read&lt;/a&gt; from Jeff Atwood of &lt;em&gt;Coding Horror&lt;/em&gt;. I'm going to have to take some time this coming week to actually follow up on some of the links he has in his article, as it looks like a really good resource for trying to &amp;quot;get the job done&amp;quot;.&lt;/div&gt; &lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:52:52 PM"," "," "," "," "
"IT Industry Revolutionised by Labour Saving Device","","","IT Industry Revolutionised by Labour Saving Device","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div class=&quot;ExternalClassD4BDF972F4B94342BA2E94DB9F85028A&quot;&gt;   &lt;div&gt;An interesting &lt;a href=&quot;http://secretgeek.net/self_click_next.asp&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt; about a new Labour Saving Device that will affect the IT industry. You have to &lt;a href=&quot;http://secretgeek.net/self_click_next.asp&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;read it&lt;/a&gt; to believe it!&lt;/div&gt; &lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:54:35 PM"," "," "," "," "
"Designing for the Social Web","","","Designing for the Social Web","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div class=&quot;ExternalClass0145A0FBA0484AC9B4E592866AEAC8A0&quot;&gt;   &lt;div&gt;I ran accross a &lt;a href=&quot;http://www.nikhilk.net/Entry.aspx?id=218&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;blog post&lt;/a&gt; about a book on designing social experiences on the web. It looks interesting, and might be a good read for consideration on any websites we create for raising student (or prospective student) use of our CST website(s).&lt;/div&gt;    &lt;div&gt;&amp;#160;&lt;/div&gt;    &lt;div&gt;I particularly liked the image &amp;amp; comment on the &lt;strong&gt;Usage Lifecycle&lt;/strong&gt;. That is the &amp;quot;stage[s] a user goes through and the hurdles a designer must design for&amp;quot; in order to create a better social website.&lt;/div&gt;    &lt;div&gt;&amp;#160;&lt;/div&gt;    &lt;div&gt;&lt;img alt=&quot;Usage Lifecycle + Design Hurdles&quot; src=&quot;http://www.nikhilk.net/Content/Posts/Images/SocialWebUsageLifecycle.png&quot; /&gt;&lt;/div&gt; &lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/26/2009 2:56:26 PM"," "," "," "," "
"HTTP Handlers and HTTP Modules","","","HTTP Handlers and HTTP Modules","&lt;p&gt;I've run across an article - &lt;a href=&quot;http://www.15seconds.com/issue/020417.htm&quot; target=&quot;_blank&quot;&gt;&amp;quot;HTTP Handlers and HTTP Modules in ASP.NET&amp;quot;&lt;/a&gt; - that provides a nice introduction and background on the topic, so I thought I would mention it here (for myself and others). The article is from 2002, but it still serves as a good introduction.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 8:34:48 AM","558"," "," ","I've run across an article - &quot;HTTP Handlers and HTTP Modules in ASP.NET&quot; - that provides a nice introduction and background on the topic, so I thought I would mention it here (for myself and others). The article is from 2002, but it still serves as a good introduction."
"Re: Creating Custom Route Constraints","","","Re: Creating Custom Route Constraints","&lt;p&gt;Stephen Walther writes &lt;a href=&quot;http://weblogs.asp.net/stephenwalther/archive/2008/08/06/asp-net-mvc-tip-30-create-custom-route-constraints.aspx&quot; target=&quot;_blank&quot;&gt;an article on creating custom route constraints for web apps&lt;/a&gt;. One particularly interesting constraint is to only allow a certain URL to run if it is run from the local machine (which can be great for an admin to check something that others shouldn't be able to). Here's an excerpt:&lt;/p&gt;  &lt;blockquote&gt;   &lt;h6&gt;Creating a Local Constraint&lt;/h6&gt; &lt;/blockquote&gt;  &lt;blockquote&gt;   &lt;p&gt;You also can create a custom constraint that prevents a request from matching a URL unless the request is made from the local machine. This type of constraint can be useful for restricting access to website administrative pages. &lt;/p&gt; &lt;/blockquote&gt;  &lt;blockquote&gt;   &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;blockquote&gt;   &lt;p&gt;The LocalConstraint simply checks whether the current request is a local request by taking advantage of the Request.IsLocal property. This property returns the value True when the host is either equal to &lt;b&gt;localhost&lt;/b&gt; or &lt;b&gt;127.0.0.1&lt;/b&gt;.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;He goes further by offering suggestions on how to write unit tests for these constraints, illustrating how to fake the HttpContext (look in the download code for this one).&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 8:59:33 AM","2004"," "," ","Stephen Walther writes an article on creating custom route constraints for web apps. One particularly interesting constraint is to only allow a certain URL to run if it is run from the local machine (which can be great for an admin to check something that others shouldn't be able to). Here's an excerpt:    Creating a Local Constraint    You also can create a custom constraint that prevents a request from matching a URL unless the request is made from the local machine. This type of constraint can be useful for restricting access to website administrative pages.     ...    The LocalConstraint simply checks whether the current request is a local request by taking advantage of the Request.IsLocal property. This property returns the value True when the host is either equal to localhost or 127.0.0.1.    He goes further by offering suggestions on how to write unit tests for these constraints, illustrating how to fake the HttpContext (look in the download code for this one)."
"RE: App_Code vs. ascx: Differences you should know...","","","RE: App_Code vs. ascx: Differences you should know...","&lt;p&gt;I just wanted to make note on my blog of &lt;a href=&quot;http://nathanaeljones.com/11021_App_Code_vs_ascx_Differences_you_should_know&quot; target=&quot;_blank&quot;&gt;an article by Nathanael Jones&lt;/a&gt; about relative paths and whether you use user controls (ascx) or opt to make Control subclasses in App_Code. Overall, it's a nice article, and a good reminder of some subtle differences in the two approaches.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 9:04:19 AM","558"," "," ","I just wanted to make note on my blog of an article by Nathanael Jones about relative paths and whether you use user controls (ascx) or opt to make Control subclasses in App_Code. Overall, it's a nice article, and a good reminder of some subtle differences in the two approaches."
"Daily Chess Puzzle","","","Daily Chess Puzzle","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div&gt;A friend recently introduced me to &lt;a href=&quot;http://www.gameknot.com/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;GameKnot&lt;/a&gt; - a place that you can play chess online with others. Among the other interesting features are the Daily Puzzles, which you can also embed in your own site, as I have done on my instructor site. It doesn't insert well into this blog, however, as the script filtering on this rich-text editor strips out the javascript reference that is required to get the game on the site.&lt;/div&gt;  &lt;div&gt;&amp;#160;&lt;/div&gt;  &lt;div&gt;I was, however, able to get the game on &lt;a href=&quot;http://cst.nait.ca/staff/dgilleland/OtherStuff/PlayaLittle/tabid/122/Default.aspx&quot;&gt;my instructor site&lt;/a&gt; at NAIT.&lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 9:13:22 AM","976"," "," ","A friend recently introduced me to GameKnot - a place that you can play chess online with others. Among the other interesting features are the Daily Puzzles, which you can also embed in your own site, as I have done on my instructor site. It doesn't insert well into this blog, however, as the script filtering on this rich-text editor strips out the javascript reference that is required to get the game on the site.  I was, however, able to get the game on my instructor site at NAIT."
"Tectonic Plates","","","Tectonic Plates","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;Every once in a while I like to go to &lt;a href=&quot;http://www.discoverychannel.ca/&quot; target=&quot;_blank&quot;&gt;Discovery Channel Online&lt;/a&gt; and view some of the various shows. This was a neat show about our Earth's &lt;a href=&quot;http://watch.discoverychannel.ca/cooler-facts/season-1/cooler-facts-ep-101-110/#clip59643&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;tectonic activity&lt;/a&gt;, and I thought I would mention it briefly in my blog (if only so I remember the link :).&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 9:14:53 AM","488"," "," ","Every once in a while I like to go to Discovery Channel Online and view some of the various shows. This was a neat show about our Earth's tectonic activity, and I thought I would mention it briefly in my blog (if only so I remember the link :)."
"Remote Control Planes","","","Remote Control Planes","&lt;div&gt;Here are a couple of cool movies of a remote-control plane with a camera and VR (virtual reality) headset. The first one has a nice added sound-track. (A co-worker showed one to me, &amp;amp; I found the other on the internet.)&lt;/div&gt;  &lt;div&gt;&amp;#160;&lt;/div&gt;  &lt;div&gt;&lt;font color=&quot;#0000ff&quot;&gt;&lt;u&gt;&lt;a href=&quot;http://www.metacafe.com/watch/354083/aerobatic_flight_onboard_easystar_planes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Lower &amp;amp; Closer (R-C planes) - Google Video&lt;/a&gt;&lt;a href=&quot;http://video.google.fr/videoplay?docid=-6841229546604159614&amp;amp;hl=fr&quot;&gt;&lt;/a&gt;&lt;/u&gt;&lt;/font&gt;&lt;/div&gt;  &lt;div&gt;&lt;u&gt;&lt;font color=&quot;#0000ff&quot;&gt;&lt;a href=&quot;http://www.metacafe.com/watch/303408/royal_bromont_golf_club_video_pilotage_of_r_c_planes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Bromont golf club - Google Video&lt;/a&gt;&lt;/font&gt;&lt;/u&gt;&lt;/div&gt; &lt;font color=&quot;#0000ff&quot;&gt;   &lt;div&gt;&lt;u&gt;       &lt;hr /&gt;&lt;/u&gt;&lt;/div&gt;    &lt;div&gt;&lt;u&gt;[&lt;/u&gt;edit]: I found the following taken from &lt;a href=&quot;http://www.rcgroups.com/forums/showthread.php?t=616822&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;a blog post &lt;/a&gt;by the French-Canadian who created the videos. Here's the links he gives to his videos...&lt;/div&gt;    &lt;div&gt;     &lt;br /&gt;Canadian autumn ([his] best one)       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/303404/canadian_autumn_video_pilotage_of_r_c_planes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/30340..._of_r_c_planes/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;The best of Pizzaz ([his] second best video)       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/348727/beautiful_aerial_video_from_canada/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/34872...eo_from_canada/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;A dream come true       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/334792/video_pilotage_a_dream_come_true/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/33479...ream_come_true/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;Flying few feets above F1 race track for a complete tour       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/340854/complete_tour_of_f1_race_track_onboard_a_radio_control_planes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/34085...n trol_planes/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;Bassin d'a&#233;ration (beautiful)       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/337623/bassin_daeration_video_pilotage/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/33762...video_pilotage/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;Onboard my aerobatic plane Funtana       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/340015/aerobatic_flight_onboard_funtana_planes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/34001...funtana_planes/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;Lower &amp;amp; closer       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/354083/aerobatic_flight_onboard_easystar_planes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/35408...asystar_planes/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;TrackR1 test video to show AeroPix headtracker       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/355003/dancing_in_the_wind_onboard_my_planes/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/35500...oard_my_planes/&lt;/a&gt;       &lt;br /&gt;      &lt;br /&gt;Dream day       &lt;br /&gt;&lt;a href=&quot;http://www.metacafe.com/watch/354092/dream_day_beautiful_r_c_planes_video_from_the_cockpit_view/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;http://www.metacafe.com/watch/35409...cock pit_view/&lt;/a&gt;       &lt;br /&gt;&lt;/div&gt; &lt;/font&gt;  &lt;div&gt;&lt;u&gt;&lt;font color=&quot;#0000ff&quot;&gt;&lt;/font&gt;&lt;/u&gt;&amp;#160;&lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 9:40:08 AM","2550"," "," ","Here are a couple of cool movies of a remote-control plane with a camera and VR (virtual reality) headset. The first one has a nice added sound-track. (A co-worker showed one to me, &amp; I found the other on the internet.)  Lower &amp; Closer (R-C planes) - Google Video Bromont golf club - Google Video   [edit]: I found the following taken from a blog post by the French-Canadian who created the videos. Here's the links he gives to his videos...  Canadian autumn ([his] best one) http://www.metacafe.com/watch/30340..._of_r_c_planes/  The best of Pizzaz ([his] second best video) http://www.metacafe.com/watch/34872...eo_from_canada/  A dream come true http://www.metacafe.com/watch/33479...ream_come_true/  Flying few feets above F1 race track for a complete tour http://www.metacafe.com/watch/34085...n trol_planes/  Bassin d'a&#233;ration (beautiful) http://www.metacafe.com/watch/33762...video_pilotage/  Onboard my aerobatic plane Funtana http://www.metacafe.com/watch/34001...funtana_planes/  Lower &amp; closer http://www.metacafe.com/watch/35408...asystar_planes/  TrackR1 test video to show AeroPix headtracker  http://www.metacafe.com/watch/35500...oard_my_planes/  Dream day http://www.metacafe.com/watch/35409...cock pit_view/"
"Silverlight Interoperability","","","Silverlight Interoperability","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;If you've heard of Silverlight but are not sure of how to integrate it with what you've already got (&amp;quot;I'm already using Ajax&amp;quot; or &amp;quot;I'm not really wanting to replace what I've got with Silverlight&amp;quot;), then this might be a good article to read. It's got some code snippets, but it doesn't focus on a single aspect or usage of Silverlight. Rather, it tries to show how Silverlight can be used &amp;quot;to enhance your existing website in a &lt;em&gt;non-obtrusive&lt;/em&gt; way&amp;quot;.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://wilcob.com/Wilco/News/silverlight-interoperability.aspx&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;Wilco Bauwer - &amp;quot;Silverlight Interoperability&amp;quot;&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 9:58:05 AM","1070"," "," ","If you've heard of Silverlight but are not sure of how to integrate it with what you've already got (&quot;I'm already using Ajax&quot; or &quot;I'm not really wanting to replace what I've got with Silverlight&quot;), then this might be a good article to read. It's got some code snippets, but it doesn't focus on a single aspect or usage of Silverlight. Rather, it tries to show how Silverlight can be used &quot;to enhance your existing website in a non-obtrusive way&quot;.  Wilco Bauwer - &quot;Silverlight Interoperability&quot;"
"IE Developer Toolbar","","","IE Developer Toolbar","&lt;p&gt;If you're involved in developing web sites or Web Applications in any way, then it's a good idea to get the &lt;a href=&quot;http://www.microsoft.com/downloads/details.aspx?FamilyID=E59C3964-672D-4511-BB3E-2D5E1DB91038&amp;amp;displaylang=en&quot; target=&quot;_blank&quot;&gt;IE Developer Toolbar&lt;/a&gt;. You get quite a lot of information on a page you browse. Here's a screen-shot.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://upbfsq.bay.livefilestore.com/y1pkaOiYRnRDFN-1vW8jsMRdbqN4f3xicw01YM8jXorBUjwNSA2eXE-48gDosPVfh-dgD2Q-yATIrN82eLXJ92mVQ?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://upbfsq.bay.livefilestore.com/y1p8avUNX-TbKzCUjtq1e8YRdT1lfJf95hOwxRLN00VkmM5nYq-cc_Gp5L3jGKs71vEj3AAdoqcDlL-Gi6IZaJivMtV3-VFzxTH?PARTNER=WRITER&quot; width=&quot;644&quot; height=&quot;160&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;There are a lot of great tools &amp;amp; features hidden in those menu items, like the ruler under the Tools menu (see image below).&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWKcPUi6OzftGVsPDT7InenDYG-5jDihlbswKrOJuvu95SR56Bxb8VPmUaPJaxl98-XgDpjpyOiD5HS212Gj-UPs?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWIG6OoEX-6tEJmCf56fGq47UXIpeYA_kLxp4s3hSel0rK1LZO1K8Gz4zCp8Af_CxmNN2JXlxrLTMV12G7O-nX9C?PARTNER=WRITER&quot; width=&quot;244&quot; height=&quot;118&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;This allows you to actually see measurements of stuff on your screen, like this:&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://upbfsq.bay.livefilestore.com/y1p8avUNX-TbKxfn3_pt3m-rWM9T2VQLtG_3CuXyefQIMyn2W9Nh5DdOjPlZy44Q4E6aJBtbjCLKHRfBVBju4phHP_yqruXBq4C?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://upbfsq.bay.livefilestore.com/y1p8avUNX-TbKzPSlC8EcuvbiT3Bou70bxVxsmT5SvAvBoNQza1eonfuAgvM3fSTqiGyRcE34fsnoKpDUtOSixGKeikOhpzBqm2?PARTNER=WRITER&quot; width=&quot;644&quot; height=&quot;138&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;This is definitely a good tool to use. I'll be exploring it more as time goes on....&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 1:34:03 PM","1048"," "," ","If you're involved in developing web sites or Web Applications in any way, then it's a good idea to get the IE Developer Toolbar. You get quite a lot of information on a page you browse. Here's a screen-shot.    There are a lot of great tools &amp; features hidden in those menu items, like the ruler under the Tools menu (see image below).    This allows you to actually see measurements of stuff on your screen, like this:    This is definitely a good tool to use. I'll be exploring it more as time goes on...."
"Starting with Windows Live Writer","","","Starting with Windows Live Writer","&lt;p&gt;[DRAFT - I'll update this to a more complete list later; I just wanted to get it started for now...]&lt;/p&gt;  &lt;p&gt;If you're just starting out with Windows Live Writer (also known as WLW), you might want to check out these articles/blogs:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.makeuseof.com/tag/five-things-to-do-after-installing-windows-live-writer/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Five Things to do After Starting Windows Live Writer&lt;/strong&gt;&lt;/a&gt; - The name says it all! &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://windowslivewriter.spaces.live.com/Blog/cns!D85741BB5E0BE8AA!1383.entry&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Automatic Server Pinging&lt;/strong&gt;&lt;/a&gt; - While mentioned in the &amp;quot;Five things...&amp;quot; article above, this blog gives a bit more info on what the Server Pinging is all about. &lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 2:14:07 PM","948"," "," ","[DRAFT - I'll update this to a more complete list later; I just wanted to get it started for now...]  If you're just starting out with Windows Live Writer (also known as WLW), you might want to check out these articles/blogs:  Five Things to do After Starting Windows Live Writer - The name says it all!  Automatic Server Pinging - While mentioned in the &quot;Five things...&quot; article above, this blog gives a bit more info on what the Server Pinging is all about."
"Ajax vs. Silverlight and .NET","","","Ajax vs. Silverlight and .NET","&lt;p&gt;Nikhil Kothari makes some good observations regarding the spectrum of technologies available to developers in his blog &amp;quot;&lt;a href=&quot;http://www.nikhilk.net/Entry.aspx?id=190&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Ajax vs. Silverlight and .NET&lt;/strong&gt;&lt;/a&gt;&amp;quot;. He places the different technologies (&amp;amp; their popular combinations) on an axis that has &lt;strong&gt;Broader Reach&lt;/strong&gt; on one end (meaning that they target browsers without much demand for specific client-side software other than what the browser itself has) and &lt;strong&gt;Greater Capabilities&lt;/strong&gt; on the other (where these capabilities are supported by more client-side software beyond &amp;amp;/or integrated into the browser).&lt;/p&gt;  &lt;p&gt;Overall, it's a great intro to where the technologies fit on the spectrum. Thanks Nikhil!&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 2:15:43 PM","1306"," "," ","Nikhil Kothari makes some good observations regarding the spectrum of technologies available to developers in his blog &quot;Ajax vs. Silverlight and .NET&quot;. He places the different technologies (&amp; their popular combinations) on an axis that has Broader Reach on one end (meaning that they target browsers without much demand for specific client-side software other than what the browser itself has) and Greater Capabilities on the other (where these capabilities are supported by more client-side software beyond &amp;/or integrated into the browser).  Overall, it's a great intro to where the technologies fit on the spectrum. Thanks Nikhil!"
"Why Patterns - Developer Fusion - Visual Basic, C# Programming, ASP.NET, .NET Framework and Java Tutorials","","","Why Patterns - Developer Fusion - Visual Basic, C# Programming, ASP.NET, .NET Framework and Java Tutorials","&lt;p&gt;Wonderful article as to why patterns are so important to know for software developers. The analogy to carpentry is perfect, and has now become my best argument for teaching this stuff in our 2-year diploma at &lt;a href=&quot;http://cst.nait.ca&quot; target=&quot;_blank&quot;&gt;CST&lt;/a&gt;. Here's the analogy:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;Imagine two carpenters talking; they are discussing the type of joint to use for a set of drawers they are making. One asks: &lt;/p&gt;    &lt;p&gt;&lt;em&gt;“What sort of joint are you going to make for the drawer?”&lt;/em&gt; &lt;/p&gt;    &lt;p&gt;And the other replies: &lt;/p&gt;    &lt;p&gt;&lt;em&gt;“I’ll take the wood, cut down about 2 centimetres; cut back up at a forty-five degree angle; cut down 4 centimetres then back up at forty-five degrees; then down again and up at forty-five degrees; then...”&lt;/em&gt; &lt;/p&gt;    &lt;p&gt;What the second carpenter is discussing is how to cut a dovetail joint, a standard type of joint in woodworking. Describing the joint in this way does not aid communication; in fact it hinders communication. If the second carpenter said “I’m going to use a dovetail joint” or “I’m going to use a mortise and tenon joint” that communicates far more information in far fewer words. &lt;/p&gt;    &lt;p&gt;In the second case the carpenters are describing common joints and can make a decision based on their understanding of the joints, such as the cost versus complexity of each joint; the strength of each joint; and the suitability of each joint to the job. &lt;/p&gt;    &lt;p&gt;This is where patterns come into play in software development. If a developer can say “I’m using the Strategy pattern” or “I’m using the Factory Method pattern”, this conveys lots of meaning to another developer who understands the patterns and how they are used.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Take the time to read the full article (see link below). And while you're at it, check out the book Head First Design Patterns by O'Reilly. &lt;/p&gt;  &lt;table border=&quot;0&quot;&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign=&quot;top&quot;&gt;&lt;a href=&quot;http://www.amazon.com/gp/redirect.html%3FASIN=0596007124%26tag=ws%26lcode=sp1%26cID=2025%26ccmID=165953%26location=/o/ASIN/0596007124%253FSubscriptionId=0525E2PQ81DD7ZTWTK82&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Head First Design Patterns&quot; src=&quot;http://ecx.images-amazon.com/images/I/51K9sS3dc1L._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA240_SH20_OU01_.jpg&quot; /&gt;&lt;/a&gt;&lt;/td&gt;        &lt;td valign=&quot;top&quot;&gt;&lt;b&gt;Head First Design Patterns (Head First)&lt;/b&gt;           &lt;br /&gt;by Elisabeth Freeman, Eric Freeman, Bert Bates, Kathy Sierra           &lt;br /&gt;          &lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/gp/redirect.html%3FASIN=0596007124%26tag=ws%26lcode=sp1%26cID=2025%26ccmID=165953%26location=/o/ASIN/0596007124%253FSubscriptionId=0525E2PQ81DD7ZTWTK82&quot; target=&quot;_blank&quot;&gt;Read more about this book...&lt;/a&gt;&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;  &lt;p&gt;&amp;#160; &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.developerfusion.co.uk/show/7609/&quot;&gt;Why Patterns - Developer Fusion - Visual Basic, C# Programming, ASP.NET, .NET Framework and Java Tutorials&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;div style=&quot;padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px&quot;&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/Design Patterns&quot; rel=&quot;tag&quot;&gt;Design Patterns&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 2:21:16 PM","4036"," "," ","Wonderful article as to why patterns are so important to know for software developers. The analogy to carpentry is perfect, and has now become my best argument for teaching this stuff in our 2-year diploma at CST. Here's the analogy:    Imagine two carpenters talking; they are discussing the type of joint to use for a set of drawers they are making. One asks:   “What sort of joint are you going to make for the drawer?”   And the other replies:   “I’ll take the wood, cut down about 2 centimetres; cut back up at a forty-five degree angle; cut down 4 centimetres then back up at forty-five degrees; then down again and up at forty-five degrees; then...”   What the second carpenter is discussing is how to cut a dovetail joint, a standard type of joint in woodworking. Describing the joint in this way does not aid communication; in fact it hinders communication. If the second carpenter said “I’m going to use a dovetail joint” or “I’m going to use a mortise and tenon joint” that communicates far more information in far fewer words.   In the second case the carpenters are describing common joints and can make a decision based on their understanding of the joints, such as the cost versus complexity of each joint; the strength of each joint; and the suitability of each joint to the job.   This is where patterns come into play in software development. If a developer can say “I’m using the Strategy pattern” or “I’m using the Factory Method pattern”, this conveys lots of meaning to another developer who understands the patterns and how they are used.    Take the time to read the full article (see link below). And while you're at it, check out the book Head First Design Patterns by O'Reilly.   Head First Design Patterns (Head First) by Elisabeth Freeman, Eric Freeman, Bert Bates, Kathy Sierra  Read more about this book...     Why Patterns - Developer Fusion - Visual Basic, C# Programming, ASP.NET, .NET Framework and Java Tutorials     Technorati Tags: Design Patterns"
"CodeProject: ASP.NET AJAX Best Practices. Free source code and programming help","","","CodeProject: ASP.NET AJAX Best Practices. Free source code and programming help","&lt;p&gt;Good article on some best practices for AJAX (specifically the JavaScript part of AJAX). It's worth the read! &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.codeproject.com/KB/ajax/AspNetAjaxBestPractices.aspx&quot; target=&quot;_blank&quot;&gt;CodeProject: ASP.NET AJAX Best Practices. Free source code and programming help&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 2:22:23 PM","386"," "," ","Good article on some best practices for AJAX (specifically the JavaScript part of AJAX). It's worth the read!   CodeProject: ASP.NET AJAX Best Practices. Free source code and programming help"
"metaPost &amp; Me","","","metaPost &amp; Me","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;I've been working on a provider for metaPost, which is a DotNetNuke module that allows publishing content to a DNN portal via tools like Windows Live Writer. With metaPost, you can publish to the Blog module, Ventrian's News Articles, regular text/html modules, and the FAQ module. The provider I'm working on is for the Announcements module, and I hope to have that done in a few weeks.&lt;/p&gt;  &lt;p&gt;You can read more about my progress in the &lt;a href=&quot;http://dnn.itcrossing.com/metaPostTeamBlog/tabid/258/BlogID/28/Default.aspx&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;blog for the Announcements module&lt;/a&gt;.&lt;/p&gt;  &lt;div style=&quot;padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px&quot;&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/DotNetNuke&quot; rel=&quot;tag&quot;&gt;DotNetNuke&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 2:23:59 PM","998"," "," ","I've been working on a provider for metaPost, which is a DotNetNuke module that allows publishing content to a DNN portal via tools like Windows Live Writer. With metaPost, you can publish to the Blog module, Ventrian's News Articles, regular text/html modules, and the FAQ module. The provider I'm working on is for the Announcements module, and I hope to have that done in a few weeks.  You can read more about my progress in the blog for the Announcements module.  Technorati Tags: DotNetNuke"
"Improving Vista Performance","","","Improving Vista Performance","&lt;p&gt;I just checked out an article on &lt;a href=&quot;http://windowshelp.microsoft.com/windows/en-us/Help/596FB57F-CC9D-4AC5-A813-5C0830E9156A1033.mspx&quot; target=&quot;_blank&quot;&gt;tips to improve Vista performance&lt;/a&gt;. Now, most of these tips I already knew about, but one tip caught my eye and prompted this blog: &lt;strong&gt;ReadyBoost&lt;/strong&gt;.&lt;/p&gt;  &lt;p&gt;It appears that &lt;strong&gt;ReadyBoost&lt;/strong&gt; is a way to use the Flash drive memory from a memory stick to support the OS's memory swapping. Quoting the article, &amp;quot;Microsoft estimates that you can benefit from a ReadyBoost cache equal to approximately 150 percent of your system RAM—for example, a 1.5 GB ReadyBoost cache on a 1 GB system.&amp;quot; So, is you've got 2GB RAM already, you can use about 3GB of the flash drive for ReadyBoost caching. Cool!&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 5:37:11 PM","1232"," "," ","I just checked out an article on tips to improve Vista performance. Now, most of these tips I already knew about, but one tip caught my eye and prompted this blog: ReadyBoost.  It appears that ReadyBoost is a way to use the Flash drive memory from a memory stick to support the OS's memory swapping. Quoting the article, &quot;Microsoft estimates that you can benefit from a ReadyBoost cache equal to approximately 150 percent of your system RAM—for example, a 1.5 GB ReadyBoost cache on a 1 GB system.&quot; So, is you've got 2GB RAM already, you can use about 3GB of the flash drive for ReadyBoost caching. Cool!"
"Visio Guy &raquo; Blog Archive &raquo; Do You Know Your Elements? A Visio Periodic Table","","","Visio Guy &raquo; Blog Archive &raquo; Do You Know Your Elements? A Visio Periodic Table","&lt;p&gt;OK, these Visio templates are just too cool! Not only are the Periodic Table shapes cool, but there are a lot of others too:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.visguy.com/2008/01/23/visio-bingo-template/&quot; target=&quot;_blank&quot;&gt;Bingo&lt;/a&gt; shapes &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.visguy.com/2007/12/03/smartshape-tutorial-fading-trees/&quot; target=&quot;_blank&quot;&gt;Smart-Fading Tree&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.visguy.com/2007/12/03/smartshape-tutorial-fading-trees/&quot; target=&quot;_blank&quot;&gt;USB Stick&lt;/a&gt; shape &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.visguy.com/2007/06/06/multi-earth-shape/&quot; target=&quot;_blank&quot;&gt;Multi-Earth&lt;/a&gt; shape &lt;/li&gt;    &lt;li&gt;and many more that I won't list here but that you can find at &lt;a title=&quot;http://www.visguy.com/shapes/&quot; href=&quot;http://www.visguy.com/shapes/&quot;&gt;http://www.visguy.com/shapes/&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I ran across these when I was doing a quick search for Visio templates that I could use for quickly mocking up web page and web control elements. I also ran across &lt;a href=&quot;http://www.guuui.com/issues/02_07.php&quot; target=&quot;_blank&quot;&gt;this template&lt;/a&gt; from the Interaction Designer's Coffee Break blog.&lt;/p&gt;  &lt;p&gt;Lastly, I have to make note of how the Visio Guy actually takes time to explain how his templates work and are designed. For example, take a look at his description of how to make a &lt;a href=&quot;http://www.visguy.com/2008/03/18/how-to-draw-glass-in-visio/&quot; target=&quot;_blank&quot;&gt;glass cover effect&lt;/a&gt; - wow! And, he has &lt;a href=&quot;http://www.visguy.com/2007/05/04/data-graphics-resources/&quot; target=&quot;_blank&quot;&gt;references to other good resources&lt;/a&gt; for those interested in creating their own Visio graphics.&lt;/p&gt;  &lt;p&gt;Of course, seeing is believing, and it behoves me (I love to use rarely-used words) to show you some screen-shots.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWK7Os36abJRpYfizrrebR2b9TG79Zkqo15B4gDywM3MJ9nafFXrylyJLXcQ4aRfBLoF1Ribs8VLBAgKXLGQw9Qq?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWKMoioljn3v5fqq-7J1yr1UjY0XJFMBJU_SoJnxjDclqLGOhHTnlMdPeHx7paHEpI6NtLmK1aCHddhUbK9Rl6Ae?PARTNER=WRITER&quot; width=&quot;102&quot; height=&quot;69&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWJp74kYe_EsgxKv-y2Hy9zqJZITOgOuH8tS4XeiT9OHuaH_oZ1PHcHtRfiiLJLDiJHxZZkI3o8mr1JaimKRQprG?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWIbGYCaa8oUhUHrRRf93Em1DzFtiLKo1UtP-eb3Sx6RZvhyX2H1u83JCVd8w53DWUML4aySfAx1NijaWJJN9sHd?PARTNER=WRITER&quot; width=&quot;155&quot; height=&quot;129&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWJ_wiQjdQxn9pmQH8f1U6D_7OTp0817smTlgmRX4gNZUVnp0-a9d9JADzVdt5T5JXEJudTJqo1Sesvja9Nvcblp?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWKR7cFrkm1CqiK3jQY8HtY-ORHLTV03khR1a12krZkQ3kOZgrVwV9mpIM8-BgtU7RPzPw59z7_GNfVfj5hzs6ft?PARTNER=WRITER&quot; width=&quot;131&quot; height=&quot;149&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWIUCmavlGRtaDCshdne4-cHCt61iE9I3Xm6nZA9xbballqHykjCCiZXRcMaWg59HW-Mu_7t0q1juBHCBcAyZ2H-?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWLt9DLaCyakriVzCc48REnOQ2x7Mg1pb6Useo0fgDMjEZzPllnHXHGG--QzfqAkvjIvoQAIX6jzce7tEK4Vv4so?PARTNER=WRITER&quot; width=&quot;155&quot; height=&quot;155&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWLq7czCM905jJGA5GgSNcciWRRRvflJkftAALRs1ggaz6ajbTpF_6CkYTw9otAsLuZXPm7S3WgxWIlQNATO1x8m?PARTNER=WRITER&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://by1.storage.msn.com/y1p2B_z1PZsOWIVxenzCKYnjbw4hHMWLfYqdbd9SYjTGSSL_eyhkMt_kD0tWdp_8XTqB6OnfptbE83zzafgUdYVL9WCdFmTf53d?PARTNER=WRITER&quot; width=&quot;242&quot; height=&quot;244&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Thank you &amp;quot;Visio Guy&amp;quot; (aka Chris Roth)! &lt;/strong&gt;(And by the way, you can donate if you use &amp;amp; appreciate his work...)     &lt;br /&gt;&amp;#160;&lt;a href=&quot;http://www.visguy.com/about/&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://byfiles.storage.msn.com/y1pVsZrE6WdSxrPdfupNrazCEt-2S4dZq2kOF502MgBn4AC-NiClTro0bkaR7rBbT-z7VQyfHkVs8A?PARTNER=WRITER&quot; width=&quot;214&quot; height=&quot;112&quot; /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;div style=&quot;padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px&quot;&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/Visio&quot; rel=&quot;tag&quot;&gt;Visio&lt;/a&gt;&lt;/div&gt;  &lt;p&gt;&lt;a href=&quot;http://www.visguy.com/2008/02/23/do-you-know-your-elements-a-visio-periodic-table/&quot;&gt;Visio Guy &#187; Blog Archive &#187; Do You Know Your Elements? A Visio Periodic Table&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 5:38:49 PM","2424"," "," ","OK, these Visio templates are just too cool! Not only are the Periodic Table shapes cool, but there are a lot of others too:  Bingo shapes  Smart-Fading Tree  USB Stick shape   Multi-Earth shape  and many more that I won't list here but that you can find at http://www.visguy.com/shapes/  I ran across these when I was doing a quick search for Visio templates that I could use for quickly mocking up web page and web control elements. I also ran across this template from the Interaction Designer's Coffee Break blog.  Lastly, I have to make note of how the Visio Guy actually takes time to explain how his templates work and are designed. For example, take a look at his description of how to make a glass cover effect - wow! And, he has references to other good resources for those interested in creating their own Visio graphics.  Of course, seeing is believing, and it behoves me (I love to use rarely-used words) to show you some screen-shots.      Thank you &quot;Visio Guy&quot; (aka Chris Roth)! (And by the way, you can donate if you use &amp; appreciate his work...)   Technorati Tags: Visio  Visio Guy &#187; Blog Archive &#187; Do You Know Your Elements? A Visio Periodic Table"
"[Internet Explorer], Firefox, Safari, or Neither? Whatever! - (article at washingtonpost.com)","","","[Internet Explorer], Firefox, Safari, or Neither? Whatever! - (article at washingtonpost.com)","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot; face=&quot;Courier New&quot;&gt;&amp;lt;Rant&amp;gt;&lt;/font&gt;&lt;/strong&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;I couldn't help but read &lt;!--Begin mp_html_link_1_69ddd000--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_69ddd000'  } )&quot; target=&quot;_blank&quot;&gt;the line&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_69ddd000--&gt; in an article (see link below to visit the full article) about &lt;!--Begin mp_html_link_1_69ddd000--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_69ddd000'  } )&quot; target=&quot;_blank&quot;&gt;&amp;quot;poor standards compliance with IE&amp;quot;&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_69ddd000--&gt; and think to myself:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&amp;quot;You know, most users don't really care about 'poor standards compliance' in a browser; they just want it to browse the page safely &amp;amp; look nice.&amp;quot;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;And that's not a small point to consider. Come on, people! The only ones who care about &amp;quot;standards compliance&amp;quot; are the &lt;em&gt;developers&lt;/em&gt;, not the people viewing the sites. Developers want standards compliance because it will make their lives easier. The average Joe doesn't really care about making the lives of web developers easier - they just want to see the pages they're looking for. Web developers still make up only a small percentage of the people who actually browse the Internet, and I would not be surprised to see if many web developers actually (gasp!) have &lt;em&gt;&lt;!--Begin mp_html_link_2_69ddd000--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_2_69ddd000'  } )&quot; target=&quot;_blank&quot;&gt;&lt;strike&gt;both&lt;/strike&gt; most&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;2&lt;/sup&gt;&lt;!--End mp_html_link_2_69ddd000--&gt;&lt;/em&gt; of these browsers installed on their computers - if only to test their pages for both audiences.&lt;/p&gt;  &lt;!--Begin mp_html_detail_2_69ddd000--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_2_69ddd000&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;2&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_2_69ddd000--&gt; &lt;p&gt;Originally, I referred to “both”, and I included the following comment:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;For those of you who might take me to task on referring to &amp;quot;both&amp;quot; browsers (as if there were only two), that is simply because there are only two &lt;em&gt;major&lt;/em&gt; choices among users. Yes, there's Safari, Opera, et.al., but these are small fish in a big pool, and the majority of people still say &amp;quot;Who?&amp;quot; when those browsers are mentioned.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;img style=&quot;margin: 0px 10px 0px 0px; display: inline&quot; align=&quot;left&quot; src=&quot;http://www.google.com/chrome/intl/en/images/logo_sm.jpg&quot; /&gt; Since that time, Google has come out with its own browser (&lt;a href=&quot;http://www.google.com/chrome&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;Chrome&lt;/a&gt;), and it is gaining in popularity (see &lt;a href=&quot;http://www.readwriteweb.com/archives/chrome_market_share_webtrends.php&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://dailyconnect.in/2008/09/19/google-chrome-browser-is-gaining-popularity-webtrends/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;). I used to be quite satisfied with IE, and never really got onto the FireFox band wagon (nothing wrong with FireFox – I just tried it and didn’t find it offered that much for me over IE).&lt;/p&gt;  &lt;p&gt;Well, times have changed, and now I almost exclusively use &lt;a title=&quot;mp&quot; href=&quot;http://www.google.com/chrome&quot; target=&quot;_blank&quot;&gt;Chrome&lt;/a&gt;. And, in case you’re wondering, my switch was from an end-user’s experience (it was fast &amp;amp; didn’t crash much) and &lt;em&gt;not&lt;/em&gt; from a developer’s experience (i.e., standards compliance didn’t have anything to do with it).&lt;/p&gt;&lt;!--End mp_html_detail_body_2_69ddd000--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_2_69ddd000--&gt;   &lt;p&gt;Personally, I don't care either, anymore. Hey, I'm a part time web developer, back from the days when the browser compatibility issues were &lt;em&gt;really, really&lt;/em&gt; painful (HTML, JavaScript, CSS). I know the pain developers feel around standards compliance. I have felt the pain. But as I stare in the eyes of my non-techy friends who haven't a clue of what I mean when I refer to different browser DOMs or having to do CSS hacks - when I stare into those eyes that look bewildered and hear them say &amp;quot;It looked fine to me,&amp;quot; then I realize that the only reason my shorts are in a knot is because &lt;em&gt;I&lt;/em&gt; (the developer) was the one who tied it up in the first place. Now that I've aged a bit, and have seen how far browser builders have come in getting their individual &amp;quot;standards&amp;quot; to mesh, I find the differences just don't bother me anymore.&lt;/p&gt;  &lt;p&gt;And, now-a-days, I don't think they bother my non-techy friends either.&lt;/p&gt;  &lt;p&gt;So, when it comes to asking questions about the &amp;quot;market share&amp;quot; of a given browser, don't try factoring in &amp;quot;standards compliance&amp;quot; for the big picture, because this is an issue that just doesn't factor into the minds of most users.&lt;/p&gt;  &lt;p&gt;&lt;font color=&quot;#0000ff&quot; face=&quot;Courier New&quot;&gt;&lt;strong&gt;&amp;lt;/Rant&amp;gt;&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.washingtonpost.com/wp-dyn/content/article/2008/03/24/AR2008032402052.html&quot; target=&quot;_blank&quot;&gt;Firefox, Safari, or Neither? - washingtonpost.com&lt;/a&gt;&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_69ddd000--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_69ddd000&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_69ddd000--&gt; &lt;p&gt; &lt;strong&gt;&lt;em&gt;“How about it -- with all the reports of security problems and poor standards compliance with IE, what keeps you sticking with it? And what would it take for you to switch?”&lt;/em&gt;&lt;/strong&gt; (last line quoted from &lt;a href=&quot;http://www.washingtonpost.com/wp-dyn/content/article/2008/03/24/AR2008032402052.html&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt;)&lt;/p&gt;&lt;!--End mp_html_detail_body_1_69ddd000--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_69ddd000--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 5:51:41 PM","4978"," "," ","<Rant>   I couldn't help but read the line in an article (see link below) about ""poor standards compliance with IE"" and think to myself:    ""You know, most users don't really care about 'poor standards compliance' in a browser; they just want it to browse the page safely & look nice.""    And that's not a small point to consider. Come on, people! The only ones who care about ""standards compliance"" are the developers, not the people viewing the sites. Developers want standards compliance because it will make their lives easier. The average Joe doesn't really care about making the lives of web developers easier - they just want to see the pages they're looking for. Web developers still make up only a small percentage of the people who actually browse the Internet, and I would not be surprised to see if many web developers actually (gasp!) have both browsers installed on their computers - if only to test their pages for both audiences.  For those of you who might take me to task on referring to ""both"" browsers (as if there were only two), that is simply because there are only two major choices among users. Yes, there's Safari, Opera, et.al., but these are small fish in a big pool, and the majority of people still say ""Who?"" when those browsers are mentioned.  Personally, I don't care either, anymore. Hey, I'm a part time web developer, back from the days when the browser compatibility issues were really, really painful (HTML, JavaScript, CSS). I know the pain developers feel around standards compliance. I have felt the pain. But as I stare in the eyes of my non-techy friends who haven't a clue of what I mean when I refer to different browser DOMs or having to do CSS hacks - when I stare into those eyes that look bewildered and hear them say ""It looked fine to me,"" then I realize that the only reason my shorts are in a knot is because I (the developer) was the one who tied it up in the first place. Now that I've aged a bit, and have seen how far browser builders have come in getting their individual ""standards"" to mesh, I find the differences just don't bother me anymore.  And, now-a-days, I don't think they bother my non-techy friends either.  So, when it comes to asking questions about the ""market share"" of a given browser, don't try factoring in ""standards compliance"" for the big picture, because this is an issue that just doesn't factor into the minds of most users.  </Rant>  Firefox, Safari, or Neither? - washingtonpost.com"
"Official Google Webmaster Central Blog","","","Official Google Webmaster Central Blog","&lt;p&gt;If you are in any way interested in learning how to improve your site ranking in search engines like Google, then head on over to &lt;strong&gt;Google's Webmaster Central&lt;/strong&gt; blog. Here you will find tips &amp;amp; tools that can help you craft your site so that it gets higher &amp;amp; higher page rankings.&lt;/p&gt;  &lt;p&gt;But, don't go looking for &amp;quot;quick fixes.&amp;quot; The biggest factors determining your site's success are &lt;em&gt;content, content,&lt;/em&gt; and &lt;em&gt;content!&lt;/em&gt; And, if that wasn't enough, it had better be &lt;em&gt;good&lt;/em&gt; content (and by that, I mean content that is &lt;em&gt;rich&lt;/em&gt;, &lt;em&gt;well-crafted/written&lt;/em&gt;, and &lt;em&gt;relevant&lt;/em&gt; to your intended audience).&lt;/p&gt;  &lt;p&gt;Sure, there are tools that can help you analyze your site and fine-tune your site for better SEO (Search Engine Optimization) - tools such as &lt;strong&gt;WebCEO&lt;/strong&gt; as well as Google's own &lt;strong&gt;Webmaster Tools&lt;/strong&gt;. But the really &lt;em&gt;hard&lt;/em&gt; work is to write your content so that it's going to be &amp;quot;bang-on&amp;quot; when Google (et.al.) scans it. To do that, you have to A) know your business, B) know your market, and C) know how to write well. Then, once you've got the ABCs done, you're still left with having to do the work (or pay someone to do it).&lt;/p&gt;  &lt;p&gt;If you've read this far, then you might be feeling somewhat discouraged - &lt;em&gt;&amp;quot;I didn't know it would be so hard!&amp;quot;&lt;/em&gt; But, take a moment to look at the other side: Because improving your site's page rankings is so hard, &lt;em&gt;most people won't go to all the trouble&lt;/em&gt;, thereby leaving you the opportunity to excel!&lt;/p&gt;  &lt;p&gt;Like Thomas Edison is reported to have stated:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;&amp;quot;Opportunity is missed by most people because it is dressed in overalls and looks like work.&amp;quot;&lt;/em&gt; &lt;font size=&quot;1&quot;&gt;[From Jan Karon's &lt;u&gt;Patches of GodLight: Father Tim's Favorite Quotes&lt;/u&gt;]&lt;/font&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href=&quot;http://googlewebmastercentral.blogspot.com/&quot;&gt;Official Google Webmaster Central Blog&lt;/a&gt;&lt;/p&gt;  &lt;div style=&quot;padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px&quot;&gt;Technorati Tags: &lt;a href=&quot;http://technorati.com/tags/SEO&quot; rel=&quot;tag&quot;&gt;SEO&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/Search Engine Optimization&quot; rel=&quot;tag&quot;&gt;Search Engine Optimization&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/Google&quot; rel=&quot;tag&quot;&gt;Google&lt;/a&gt;,&lt;a href=&quot;http://technorati.com/tags/Webmaster&quot; rel=&quot;tag&quot;&gt;Webmaster&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 6:21:36 PM","3544"," "," ","If you are in any way interested in learning how to improve your site ranking in search engines like Google, then head on over to Google's Webmaster Central blog. Here you will find tips &amp; tools that can help you craft your site so that it gets higher &amp; higher page rankings.  But, don't go looking for &quot;quick fixes.&quot; The biggest factors determining your site's success are content, content, and content! And, if that wasn't enough, it had better be good content (and by that, I mean content that is rich, well-crafted/written, and relevant to your intended audience).  Sure, there are tools that can help you analyze your site and fine-tune your site for better SEO (Search Engine Optimization) - tools such as WebCEO as well as Google's own Webmaster Tools. But the really hard work is to write your content so that it's going to be &quot;bang-on&quot; when Google (et.al.) scans it. To do that, you have to A) know your business, B) know your market, and C) know how to write well. Then, once you've got the ABCs done, you're still left with having to do the work (or pay someone to do it).  If you've read this far, then you might be feeling somewhat discouraged - &quot;I didn't know it would be so hard!&quot; But, take a moment to look at the other side: Because improving your site's page rankings is so hard, most people won't go to all the trouble, thereby leaving you the opportunity to excel!  Like Thomas Edison is reported to have stated:    &quot;Opportunity is missed by most people because it is dressed in overalls and looks like work.&quot; [From Jan Karon's Patches of GodLight: Father Tim's Favorite Quotes]    Official Google Webmaster Central Blog  Technorati Tags: SEO,Search Engine Optimization,Google,Webmaster"
"ASP.NET.4GuysFromRolla.com: Extending Base Type Functionality with Extension Methods","","","ASP.NET.4GuysFromRolla.com: Extending Base Type Functionality with Extension Methods","&lt;p&gt;Now, this looks like a very cool article. Can you imagine - adding your own methods to something like the String class?!? WOW. &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://aspnet.4guysfromrolla.com/articles/120507-1.aspx&quot;&gt;ASP.NET.4GuysFromRolla.com: Extending Base Type Functionality with Extension Methods&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 6:22:44 PM","430"," "," ","Now, this looks like a very cool article. Can you imagine - adding your own methods to something like the String class?!? WOW.   ASP.NET.4GuysFromRolla.com: Extending Base Type Functionality with Extension Methods"
"Brad Abrams : Number of Types in the .NET Framework","","","Brad Abrams : Number of Types in the .NET Framework","&lt;p&gt;[Note to self: Share this with my students - it's helpful to see just how big the .NET Framework really is...] &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/brada/archive/2008/03/17/number-of-types-in-the-net-framework.aspx&quot;&gt;Brad Abrams : Number of Types in the .NET Framework&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 6:23:52 PM","332"," "," ","[Note to self: Share this with my students - it's helpful to see just how big the .NET Framework really is...]   Brad Abrams : Number of Types in the .NET Framework"
"Windows Communication Foundation - 65 Links to make you an expert!","","","Windows Communication Foundation - 65 Links to make you an expert!","&lt;p&gt;I've been meaning to look into WCF programming - just haven't had the time. Now, at least, I have a list of articles et.al. to get me up to speed. Thanks &lt;a title=&quot;Joe Stagner&quot; href=&quot;http://www.joeon.net/&quot; target=&quot;_blank&quot;&gt;Joe&lt;/a&gt;! &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.joeon.net/post/2008/03/Windows-Communication-Foundation---65-Links-to-make-you-an-expert!.aspx&quot;&gt;Windows Communication Foundation - 65 Links to make you an expert!&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 6:26:34 PM","458"," "," ","I've been meaning to look into WCF programming - just haven't had the time. Now, at least, I have a list of articles et.al. to get me up to speed. Thanks Joe!   Windows Communication Foundation - 65 Links to make you an expert!"
"Going Live!","","","Going Live!","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;(Taken from my &lt;a href=&quot;http://dagilleland.spaces.live.com/blog/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;Windows Live blog&lt;/a&gt;)&lt;/p&gt;  &lt;p&gt;This is my first post to Windows Live Space. You may have found me here, but my main location is at &lt;a title=&quot;Gilleland.info - Home of Dan Gilleland&quot; href=&quot;http://www.Gilleland.info&quot; rel=&quot;tag&quot;&gt;Gilleland.info&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;I also have a number of web sites that I run (all of which are built on &lt;a href=&quot;http://www.DotNetNuke.com&quot; target=&quot;_blank&quot;&gt;DotNetNuke&lt;/a&gt;):&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.DynamicGeneration.com&quot;&gt;Dynamic Generation Inc.&lt;/a&gt; - This is my part-time business, where I mostly develop web sites based on DotNetNuke (although, I do other IT development work as well). &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.TryDNN.com&quot;&gt;TryDNN.com&lt;/a&gt; - On this site, I plan to add &lt;a href=&quot;http://www.trydnn.com/Articles/tabid/776/Default.aspx&quot;&gt;articles&lt;/a&gt; for the general masses about how to get up and running with DotNetNuke. &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.Gilleland.info&quot;&gt;Gilleland.info&lt;/a&gt; - This (as mentioned) is my personal site. It's quite a bit rough around the edges, and (eventually) I'll build a better skin, but hey - I only have so much time in my life!       &lt;br /&gt;[&lt;em&gt;&lt;strong&gt;June, 2009 Update&lt;/strong&gt;: I’ve since set up my own DotNetNuke site for posting my blogs at &lt;a href=&quot;&quot;&gt;kb.Gilleland.info&lt;/a&gt; and articles (and have posted mirrors of what I’ve got at &lt;/em&gt;&lt;a href=&quot;http://dagilleland.spaces.live.com/blog/&quot;&gt;&lt;em&gt;Windows Live&lt;/em&gt;&lt;/a&gt; and other blog sites&lt;em&gt;).&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://cst.nait.ca&quot; target=&quot;_blank&quot;&gt;Computer Systems Technology (CST)&lt;/a&gt; - This is where I teach computer programming full time (at &lt;a href=&quot;http://www.NAIT.ca&quot; target=&quot;_blank&quot;&gt;NAIT&lt;/a&gt;). I have my own &lt;a href=&quot;http://cst.nait.ca/staff/dgilleland&quot; target=&quot;_blank&quot;&gt;staff site&lt;/a&gt; as well, and since most of my writing is related to my teaching, this is where a lot of my on-line posting energy is going of late. BTW, &lt;a href=&quot;http://cst.nait.ca&quot; target=&quot;_blank&quot;&gt;CST&lt;/a&gt; is also the program that I graduated from (CST Diploma, Honours, 1998). &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;The list above isn't complete, but it's a highlight of the major ones I'm running. Also, BTW, I'm writing this post using Windows Live Writer, which I've gotten into because of how well I can write offline and still post to my DotNetNuke (DNN) websites. I much prefer to write off-line and then publish, and now that I'm using &lt;a href=&quot;http://dnn.itcrossing.com/Products/Modules/metaPost/tabid/195/Default.aspx&quot; target=&quot;_blank&quot;&gt;metaPost for DotNetNuke&lt;/a&gt;, my &amp;quot;publishing chain&amp;quot; is complete. I'll probably write a bit more about metaPost in another blog.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/27/2009 7:01:29 PM","2952"," "," ","This is my first post to Windows Live Space. You may have found me here, but my main location is at Gilleland.info.  I also have a number of web sites that I run (all of which are built on DotNetNuke):  Dynamic Generation Inc. - This is my part-time business, where I mostly develop web sites based on DotNetNuke (although, I do other IT development work as well).  TryDNN.com - On this site, I plan to add articles for the general masses about how to get up and running with DotNetNuke.  Gilleland.info - This (as mentioned) is my personal site. It's quite a bit rough around the edges, and (eventually) I'll build a better skin, but hey - I only have so much time in my life!  Computer Systems Technology (CST) - This is where I teach computer programming full time (at NAIT). I have my own staff site as well, and since most of my writing is related to my teaching, this is where a lot of my on-line posting energy is going of late. BTW, CST is also the program that I graduated from (CST Diploma, Honours, 1998).  The list above isn't complete, but it's a highlight of the major ones I'm running. Also, BTW, I'm writing this post using Windows Live Writer, which I've gotten into because of how well I can write offline and still post to my DotNetNuke (DNN) websites. I much prefer to write off-line and then publish, and now that I'm using metaPost for DotNetNuke, my ""publishing chain"" is complete. I'll probably write a bit more about metaPost in another blog."
"Meet Us for Canada Day","","","Meet Us for Canada Day","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;Here’s a satellite map of the spot where we’ll be watching the parade.&lt;/p&gt;  &lt;p&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-MeetUsforCanadaDay_DDFD-image_3.png&quot; width=&quot;924&quot; height=&quot;673&quot; /&gt; &lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-MeetUsforCanadaDay_DDFD-image_7.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'32310578'})&quot; &gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2009/WLW-MeetUsforCanadaDay_DDFD-image_thumb_2.png&quot; width=&quot;702&quot; height=&quot;472&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Getting to Fort Saskatchewan&lt;/h2&gt;  &lt;p&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-MeetUsforCanadaDay_DDFD-image_10.png&quot; width=&quot;1037&quot; height=&quot;1222&quot; /&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/29/2009 3:09:02 PM"," "," "," "," "
"Book Review &ndash; Elisha&rsquo;s Bones","","","Book Review &ndash; Elisha&rsquo;s Bones","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div style=&quot;padding-bottom: 0px; margin: 0px; padding-left: 10px; padding-right: 0px; display: inline; float: right; padding-top: 0px&quot; id=&quot;scid:7dc1bd33-94bd-46fd-a20b-0131235bcd47:6604042a-cf21-4afc-9acc-fbeb63ec4e7c&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;400&quot; border=&quot;0&quot; unselectable=&quot;on&quot;&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign=&quot;top&quot; width=&quot;400&quot;&gt; &lt;p&gt;&lt;a title=&quot;Elisha's Bones: Don Hoesel: Books&quot; href=&quot;http://www.amazon.ca/exec/obidos/ASIN/0764205609/dynamicgenera-20&quot;&gt;&lt;img src=&quot;http://images.amazon.com/images/P/0764205609.01.MZZZZZZZ.jpg&quot; border=&quot;0&quot; align=&quot;left&quot; style=&quot;float:left&quot;&gt;Elisha's Bones: Don Hoesel: Books&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;ISBN&lt;/b&gt;: 0764205609&lt;br&gt;&lt;b&gt;ISBN-13&lt;/b&gt;: 9780764205606&lt;/p&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;  &lt;h2&gt;Overview&lt;/h2&gt;  &lt;p&gt;Elisha’s Bones is a fictional story about archeologist Jack Hawthorne and his search for the bones of the prophet Elisha (see &lt;!--Begin mp_html_link_1_a91b40b2--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_a91b40b2'  } )&quot; target=&quot;_blank&quot;&gt;2 Kings 13:20-21&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_a91b40b2--&gt;). Hired by Gordon Reese, Jack’s quest leads him into danger and intrigue. At first, skeptical about the very existence of the bones and the Biblical account, Jack ultimately find himself having to face the implications of their existence and the God whom Elisha served.&lt;/p&gt;  &lt;h2&gt;Review &lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-BookReviewElishasBones_6B68-stars-4-0_2.gif&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'a91b40b2'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;stars-4-0&quot; border=&quot;0&quot; alt=&quot;stars-4-0&quot; title=&quot;stars-4-0&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-BookReviewElishasBones_6B68-stars-4-0_thumb.gif&quot; width=&quot;64&quot; height=&quot;12&quot; /&gt;&lt;/a&gt; &lt;/h2&gt;  &lt;p&gt;Written in the first person, Don Hoesel’s story reads well. There is a good mix of action, dialogue and introspection. One of the things that I appreciated about the book is that it doesn’t “preach” at the reader.&lt;/p&gt;  &lt;p&gt;The protagonist, Jack Hawthorne, is a skeptic whose pursuit of the bones of Elisha is rooted primarily in his need for resolving the pain of his brother’s death years earlier. Jack’s flaws and humanity are shown honestly and are apparent to himself and others. His own introspective commentary on his faults is believable, mixing confession and acceptance with a bit of remorse and self-justification. By writing in the first person, Don Hoesel makes Jack as easy to like as we like ourselves.&lt;/p&gt;  &lt;p&gt;The book has action, too. World travel, dangerous circumstances, narrow escapes – all these combine to keep the story alive and ticking. The first person dialogue never gets in the way of the adventure, and it’s easy to get lost in the reading.&lt;/p&gt;  &lt;p&gt;Overall, I would give the book a four out of five star rating. &lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-BookReviewElishasBones_6B68-stars-4-0_4.gif&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'a91b40b2'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;stars-4-0&quot; border=&quot;0&quot; alt=&quot;stars-4-0&quot; title=&quot;stars-4-0&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-BookReviewElishasBones_6B68-stars-4-0_thumb_1.gif&quot; width=&quot;64&quot; height=&quot;12&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_a91b40b2--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_a91b40b2&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_a91b40b2--&gt; &lt;p&gt;&lt;/p&gt;  &lt;div class=&quot;bibleverse&quot;&gt;   &lt;div class=&quot;bibleverse&quot;&gt;     &lt;p id=&quot;p12013020.01-1&quot;&gt;&lt;span id=&quot;v12013020-1&quot; class=&quot;verse-num&quot;&gt;20 &lt;/span&gt;So Elisha died, and they buried him. Now bands of Moabites used to invade the land in the spring of the year. &lt;span id=&quot;v12013021-1&quot; class=&quot;verse-num&quot;&gt;21 &lt;/span&gt;And as a man was being buried, behold, a marauding band was seen and the man was thrown into the grave of Elisha, and as soon as the man touched the bones of Elisha, he revived and stood on his feet.&lt;/p&gt;      &lt;p&gt;&lt;a href=&quot;http://www.gnpcb.org/esv/search/?q=2%20Kings%2013:20-21%20%3Cobject%20type=%22application/x-shockwave-flash%22%20%20data=%22http://www.esvapi.org/assets/play.swf?myUrl=hw%252F12013020-12013021%22%20width=%2240%22%20height=%2212%22%20class=%22audio%22%3E%3Cparam%20name=%22movie%22%20value=%22http://www.esvapi.org/assets/play.swf?myUrl=hw%252F12013020-12013021%22%20/%3E%3Cparam%20name=%22wmode%22%20value=%22transparent%22%20/%3E%3C/object%3E&quot;&gt;2 Kings 13:20-21 &lt;object type=&quot;application/x-shockwave-flash&quot;  data=&quot;http://www.esvapi.org/assets/play.swf?myUrl=hw%2F12013020-12013021&quot; width=&quot;40&quot; height=&quot;12&quot; class=&quot;audio&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.esvapi.org/assets/play.swf?myUrl=hw%2F12013020-12013021&quot; /&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot; /&gt;&lt;/object&gt;&lt;/a&gt;(&lt;a class=&quot;copyright&quot; href=&quot;http://www.esv.org&quot;&gt;ESV&lt;/a&gt;)&lt;/p&gt;   &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_1_a91b40b2--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_a91b40b2--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","6/30/2009 2:16:06 PM"," "," "," "," "
"Perpetual Calendar","","","Perpetual Calendar","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;http://www.libraryofmath.com&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 10px 5px 0px; display: inline; border-top: 0px; border-right: 0px&quot; border=&quot;0&quot; alt=&quot;Online Math Organized by Subject Into Topics.&quot; align=&quot;left&quot; src=&quot;http://www.libraryofmath.com/images/lom_logo.jpg&quot; /&gt;&lt;/a&gt;The &lt;a href=&quot;http://www.libraryofmath.com/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;Library of Math&lt;/a&gt; site has some good math info, including this one on the math behind a &lt;a href=&quot;http://www.libraryofmath.com/perpetual-calendar.html&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;Perpetual Calendar&lt;/a&gt;. For those interested in programming, it’s a great exercise for converting into a computer program. You can even try out their &lt;a href=&quot;http://www.libraryofmath.com/perpetual-calendar-homework.html&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;calendar exercises&lt;/a&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/2/2009 12:45:30 PM"," "," "," "," "
"My Story","","","My Story","&lt;p&gt;&lt;em&gt;Why do I share my story? I share my story because the grace, love and mercy that God has shown me is for you too. I share my story because, even though my story may be radically different from yours, we must both respond to the same unchanging, omnipotent and glorious God.&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;tba – how I became a Christian.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/2/2009 1:56:28 PM"," "," "," "," "
"CodeProject: Advanced Unit Testing Articles","","","CodeProject: Advanced Unit Testing Articles","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;http://www.CodeProject.com&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 25px 5px 0px; display: inline; border-top: 0px; border-right: 0px&quot; border=&quot;0&quot; alt=&quot;125x125&quot; align=&quot;left&quot; src=&quot;http://www.codeproject.com/Info/images/codeproject125x125.gif&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;http://www.CodeProject.com&quot; target=&quot;_blank&quot;&gt;CodeProject&lt;/a&gt; is one of the favorite places I like to go to whenever I want to learn from others. So, when my Google search on unit testing lead me to an article on &lt;a href=&quot;http://www.CodeProject.com&quot; target=&quot;_blank&quot;&gt;CodeProject&lt;/a&gt;’s site, I knew I was going in the right direction.&lt;/p&gt;  &lt;p&gt;Here, I want to feature a set of five articles by &lt;!--Begin mp_html_link_1_935392bb--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_935392bb'  } )&quot;&gt;Marc Clifton&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_935392bb--&gt; from 2003/04. It was the fifth article that first caught my attention, but in reviewing the earlier articles in the series, I know I want to remember to check them out again. So, here they are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/KB/cs/autp1.aspx&quot; rel=&quot;tag&quot; target=&quot;_blank&quot;&gt;Advanced Unit Testing, Part I - Overview&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/KB/cs/autp2.aspx&quot; rel=&quot;tag&quot; target=&quot;_blank&quot;&gt;Advanced Unit Testing, Part II – Core Implementation&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/KB/cs/autp3.aspx&quot; rel=&quot;tag&quot; target=&quot;_blank&quot;&gt;Advanced Unit Testing, Part III – Testing Processes&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/KB/cs/autp4.aspx&quot; rel=&quot;tag&quot; target=&quot;_blank&quot;&gt;Advanced Unit Testing, Part IV – Fixture Setup/Teardown, Test Repetition and Performance Tests&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/KB/architecture/autp5.aspx&quot; rel=&quot;tag&quot; target=&quot;_blank&quot;&gt;Advanced Unit Testing, Part V – Unit Test Patterns&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_935392bb--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_935392bb&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_935392bb--&gt; &lt;p&gt;&lt;/p&gt;  &lt;p&gt;Marc Clifton has written a whole slew of &lt;a href=&quot;http://www.codeproject.com/script/Articles/MemberArticles.aspx?amid=36803&quot; target=&quot;_blank&quot;&gt;articles&lt;/a&gt; for &lt;a href=&quot;http://www.CodeProject.com&quot; target=&quot;_blank&quot;&gt;CodeProject&lt;/a&gt;. You can also see his stuff on his own website at &lt;a href=&quot;http://www.MarcClifton.com&quot; target=&quot;_blank&quot;&gt;www.MarcClifton.com&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_1_935392bb--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_935392bb--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/2/2009 2:24:10 PM"," "," "," "," "
"Freelance Programming","","","Freelance Programming","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;h2&gt;Going Freelance…&lt;/h2&gt;  &lt;p&gt;tba&lt;/p&gt;  &lt;h2&gt;Places to Start&lt;/h2&gt;  &lt;p&gt;If you’re looking at doing a bit of freelance programming work, then here’s a list of places to check out.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Get A FreeLancer – (&lt;a href=&quot;http://www.getafreelancer.com/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;http://www.getafreelancer.com/&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/2/2009 2:33:29 PM"," "," "," "," "
"Cool Calendar","","","Cool Calendar","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;Here’s a &lt;!--Begin mp_html_link_1_24f4471f--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_24f4471f'  } )&quot; target=&quot;_blank&quot;&gt;cool calendar concept&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_24f4471f--&gt; from Harry Roberts at &lt;a href=&quot;http://csswizardry.com/&quot; target=&quot;_blank&quot;&gt;CssWizardry&lt;/a&gt;.&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_24f4471f--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_24f4471f&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_24f4471f--&gt; &lt;p&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://csswizardry.com/toybox/2009-calendar/&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; border-top: 0px; border-right: 0px&quot; border=&quot;0&quot; src=&quot;http://csswizardry.com/calendar.jpg&quot; width=&quot;240&quot; height=&quot;170&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_1_24f4471f--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_24f4471f--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/2/2009 2:48:51 PM"," "," "," "," "
"CodeProject: Session and ViewState","","","CodeProject: Session and ViewState","&lt;p&gt;&lt;a href=&quot;http://www.CodeProject.com&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 20px 5px 0px; display: inline; border-top: 0px; border-right: 0px&quot; border=&quot;0&quot; align=&quot;left&quot; src=&quot;http://www.codeproject.com/Info/images/codeproject125x125.gif&quot; /&gt;&lt;/a&gt;Here’s a neat article from &lt;a href=&quot;http://www.CodeProject.com&quot; target=&quot;_blank&quot;&gt;CodeProject&lt;/a&gt; on using &lt;a href=&quot;http://www.codeproject.com/KB/session/PersistAttribute.aspx&quot; target=&quot;_blank&quot;&gt;attributes to encapsulate asp.net session and viewstate variables&lt;/a&gt;. Worth the read….&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/2/2009 2:54:06 PM"," "," "," "," "
"Book Review &ndash; The Deposition","","","Book Review &ndash; The Deposition","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;div style=&quot;padding-bottom: 10px; margin: 0px; padding-left: 10px; padding-right: 0px; display: inline; float: right; padding-top: 0px&quot; id=&quot;scid:7dc1bd33-94bd-46fd-a20b-0131235bcd47:6e4f8605-deae-4613-bdf5-285a8a9516c2&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;400&quot; border=&quot;0&quot; unselectable=&quot;on&quot;&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign=&quot;top&quot; width=&quot;400&quot;&gt; &lt;p&gt;&lt;a title=&quot;The Deposition (Mike Connolly Mystery Series #5)&quot; href=&quot;http://www.amazon.ca/exec/obidos/ASIN/1589191013/dynamicgenera-20&quot;&gt;&lt;img src=&quot;http://images.amazon.com/images/P/1589191013.01.MZZZZZZZ.jpg&quot; border=&quot;0&quot; align=&quot;left&quot; style=&quot;float:left&quot;&gt;The Deposition (Mike Connolly Mystery Series #5)&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;ISBN&lt;/b&gt;: 1589191013&lt;br&gt;&lt;b&gt;ISBN-13&lt;/b&gt;: 9781589191013&lt;/p&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;  &lt;h2&gt;Overview&lt;/h2&gt;  &lt;p&gt;This story centers around Father Scott Nolan and his &lt;!--Begin mp_html_link_1_5e6972ac--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_5e6972ac'  } )&quot;&gt;deposition&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_5e6972ac--&gt;&lt;!--End mp_html_link_1_d50ebb5e--&gt; in relation to a lawsuit over a bank trust. The deposition, however, is a front for extracting information from Father Scott that might lead the bad guys to a witness who is under federal protection and slated to testify before a grand jury.&lt;/p&gt;  &lt;p&gt;The “bad guys” are mostly lawyers, but so are a lot of the good guys (even Father Scott has a background as a lawyer).&lt;/p&gt;  &lt;h2&gt;Review &lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;3.5 out of 5 stars&quot; border=&quot;0&quot; alt=&quot;3.5 out of 5 stars&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-BookReviewTheDeposition_129D5-stars-3-5_3.gif&quot; width=&quot;64&quot; height=&quot;12&quot; /&gt;&lt;/h2&gt;  &lt;p&gt;Overall, I enjoyed &lt;a href=&quot;http://www.amazon.ca/exec/obidos/ASIN/1589191013/dynamicgenera-20&quot; target=&quot;_blank&quot;&gt;The Deposition&lt;/a&gt;, but it took a bit for me at the start to follow the players and the dialogue. It’s a novel where there is little action, but a lot of dialogue and the air of missing pieces being filled in as you move along. It might have helped me if I had read the previous four books in this fifth of the Mike Connolly Mystery Series; then I may have known more about some of the characters, particularly Mike Connolly. Mike’s part in the novel is mostly as a background character, but one of great significance.&lt;/p&gt;  &lt;p&gt;I like the way dialogue is used as the primary way to tell the story (as opposed to having a narrator’s voice). It keeps you wondering what the real story is about (hint: it’s &lt;em&gt;not&lt;/em&gt; about the lawsuit over the bank trust). Information is revealed a bit at a time, and the background action of the minor players in the story hints at the significance of the dialogue in the &lt;!--Begin mp_html_link_1_d50ebb5e--&gt;&lt;!--Begin mp_html_link_1_5e6972ac--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_5e6972ac'  } )&quot; target=&quot;_blank&quot;&gt;deposition&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_5e6972ac--&gt;. The ending is pretty good too, but I won’t spoil it for you.&lt;/p&gt;  &lt;p&gt;Overall, I would give the book a three-and-a-half out of five star rating. &lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;3.5 out of 5 stars&quot; border=&quot;0&quot; alt=&quot;3.5 out of 5 stars&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-BookReviewTheDeposition_129D5-stars-3-5_6.gif&quot; width=&quot;64&quot; height=&quot;12&quot; /&gt;&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_5e6972ac--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_5e6972ac&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_5e6972ac--&gt; &lt;p&gt;&lt;/p&gt;  &lt;p&gt;A deposition is a “Sworn testimony recorded for use in court at a later date.” (Source: &lt;a href=&quot;http://www.thefreedictionary.com/deposition&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;TheFreeDictionary.com&lt;/a&gt;)&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_1_5e6972ac--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_5e6972ac--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/22/2009 11:20:43 PM"," "," "," "," "
"FaceBook&rsquo;s Business Model","","","FaceBook&rsquo;s Business Model","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;An interesting &lt;/em&gt;&lt;a href=&quot;http://ghanabusinessnews.com/2009/07/23/will-facebook-survive-another-five-years-after-250-million-members/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;article&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is written by Kurt Soller (original source: Newsweek). Here’s my thoughts (which I posted in comments to that article as well).&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Another factor to consider is demographics. Although this is alluded to in the article, it should be examined in its own right.&lt;/p&gt;  &lt;p&gt;Here’s what I’m observing: It appears to me that &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;’s early appeal has been to young people. But older people are finding it to be a quick/easy way to keep in touch, and are signing up in increasing numbers (at rates, I suspect, that are higher then what’s happening with the “under-30″ crowd right now). Then they “friend” their kids (as mentioned in the article) – this is the “uncool-ness” factor; imagine a college party or event that your parents show up at.&lt;/p&gt;  &lt;p&gt;Like I said, this has been alluded to in the article, but what should be examined in the aftermath of people abandoning, disabling or deleting their accounts is this: Are there demographics to who’s leaving &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;? Maybe &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;’s evolution will be to grab the older people who are starting to get around to getting on the ‘net. Perhaps there are clues here that could lead to a profitable business model.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/25/2009 7:13:31 AM"," "," "," "," "
"When You Want to Leave FaceBook&hellip;","","","When You Want to Leave FaceBook&hellip;","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;What do you do, when you want to leave &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;? Well, you have three choices:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;&lt;strong&gt;Abandon&lt;/strong&gt; your &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt; account – This choice is the easiest, and is often used by people who just grow disinterested in &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;.      &lt;br /&gt;Leave it alone, don’t update it or check it. If it gets your interest again, you can come back to it.      &lt;br /&gt;This is akin to those abandoned vehicles you see in the countryside now and again. They are just cast aside, but sitting on and still part of the owner’s property.&lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Disable&lt;/strong&gt; your &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt; account – This is like abandoning it, but with you going to extra work adjusting your settings on &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;. Your account isn’t deleted, but it’s “gone”. You can reclaim it at a later time.&lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Delete&lt;/strong&gt; your &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt; account – This goes is like disabling, but goes the extra step to permanently get rid of your data. It’s a harder option to find (see &lt;a href=&quot;http://www.itbusiness.ca/it/client/en/home/News.asp?id=53975&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;this article&lt;/a&gt; by Brian Jackson).&lt;/li&gt; &lt;/ol&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/25/2009 7:38:20 AM"," "," "," "," "
"Women in Ministy","","","Women in Ministy","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;Don Rousu has written an &lt;a href=&quot;http://www.christianity.ca/NetCommunity/Page.aspx?pid=3645&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt; in 2004 on women in ministry (&lt;a href=&quot;http://www.christianity.ca/NetCommunity/Page.aspx?pid=3645&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;“The Truth About Women in Public Ministry”&lt;/a&gt;). In it, he examines what the Bible has to say about this topic and challenges some of the “traditional” views that restrict women from public ministry.&lt;/p&gt;  &lt;p&gt;I wrote a similar paper for Bible School back in the early ‘90s. It’s in paper form right now, but I hope to scan it someday to publish on the web.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","8/15/2009 8:43:50 AM"," "," "," "," "
"Old Quotes","","","Old Quotes","&lt;p&gt;I was going through a bunch of items from years past (before the Internet!), and I ran across a few quotes that I thought were worth keeping. I’ll add to these as I run across more of them.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;“&lt;em&gt;When you memories surpass your dreams your life is over.”&lt;/em&gt; – Pastor Chris Mueller, Radio, Feb 4, 1990 at 1pm.&lt;/p&gt;        &lt;hr /&gt;        &lt;p&gt;“God’s People possess life;      &lt;br /&gt;Life requires nourishment;       &lt;br /&gt;Nourishment provides growth;       &lt;br /&gt;Growth glorifies God.” – &lt;em&gt;source unknown&lt;/em&gt;&lt;/p&gt;        &lt;hr /&gt;        &lt;p&gt;“&lt;em&gt;When the mission seems bigger than the minister, remember it is not bigger than the Master.” [remember the Master is bigger than both] &lt;/em&gt;– Roger Reid, et.al.&lt;/p&gt;        &lt;hr /&gt;        &lt;p&gt;“Working parents today spend so much time and energy trying to give their children what they didn’t have that they may not be giving their children what they did have.” – &lt;em&gt;James Dobson&lt;/em&gt;&lt;/p&gt;            &lt;hr /&gt;        &lt;p&gt;“&lt;em&gt;Long Range Planning Does Not Deal With Future Decisions But With The Future of Present Decisions.” – &lt;/em&gt;&lt;u&gt;Plan, Canada’s Industrial Newspaper&lt;/u&gt;, “Rethinking Business Strategies”, page 15, volume 25, #15&lt;/p&gt;    &lt;hr /&gt;    &lt;p&gt;“&lt;em&gt;Walking on water and developing software from a specification are easy if both are frozen.” – &lt;/em&gt;Edward V. Berard&lt;/p&gt;    &lt;hr /&gt;&lt;/blockquote&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","8/15/2009 7:19:56 PM"," "," "," "," "
"Change Styles","","","Change Styles","&lt;p&gt;You may have heard about learning styles, but have you heard about “change styles”? A Change Style is a description of the way one typically reacts to change. While it’s a generalization and everyone is able to react differently to different changes, I find it interesting to think of these categorizations of how people can react to change.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The Innovator&lt;/strong&gt; – This is the person who is often at the forefront of change. In fact, it’s not unusual to see them as the instigator of change.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The Embracer&lt;/strong&gt; – This is the person who quickly “gets on the band wagon” of change. They are quite open to change and are the early adopters of the change.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The Acceptor&lt;/strong&gt; – These are the people who aren’t early adopters but who eventually accept the change after some time and consideration. They don’t oppose the change, but they aren’t going to “jump on the band wagon” until they have more opportunity to reflect on the change. In general, these are people who are “open” to change, but that’s as far as it goes.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The Resistor&lt;/strong&gt; – These people don’t like change. They are content with how things were before. They will resist the change for themselves and possibly for others too.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;As I said, this is a generalization, and calling them Change “&lt;em&gt;Styles&lt;/em&gt;” may be a bit misleading, because most people will adopt each of these responses to change depending on various circumstances.&lt;/p&gt;  &lt;p&gt;And it shouldn’t be assumed that any of these are inherently better than the other. Many might assume that being a “resistor” is bad (the very term is often associated with negativity). But resisting “bad changes” is actually quite good. Change for change’s sake is not a good motto.&lt;/p&gt;  &lt;p&gt;In fact, the best thing to be aware of is one’s own tendency in how they &lt;em&gt;react&lt;/em&gt; to change. That way, with some thought and consideration, it is possible to learn how to &lt;em&gt;respond&lt;/em&gt; to change rather than simply &lt;em&gt;reacting&lt;/em&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","8/18/2009 6:29:31 AM"," "," "," "," "
"Teenage Multimillionaire &ndash; CNN Video","","","Teenage Multimillionaire &ndash; CNN Video","&lt;p&gt;Here’s a great CNN interview with Ephren Taylor, a teen who made his first business at age 12 and is a multi-millionaire while in his teen years. In the interview, he gives five tips for students/young people.&lt;/p&gt; &lt;script src=&quot;http://i.cdn.turner.com/cnn/.element/js/2.0/video/evp/module.js?loc=dom&amp;amp;vid=/video/business/2009/08/23/nguyen.millionaire.by.17.cnn&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;noscript&gt;&lt;/noscript&gt;  &lt;ul&gt;   &lt;li&gt;Turn your disadvantage into your advantage &lt;/li&gt;    &lt;li&gt;Persistence pays &lt;/li&gt;    &lt;li&gt;Read &lt;/li&gt;    &lt;li&gt;Don’t over analyze the opportunity&lt;/li&gt;    &lt;li&gt;Recession == Opportunity&lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","8/23/2009 11:41:32 PM"," "," "," "," "
"Finally! metaPost :)","","","Finally! metaPost :)","&lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;Note: This is an earlier article of mine from 2008 which is now ported over to my &lt;a href=&quot;&quot;&gt;Knowledge Base&lt;/a&gt; website.&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Well, I've not blogged on any consistent level. But now, thanks in no small part to &lt;a href=&quot;http://www.itcrossing.com&quot; target=&quot;_blank&quot;&gt;metaPost&lt;/a&gt;, I think I might get back into the blogging/publishing scene some more.&lt;/p&gt;  &lt;p&gt;My blogging vacillates between using the News Articles module or the DNN Blog module. I really like the News Articles module because of a) the different categories and b) the multi-page feature and c) the control of the publishing workflow (submission/approval/etc). There's other reasons, too, such as the cleaner Admin tools (more icon-based). But in truth, I haven't kept up with DNN's Blog module, and I'm sure the latest version is a &lt;em&gt;lot&lt;/em&gt; better than the one I was looking at back at the DNN 3.x and 4.0.x days (2006/7).&lt;/p&gt;  &lt;p&gt;But there's more to my being out of the blogging besides &amp;quot;which module do I use&amp;quot;. I've also been out of it because of the &amp;quot;bother&amp;quot;. Sometimes, it's just too much work using a blog. Think of it. You typically have to:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Go to the web site &lt;/li&gt;    &lt;li&gt;Log in &lt;/li&gt;    &lt;li&gt;Go to your blog page &lt;/li&gt;    &lt;li&gt;Click [whatever] to start a new blog &lt;/li&gt;    &lt;li&gt;Write your content, proof it, get it all right &lt;/li&gt;    &lt;li&gt;Post/publish it &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Whew!&lt;/p&gt;  &lt;p&gt;Well, with &lt;a href=&quot;http://www.itcrossing.com&quot; target=&quot;_blank&quot;&gt;metaPost&lt;/a&gt;, it's a whole lot easier to do this in a DNN-based web site! All I have to do for a new post is&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Open up Windows Live Writer (WLW) or MS Word &lt;/li&gt;    &lt;li&gt;Write my content &lt;/li&gt;    &lt;li&gt;Publish to my blog &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;That's only half of the steps to the web-based approach - and two of those steps are just mouse-clicks! And there's more benefits to the WLW approach:&lt;/p&gt;  &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;546&quot;&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;265&quot;&gt;&lt;strong&gt;&lt;u&gt;Using the Browser&lt;/u&gt;&lt;/strong&gt;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;279&quot;&gt;&lt;strong&gt;&lt;u&gt;Using Windows Live Writer&lt;/u&gt;&lt;/strong&gt;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;264&quot;&gt;No &amp;quot;undo&amp;quot; to fix/revert content after posting. You have to go back into the post &amp;amp; re-write the changes by hand.&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;279&quot;&gt;As long as you still have WLW open, you can just &amp;quot;undo&amp;quot; and re-post.&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;264&quot;&gt;Images are a pain! If you want to use one, you have to upload the image, then get the image link embedded right. At a minimum, it's a two-step process, with the first step taking a &lt;em&gt;lot&lt;/em&gt; of clicks.&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;279&quot;&gt;Images are easy. If you insert a picture, then WLW will upload the picture to your blog for you. It's a simple one-step world.&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;264&quot;&gt;Can't work on a blog off-line. At all.&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;279&quot;&gt;Write your blog off-line, and even save a draft off-line. Publish it when you're ready.&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;If I took the time to think about it, there's probably a bunch of other niggley things with the browser-based approach to editing/writing the blogs or articles. But when you discover all the extra plug-ins available for Windows Live Writer, then you just &lt;em&gt;have to&lt;/em&gt; go that way. WLW has been around for a little while (in beta during 2007), and other off-line blog posting programs have been around since the start of 2007 (some, maybe earlier).&lt;/p&gt;  &lt;p&gt;But the problem with the different blog-posting programs is that they've mostly relied on 3rd party blogging sites. I wanted to write stuff for my own DNN-based web site. I like having total control of my own web site. It doesn't just have to be a &amp;quot;blog&amp;quot; - I can extend it any way I need or want. Hey - I'm a developer, so I'm often thinking of new or better ways of doing things. But there weren't any DNN modules to bridge the gap between off-line tools and DNN. That is, until &lt;a href=&quot;http://www.itcrossing.com&quot; target=&quot;_blank&quot;&gt;metaPost&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;I'll probably write a bit more about &lt;a href=&quot;http://www.itcrossing.com&quot; target=&quot;_blank&quot;&gt;metaPost&lt;/a&gt; as I get time to explore its features and use it more. But one thing's for sure: I'm going to be able to blog &amp;amp; write articles easier and faster, thanks to WLW + &lt;a href=&quot;http://www.itcrossing.com&quot; target=&quot;_blank&quot;&gt;metaPost&lt;/a&gt; + DNN. (No more excuses - I hope!)&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:00:01 PM"," "," "," "," "
"Test Blog...","","","Test Blog...","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;This is just a test blog for the MetaPost images. I'll see if it works with the zoom pics.&lt;/p&gt;  &lt;p&gt;[Post-Test Results] It works :)&amp;#160; To see the full-size image, just click the image &amp;amp; it will &amp;quot;zoom&amp;quot; into view. This is possible in the MetaPost professional version. You can read more about it at Don's blog at &lt;a href=&quot;http://www.itcrossing.com/Blog/tabid/103/EntryID/110/Default.aspx&quot; target=&quot;_blank&quot;&gt;ITCrossing.com&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/Humpback%20Whale_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;A humpback whale slapping the surface with its tail.&quot; border=&quot;0&quot; alt=&quot;A humpback whale slapping the surface with its tail.&quot; title=&quot;A humpback whale slapping the surface with its tail.&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/Humpback%20Whale_thumb.jpg&quot; width=&quot;244&quot; height=&quot;184&quot; /&gt;&lt;/a&gt; &lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/Oryx%20Antelope_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;A lone oryx antelope.&quot; border=&quot;0&quot; alt=&quot;A lone oryx antelope.&quot; title=&quot;A lone oryx antelope.&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/Oryx%20Antelope_thumb.jpg&quot; width=&quot;244&quot; height=&quot;184&quot; /&gt;&lt;/a&gt; &lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/Toco%20Toucan_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;A toucan perched on a branch in Brazil.&quot; border=&quot;0&quot; alt=&quot;A toucan perched on a branch in Brazil.&quot; title=&quot;A toucan perched on a branch in Brazil.&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/Toco%20Toucan_thumb.jpg&quot; width=&quot;244&quot; height=&quot;184&quot; /&gt;&lt;/a&gt; &lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/Tree_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;Sheep under a tree near Dorset, England.&quot; border=&quot;0&quot; alt=&quot;Sheep under a tree near Dorset, England.&quot; title=&quot;Sheep under a tree near Dorset, England.&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/Tree_thumb.jpg&quot; width=&quot;244&quot; height=&quot;184&quot; /&gt;&lt;/a&gt; &lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/Waterfall_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;A cascading waterfall, flanked by flowers.&quot; border=&quot;0&quot; alt=&quot;A cascading waterfall, flanked by flowers.&quot; title=&quot;A cascading waterfall, flanked by flowers.&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/Waterfall_thumb.jpg&quot; width=&quot;244&quot; height=&quot;184&quot; /&gt;&lt;/a&gt; &lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/Winter%20Leaves_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;Dog rose leaves covered with frost in Sweden.&quot; border=&quot;0&quot; alt=&quot;Dog rose leaves covered with frost in Sweden.&quot; title=&quot;Dog rose leaves covered with frost in Sweden.&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/Winter%20Leaves_thumb.jpg&quot; width=&quot;244&quot; height=&quot;184&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;h3&gt;More Testing&lt;/h3&gt;  &lt;p&gt;Thought I would do an update, just to show the way that this could be used for working with demos. For example, I could have step-by-step instructions like the following:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Every child loves to play in the sand.&amp;#160; So, the first step is to find a place to play.      &lt;br /&gt;&lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/j0227792_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;j0227792&quot; border=&quot;0&quot; alt=&quot;j0227792&quot; title=&quot;j0227792&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/j0227792_thumb.jpg&quot; width=&quot;244&quot; height=&quot;161&quot; /&gt;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;And, of course, it is important to bring all the right tools for the job.      &lt;br /&gt;&lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/j0177932_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;j0177932&quot; border=&quot;0&quot; alt=&quot;j0177932&quot; title=&quot;j0177932&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/j0177932_thumb.jpg&quot; width=&quot;244&quot; height=&quot;164&quot; /&gt;&lt;/a&gt; &lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/j0313769_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;j0313769&quot; border=&quot;0&quot; alt=&quot;j0313769&quot; title=&quot;j0313769&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/j0313769_thumb.jpg&quot; width=&quot;163&quot; height=&quot;244&quot; /&gt;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;When working with the tools, be sure to let creativity &amp;amp; fun reign.      &lt;br /&gt;&lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/j0402138_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;j0402138&quot; border=&quot;0&quot; alt=&quot;j0402138&quot; title=&quot;j0402138&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/j0402138_thumb.jpg&quot; width=&quot;164&quot; height=&quot;244&quot; /&gt;&lt;/a&gt; &lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/j0395988_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;j0395988&quot; border=&quot;0&quot; alt=&quot;j0395988&quot; title=&quot;j0395988&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/j0395988_thumb.jpg&quot; width=&quot;162&quot; height=&quot;244&quot; /&gt;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;The best time are shared times.      &lt;br /&gt;&lt;a class=&quot;itcexpand&quot; onclick=&quot;return hs.expand(this)&quot; href=&quot;/Portals/4/images/Blog/WLW/TestBlog_7D15/j0406840_2.jpg&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'0c3573f5'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;j0406840&quot; border=&quot;0&quot; alt=&quot;j0406840&quot; title=&quot;j0406840&quot; src=&quot;http://www.gilleland.info/Portals/4/images/Blog/WLW/TestBlog_7D15/j0406840_thumb.jpg&quot; width=&quot;164&quot; height=&quot;244&quot; /&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ol&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:10:26 PM"," "," "," "," "
"Real-Time Web Images","","","Real-Time Web Images","&lt;p&gt;Here's an article on &lt;a href=&quot;http://www.ftponline.com/vsm/2004_08/magazine/features/rjennings/&quot; target=&quot;_blank&quot;&gt;building real-time web images&lt;/a&gt; in VS. Also, there's a great &lt;a href=&quot;http://www.neodynamic.com/ND/FaqsTipsTricks.aspx?tabid=66&amp;amp;prodid=0&amp;amp;sid=45&quot; target=&quot;_blank&quot;&gt;3rd party tool from NeoDynamic&lt;/a&gt; for combining images &amp;amp; adding effects for these images on your web page. Cool stuff!&lt;/p&gt;  &lt;p&gt;There's also a book called the ASP.NET Cookbook, by O'Rielly, that has &lt;a href=&quot;http://downloads.techrepublic.com.com/download.aspx?docid=171992&quot; target=&quot;_blank&quot;&gt;a chapter on creating/altering images&lt;/a&gt; for the web.&lt;/p&gt;  &lt;p&gt;Also, check out this link: &lt;a href=&quot;http://software.techrepublic.com.com/download.aspx?docid=241658&quot; target=&quot;_blank&quot;&gt;Thin Image Upload&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:24:55 PM"," "," "," "," "
"Blurbs and Video...","","","Blurbs and Video...","&lt;p&gt;I ran into two cool sites today: &lt;a href=&quot;http://www.blurb.com/&quot;&gt;http://www.blurb.com/&lt;/a&gt; and &lt;a href=&quot;http://www.on2.com&quot;&gt;www.on2.com&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;The first allows a way to get your book printed (from 1 to x copies) at very good prices. The other is a company that promises a better video codec to improve download speed.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:26:17 PM"," "," "," "," "
"Star Trek Warp Speed","","","Star Trek Warp Speed","&lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Originally published on December 18, 2006, these are a few of my musings on Warp Speed. This article was moved to my &lt;a href=&quot;&quot;&gt;Knowledge Base&lt;/a&gt; website in 2009 (with fixes for minor spelling mistakes).&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;I have just been reading &lt;a href=&quot;http://www.trekplace.com/article12.html&quot; target=&quot;_blank&quot;&gt;an article on Warp Speed&lt;/a&gt; calculations for Star Trek, and I thought I would add this creation of my own into the fray:&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;One of the interesting, and often overlooked, things about Warp Speed is that this velocity is occurring within a context, namely &amp;quot;Space&amp;quot;. It is important to note that &amp;quot;space&amp;quot; is, itself, &amp;quot;warped&amp;quot;. With that in mind, it is conceivable that warp speed calculations in our galaxy are subject to some slight variations due to &amp;quot;where&amp;quot; the warp speed is occurring. Thus, warp speeds are &amp;quot;contextual&amp;quot; and have slight variations in different areas of space (particularly nearer the center of our galaxy - the full extent of this area on &amp;quot;warp speeds&amp;quot; is not known at this time).&lt;/p&gt;  &lt;p&gt;Furthermore, the effect of &amp;quot;location&amp;quot; on warp speed calculations also implies that the location or route of travel will affect the calculated speed.&lt;/p&gt;  &lt;p&gt;Warp speeds are related to the speed of light, but also to the location within the galaxy and the direction of travel, meaning that no static formula is universally available in all places. The best that can be done is the creation of &amp;quot;fudge&amp;quot; formulas - formulas that are, for all practical purposes, true across the scale, but which are not technically correct.&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;hr /&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:31:13 PM"," "," "," "," "
"Ora-Cull","","","Ora-Cull","&lt;p&gt;Not being an Oracle expert (by any stretch of the imagination), I rely heavily on Google &amp;amp; other sites to figure out what's not working. Now understand, I don't even use Oracle that much - so when I run into an error, I need to find out what it means easily.&lt;/p&gt;  &lt;p&gt;One place that is good to look at is &lt;a href=&quot;http://www.dbmotive.com/oracle_error_codes.php&quot; target=&quot;_blank&quot;&gt;dbmotive's oracle error lookup page&lt;/a&gt;. Another is &lt;a href=&quot;http://ora-code.com/&quot; target=&quot;_blank&quot;&gt;ora-code&lt;/a&gt; (though it's descriptions are usually briefer than dbmotive's).&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:35:30 PM"," "," "," "," "
"Software Wishlist","","","Software Wishlist","&lt;p&gt;Well, with Christmas approaching, it's hard not to think of what software I would love to have to complete my suite of tools. Here's my top 10ish:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.telerik.com/products/ajax/r.a.d.ajax.aspx?gad=CMKQ0uoDEgit40-D1s3CphiF1bL_AyCmz_sU&quot; target=&quot;_blank&quot;&gt;r.a.d. AJAX&lt;/a&gt;, by Telerek &lt;/li&gt;    &lt;li&gt;CodeSmith tools &lt;/li&gt;    &lt;li&gt;Refactor! professional &lt;/li&gt;    &lt;li&gt;Flash 8 (basic or professional) &lt;/li&gt;    &lt;li&gt;Microsoft Office 2007 (coming out in early 2007)&lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:39:22 PM"," "," "," "," "
"Better Search Engine Indexing","","","Better Search Engine Indexing","It looks like Google, Microsoft, and Yahoo! have all agreed on something: How to make it easier for websites to tell them what to crawl. In &lt;a href=&quot;http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;amp;articleId=9005148&amp;amp;intsrc=news_ts_head&quot; target=&quot;_blank&quot;&gt;this article&lt;/a&gt;, I discovered SiteMaps (&lt;a href=&quot;http://www.sitemaps.org&quot; target=&quot;_blank&quot;&gt;www.sitemaps.org&lt;/a&gt;) - a place where you can learn about and get the XML format needed to write your own &amp;quot;sitemap.xml&amp;quot; file that the search engines will use to map out the parts of your site to crawl for their indexing. All in all, it's pretty cool!   &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:41:57 PM"," "," "," "," "
"Time-outs &amp; Atlas (AJAX)","","","Time-outs &amp; Atlas (AJAX)","Well, I just read an &lt;a href=&quot;http://msmvps.com/blogs/omar/archive/2006/09/23/Atlas-5_3A00_-Bad-calls-make-good-calls-timeout.aspx&quot; target=&quot;_blank&quot;&gt;interesting article&lt;/a&gt;. It talks about how when using AJAX you can sometimes have good calls to the server time out because of one bad call. The resolution proposed is to write your own code to do a &amp;quot;retry&amp;quot; of a failed call (to try and get the good call to go through). I wonder, though, what that might mean if a retry is done on what amounts to a bad call. Hmm....&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:55:31 PM"," "," "," "," "
"NavigateUrl and Friendly vs. Non-Friendly Urls In DNN","","","NavigateUrl and Friendly vs. Non-Friendly Urls In DNN","&lt;p&gt;The host settings in DotNetNuke has an option for Friendly Urls (where query string parameters are built into the url path). It turns out that when you select Friendly Urls, you get a complete path when using NavigateUrl. But with the non-friendly setting, the Scheme of the path is missing with the NavigateUrl. Here's a quick bit of code to take a non-friendly NavigateUrl result and re-build it to include the scheme:&lt;/p&gt; &lt;font size=&quot;2&quot;&gt;   &lt;p&gt;&lt;/p&gt;   &lt;font face=&quot;Courier New&quot;&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;Dim&lt;/font&gt;&lt;font size=&quot;2&quot;&gt; startPosition &lt;/font&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;As&lt;/font&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;Integer&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;2&quot;&gt;    &lt;p&gt;&lt;font face=&quot;Courier New&quot;&gt;startPosition = InStr(ctrlKey, glbDefaultPage)&lt;/font&gt;&lt;/p&gt;    &lt;p&gt;&lt;/p&gt;   &lt;font face=&quot;Courier New&quot;&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;If&lt;/font&gt;&lt;font size=&quot;2&quot;&gt; startPosition &amp;gt; 0 &lt;/font&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;Then&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;2&quot;&gt;    &lt;p&gt;&lt;font face=&quot;Courier New&quot;&gt;ctrlKey = Mid(ctrlKey, startPosition)&lt;/font&gt;&lt;/p&gt;    &lt;p&gt;&lt;font face=&quot;Courier New&quot;&gt;ctrlKey = &lt;/font&gt;&lt;/p&gt;   &lt;font face=&quot;Courier New&quot;&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;Me&lt;/font&gt;&lt;font size=&quot;2&quot;&gt;.Request.Url.GetLeftPart(UriPartial.Scheme) + &lt;/font&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;Me&lt;/font&gt;&lt;font size=&quot;2&quot;&gt;.PortalSettings.PortalAlias.HTTPAlias + &lt;/font&gt;&lt;font color=&quot;#800000&quot; size=&quot;2&quot;&gt;&amp;quot;/&amp;quot;&lt;/font&gt;&lt;/font&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;Courier New&quot;&gt; + ctrlKey&lt;/font&gt;&lt;/font&gt;     &lt;p&gt;&lt;/p&gt;   &lt;font face=&quot;Courier New&quot;&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;End&lt;/font&gt;&lt;font size=&quot;2&quot;&gt; &lt;/font&gt;&lt;font color=&quot;#0000ff&quot; size=&quot;2&quot;&gt;If&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 2:59:03 PM"," "," "," "," "
"Reading Blog","","","Reading Blog","&lt;p&gt;Too much to do, to little time to do it. That's seemed to be the theme for the last few years, particularly as I've gotten more and more into using DotNetNuke and developing my programming skills.&lt;/p&gt;  &lt;p&gt;One of the things that I've been thinking of doing since re-vamping my personal website is to get a bit more into blogging, and write about a wide variety of topics (not just IT-related stuff). One of those things I've thought of writing about was to write up some thoughts on books as I read them, so here's my first Reading Blog (but not the first book since I re-vamped the site).&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;The Silver Sword, by Angela Elwell Hunt.&lt;/p&gt;  &lt;p&gt;I really enjoyed this book. &lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:00:16 PM"," "," "," "," "
"Code Decorating for Security","","","Code Decorating for Security","&lt;p&gt;In &lt;a href=&quot;http://weblogs.asp.net/scottgu/archive/2006/10/04/Tip_2F00_Trick_3A00_-Adding-Authorization-Rules-to-Business-and-Data-Layers-using-PrincipalPermissionAttributes.aspx&quot; target=&quot;_blank&quot;&gt;this article&lt;/a&gt;, Scott Guthrie blogs about using decorations (code attributes) to apply security restrictions to code. There are some especially helpful comments on the blog that are worth reading too, such as the one about adding a level of indirection based on &amp;quot;capabilities&amp;quot; that can be mapped/assigned to roles.&lt;/p&gt;  &lt;p&gt;I also bought a book (Hacking the Code) about building security into your web apps, that I hope to read over the next few months.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:02:24 PM"," "," "," "," "
"Ah, Javascript...","","","Ah, Javascript...","&lt;p&gt;Normally I wouldn't expect myself to find a reason to blog about Javascript. After all, for anyone who's gone through the browser wars having tried to do dhtml the hard way &lt;em&gt;and&lt;/em&gt; be browser friendly, Javascript, CSS, HTML, &amp;amp; DOM differences would be enough to make one vow never to touch the stuff again, particularly when the easy-to-control server-side .NET programming became available.&lt;/p&gt;  &lt;p&gt;But, if you are interested in AJAX, you'll probably get back to the Javascript thing again (like I am about to).&lt;/p&gt;  &lt;p&gt;So, along that vein, I thought I would note &lt;a href=&quot;http://weblogs.asp.net/bleroy/archive/2006/09/29/A-nice-and-compact-way-to-coerce-to-Boolean-in-JavaScript.aspx&quot; target=&quot;_blank&quot;&gt;a post by Bertrand Le Roy&lt;/a&gt; about a nice, tight-coded way to ensure a javascript function returns a Boolean (as opposed to a null, undefined, or object. He also shared a way to force an undefined to return a null. Here's the code snippets:&lt;/p&gt;  &lt;blockquote style=&quot;margin-right: 0px&quot; dir=&quot;ltr&quot;&gt;   &lt;p&gt;     &lt;table border=&quot;0&quot;&gt;&lt;tbody&gt;         &lt;tr&gt;           &lt;td&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;font size=&quot;2&quot;&gt;something ? &lt;span style=&quot;color: #0000ff&quot;&gt;true&lt;/span&gt; : &lt;span style=&quot;color: #0000ff&quot;&gt;false&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/td&gt;         &lt;/tr&gt;       &lt;/tbody&gt;&lt;/table&gt;      &lt;br /&gt;&lt;font size=&quot;2&quot; face=&quot;Courier New&quot;&gt;!!something&lt;/font&gt;&lt;/p&gt;    &lt;p&gt;&lt;font face=&quot;Courier New&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;span style=&quot;color: #0000ff&quot;&gt;return&lt;/span&gt; something || &lt;span style=&quot;color: #0000ff&quot;&gt;null&lt;/span&gt;;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Ah! That's refreshing! Brings me back to my old C++ days....&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:03:48 PM"," "," "," "," "
"Tools, tools, tools...","","","Tools, tools, tools...","&lt;p&gt;Being productive in programming means having the right tools to do the job. But development tools can be expensive. What are some more affordable options? Here's a few I've run across over the past couple of years (I'll update this list a bit more over the next couple of months):&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.x-sql.com/LiteEdition.aspx&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;xSQL Object 2 and xSQL Data Compare 2&lt;/strong&gt;&lt;/a&gt; - These two tools are useful if you have more than one SQL database that you need to migrate/sync/compare/etc. The nice thing about these ones is that they are free, although you would need the commercial version for databases of any notable size.       &lt;ul&gt;       &lt;li&gt;&lt;em&gt;xSQL Object&lt;/em&gt; is used &amp;quot;for comparing, generating scripts and synchronizing SQL Server databases.&amp;quot; &lt;/li&gt;        &lt;li&gt;&lt;em&gt;xSQL Data Compare&lt;/em&gt; is used &amp;quot;for comparing and synchronizing the content (the data) of SQL Server databases.&amp;quot; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.scootersoftware.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Beyond Compare&lt;/strong&gt;&lt;/a&gt; - The trial version of this software is great, but it's also an inexpensive buy &amp;amp; worth the cost. &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.editplus.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;EditPlus 2&lt;/strong&gt;&lt;/a&gt; - While there are lots of power tools that give you a color-coded editor, complete with intellisense, every once in a while it helps to have a low-end color-coded text editor.       &lt;br /&gt;In truth, I wind up using EditPlus a lot for doing search/replace on individual or sets of files and for doing searches for text in a directory of source code (helpful, especially since a Windows search ignores scanning the contents of some text files, such as .aspx or .vb). &lt;/li&gt;    &lt;li&gt;Refactor! - &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.freeserifsoftware.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Serif PhotoPlus&lt;/strong&gt;&lt;/a&gt; - The free version of PhotoPlus can be found at &lt;a href=&quot;http://www.freeSerifSoftware.com&quot;&gt;www.freeSerifSoftware.com&lt;/a&gt; and is very full-featured for a free graphics editing program. Unless you are need the more esoteric features of the commercial PhotoPlus or of PhotoShop, this will probably do you quite well. &lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:05:34 PM"," "," "," "," "
"Better blogging days ahead","","","Better blogging days ahead","&lt;p&gt;I'm nearing the end of a big project, and I've had the chance to learn a lot of little tips &amp;amp; nuggets of stuff with regard to DNN, particularly the new version 4.3.5 (the 4.3.4+ release is only a couple months old, now).&lt;/p&gt;  &lt;p&gt;Once this big project is done, I hope to have some &amp;quot;time off&amp;quot; to rest, do my personal DNN development, and blog a bit more.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:12:51 PM"," "," "," "," "
"UserController.GetUsersByProfileProperty() - (DNN 3/4.3.4 +)","","","UserController.GetUsersByProfileProperty() - (DNN 3/4.3.4 +)","&lt;p&gt;In DNN 4.3.4, a new mechanism of handling user profile information was introduced, and with it came some new methods of the UserController class.&lt;/p&gt;  &lt;p&gt;One method, called GetUsersByProfileProperty, allows a programmer to search on any profile characteristic being tracked by the portal. A typical use for this method in a custom module is to narrow down to a subset of users in the portal, based on the desired profile property's value. But, in this usage, only three of the six or seven parameter items are of any real interest if you want to get all the matches:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;portalId &lt;/li&gt;    &lt;li&gt;propertyName &lt;/li&gt;    &lt;li&gt;propertyValue &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Now, it would be nice if there was an overloaded version of this method that just took these three parameters, but there isn't. So what do you put in the other parameters? Here's what I've found:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;pageIndex - This needs to be set to -1, otherwie you may not get any results at all &lt;/li&gt;    &lt;li&gt;pageSize - Zero (will be set to zero for you if you set pageIndex to -1) &lt;/li&gt;    &lt;li&gt;totalRecords - Zero (will be set to zero for you if you set pageIndex to -1) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Well, this is just another tidbit in learning about DNN's inner workings. Bye!&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:13:54 PM"," "," "," "," "
"Port 1851 vs. Port 1050","","","Port 1851 vs. Port 1050","&lt;p&gt;Well, Visual Studio 2005 crashed again while I was working on a project. To be more specific, it appeared that the compiler crashed while trying to keep the Intellisense up to speed with changes I was making to my code. The real kicker for this, though, was that when I re-started VS, I couldn't get my ASP.NET page to display at all!&lt;/p&gt;  &lt;p&gt;When I ran it ([CTRL] + [F5]), I would get a &amp;quot;page cannot be displayed&amp;quot; error saying that the server couldn't process the page. Since I wasn't using IIS (my project was configured for file-system website), but VS's Cassini, I think it is an error in that server. What I notice changed in my web app from before the crash was the following:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;An App_offline.htm file was created (on my behalf - hmmmmm), and &lt;/li&gt;    &lt;li&gt;The VS solution file (.sln) had changed the VWD port from 1050 to 1851 &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;So, I'm manually changing it back to 1050, and hoping for the best. Perhaps it is just that port 1851 is locked down on my box.... More on this later...&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;Yep, the manual change back to port 1050 definitely fixed the problem. Now, back to my coding. At least I have it blogged here, on my site, to search for it again, when I forget the fix and have to Google for it &lt;img border=&quot;0&quot; src=&quot;http://www.gilleland.info/Portals/_default/Smileys/suspect.gif&quot; /&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:16:36 PM"," "," "," "," "
"&quot;Extreme&quot; Programming","","","&quot;Extreme&quot; Programming","&lt;p&gt;My work life is one of extremes. That's partly due to the fact that I'm an IT instructor at a technical school, and I have to know a &amp;quot;bit of everything&amp;quot; and (hopefully) a &amp;quot;lot of a little bit&amp;quot; in order to teach.&lt;/p&gt;  &lt;p&gt;This term, I'm teaching an introductory programming course in Java and a fourth-term elective in Macromedia's Flash. Already, that's got a bit of variety, but it doesn't stop there.&lt;/p&gt;  &lt;p&gt;On the side, I like to do DotNetNuke programming, and I'm currently doing some custom modules that involve interfacing with an external database (other than the one for the DNN portal) that's an Oracle database. I'm accessing the Oracle database through MS's DAAB (Data Access Application Blocks), and 'cause I'm not an Oracle programmer, I'm having to learn a bit about what makes it different from Sql Server. On top of that, I've been picking up a bit of a passion for TDD (Test-Driven Development or Test-Driven Design), and I've been just loving the cool refactoring tools that are available for Visual Studio.&lt;/p&gt;  &lt;p&gt;In the past few years, I've also dived (somewhat) deep into DocBook and I've toyed some with XML &amp;amp; XSLT. Often, I get into a technology or a toolset because of a promise (or hope) that it will lead me closer to my techno-nirvana of being able to integrate all my disparate IT work more and more seamlessly. I do technical writing for the &amp;quot;intro&amp;quot; programming levels, and for a few advanced programming. I like to show how some of the things in IT that seem miles apart in their focus are actually quite closely related (such as the fields of graphics design and the approach of client-server/3-tier programming). I've got scads of Visio documents, Word &amp;amp; PowerPoint documents, DocBook articles, and sample code in C++/Java/VB. I've got reference materials, tutorials, samples, exams, labs, etc. in all kinds of formats, and I want them all to play together nicely.&lt;/p&gt;  &lt;p&gt;I want, ultimately, to have all my work searchable, easy to re-organize, and portable. XML, of course, will be part of the solution, but not by itself, and certainly not just in its hard-core format (i.e., hand-crafted XML &amp;amp; XSDs, with XSLT, etc., all in a text-editor). It's vastly important to use tools that enhance productivity, not impede it, and too often the advocates of some technologies are so into their own little &amp;quot;Geekdom&amp;quot; that they fail to see that. Likewise, I want technology to make my life easier, more productive, and (especially as the years go on) more resistant to my tendency to lose &amp;amp; forget things. Oh yeah - I also want it all to be cheap. I want to be able to do a lot, do it quickly, and have lots &amp;amp; lots of control, so it can be both uniquely what I want and easy for others to take and shape into what they want -- I want to paint fine details with a big brush in a hurry.&lt;/p&gt;  &lt;p&gt;While that's all a bit of a dream right now, I'm still holding on to hope because I see more and more tools &amp;amp; technologies converging and I see more and more of the &amp;quot;big players&amp;quot; in IT working toward making their own world play nicely with others.&lt;/p&gt;  &lt;p&gt;And, yes, despite all my interest in intense IT development, I do like teaching newbie programmers, even though it feels at times like I'm having to &amp;quot;slow myself down&amp;quot; to give them a chance to keep up. In a way, I'll probably always be at extremes when it comes to the IT world, and that's ok, 'cause it's nice to think of myself as into &amp;quot;extreme programming.&amp;quot;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:19:20 PM"," "," "," "," "
"Book Idea!","","","Book Idea!","&lt;p&gt;Every now and then, I get a crazy (or not-so-crazy) idea for a book. Sometimes the idea includes an outline of the book contents, and sometimes it's just a book title (suggestive of the contents). Here's one of those book title ideas (birthed after reading about Dilbert in Wikipedia)&lt;img border=&quot;0&quot; src=&quot;http://www.gilleland.info/Portals/_default/Smileys/wink.gif&quot; /&gt;.&lt;/p&gt;  &lt;blockquote style=&quot;margin-right: 0px&quot; dir=&quot;ltr&quot;&gt;   &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;font color=&quot;#0000ff&quot;&gt;&amp;quot;Failing Your Way to the Top: A Background Check of Some Big Name CEOs&amp;quot;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:21:03 PM"," "," "," "," "
"Finally!","","","Finally!","&lt;p&gt;Wohoo!!&lt;/p&gt;  &lt;p&gt;My computer's finally in!&lt;/p&gt;  &lt;p&gt;It's about two and a half weeks into teaching classes, almost a month since I came back from holidays, and the new desktop computer that I was to get over the summer to replace my ailing (&amp;amp; memory-starved) laptop has finally arrived. Our tech guys at CST have been working hard to get labs up &amp;amp; running &amp;amp; instructors fitted out with their new computers, but it's been a time-crunch for them because of the [very] late arrival of all the hardware (and having to work around times that labs are free for maintenance. But at last my computer's in, and I now have the fun time of getting it re-configured back to what I need it to be.&lt;/p&gt;  &lt;p&gt;It's times like this that I think of the blogs I read recently on &lt;a href=&quot;http://dotnetnuke.com/&quot; target=&quot;_blank&quot;&gt;DotNetNuke&lt;/a&gt;, where &lt;a href=&quot;http://dotnetnuke.com/Community/Blogs/tabid/825/EntryID/1101/Default.aspx&quot; target=&quot;_blank&quot;&gt;Joe Brinkman wrote about using virtual machines&lt;/a&gt; to allow him to painlessly upgrade hardware without having to go through all the re-install work to get his programs up &amp;amp; running. &lt;a href=&quot;http://dotnetnuke.com/Community/Blogs/tabid/825/EntryID/1105/Default.aspx&quot; target=&quot;_blank&quot;&gt;Nik Kalyani also blogged&lt;/a&gt; about how using virtual machines is taking away the &amp;quot;bad new&amp;quot; part of the &amp;quot;good news/bad news&amp;quot; of hardware upgrades.&lt;/p&gt;  &lt;p&gt;I guess I'll get into the virtual machine approach to, just because I know that I'm going to want to upgrade my home hardware very soon, and I find that I have more (&amp;amp; better) software at home for development than what I'm often using at work ('cause I try to honor the license agreements of not installing software on multiple machines, even if I'm the only one ever using the software, and the machines are miles apart). It would be nice to just have the needed virtual machines ready to go, and I could move around more freely without suffering productivity losses over the &amp;quot;oh, yeah, that program's on the other box.&amp;quot;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:22:50 PM"," "," "," "," "
"DNN Educational Modules","","","DNN Educational Modules","&lt;p&gt;Well, as I get further into this term's teaching, I'm realizing more and more that I want to be using DotNetNuke for my instructor portal, but I really need to develop/get some educational-use modules. I need modules to do stuff like managing marks and assignments for users/students. A quick look at the different categories of community modules shows that there is no category for Educational modules, so aside from Googling, I'm left with creating my own (which probably is a good thing, if only I had the time).&lt;/p&gt;  &lt;p&gt;So, for now, the best place to start is with making some requirements for these modules. Sigh... I need a staff....&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:24:33 PM"," "," "," "," "
"Cleaning up...","","","Cleaning up...","Early in the morning, and I'm spending a few minutes cleaning up my site's articles and blogs. Specifically, I've moved some items from my Articles page into my Blogs page, because they were largely just references to articles written by others. Not that it matters to anyone, at this point, 'cause I don't have any &amp;quot;readership&amp;quot; as of yet, but at least you know where it's moved to....   &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:28:03 PM"," "," "," "," "
"Using Reflection to Access Private Members","","","Using Reflection to Access Private Members","This &lt;a href=&quot;http://www.jroller.com/page/CoBraLorD/20040901&quot; target=&quot;_blank&quot;&gt;blog&lt;/a&gt; by Arne Vandamme is a good intro to how you can use Reflection in .NET and Java to access private members of classes. This blog was a &amp;quot;break-through&amp;quot; article for me in my beginnings with TDD, as I was wrestling with a way to build tests for students' labs.   &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:30:16 PM"," "," "," "," "
"Build Java Apps that Can Multitask","","","Build Java Apps that Can Multitask","&lt;p&gt;This &lt;a href=&quot;http://www.devx.com/java/article/27439&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt; by Raghu Donepudi gives an overview and introduction to the java.util.concurrent package and how it can be used. Here's the introduction below....&lt;/p&gt;  &lt;blockquote style=&quot;margin-right: 0px&quot; dir=&quot;ltr&quot;&gt;   &lt;p align=&quot;left&quot;&gt;&lt;em&gt;&amp;quot;The java.util.concurrent package in J2SE 5.0 provides a new thread framework for handling many of the low-level details associated with creating, executing, and managing threads. Take a closer look at its important features.&amp;quot;&lt;/em&gt;&lt;/p&gt;    &lt;p align=&quot;right&quot;&gt;&lt;a href=&quot;http://www.devx.com/java/article/27439&quot;&gt;March 2, 2005 - by Raghu Donepudi&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:31:21 PM"," "," "," "," "
"Four Principles for True Technology Integration","","","Four Principles for True Technology Integration","&lt;p&gt;In her &lt;a href=&quot;http://www.microsoft.com/Education/FourPrinciples.mspx&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt;, Brenda Dyck lists four significant principles for &amp;quot;&lt;a href=&quot;http://www.microsoft.com/Education/FourPrinciples.mspx&quot; target=&quot;_blank&quot;&gt;integrating technology practices&lt;/a&gt;&amp;quot; in the classroom. They are,&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Information users need to become knowledge creators &lt;/li&gt;    &lt;li&gt;Individual knowledge acquisition needs to tap into global collaboration. &lt;/li&gt;    &lt;li&gt;There's power in connecting learning groups for mutual benefit. &lt;/li&gt;    &lt;li&gt;Behind every technology-rich learning environment is [a bold administrator]. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;It's a worth-while read for all educators using IT.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:32:57 PM"," "," "," "," "
"Momentum...","","","Momentum...","&lt;p&gt;Well, this blog is less about really having something to say and more about getting into a habit of blogging...&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;Today, I've been back at teaching at NAIT, and getting into the swing of things. This term, I'm teaching a first-level course (Java) and a fourth-level course (Flash). It's nice teaching stuff I've done before, 'cause the prep for the classes gets easier. The hard part is often seeing all the extra I would like to do to get the courses beefed up. It takes a while, and, being a bit of a perfectionist, never seems to end....&lt;/p&gt;  &lt;p&gt;What I'm really looking forward to is finally getting my new computer at work! I've been without one for just over a week now, having handed over my aging laptop and the loaner lab computer so that they can be &amp;quot;cascaded&amp;quot; for other purposes. But because the replacement computers have been slow in coming, I'm learning to do without for a short while, relying on lab computers.&lt;/p&gt;  &lt;p&gt;On a more positive note, I've got my database access back, after having it &amp;quot;broken&amp;quot; with a domain migration that happened over holidays. Now I can get around to reviving a DNN installation &amp;amp; getting my notes back :)&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:35:00 PM"," "," "," "," "
"Up and Running!","","","Up and Running!","&lt;p&gt;Well!&lt;/p&gt;  &lt;p&gt;After having played around non-committally with blogs on 3rd-party blog hosting sites, and finally getting around to installing the latest blog module (v. 3.02.00 in DNN 4.3.4) on my own site (&lt;a href=&quot;http://www.Gilleland.info&quot;&gt;www.Gilleland.info&lt;/a&gt;), I'm officially inaugurating it all with this posting.&lt;/p&gt;  &lt;p&gt;I'm also doing some re-design of my personal website. I thought I would try for a &amp;quot;Google&amp;quot;-like look, just for fun, but who knows what the final permanent skin will be....&lt;/p&gt;  &lt;p&gt;Also, with my new site comes some plans on what I'll be using it for (again, who knows what the finished product will be):&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Since I teach at NAIT (&lt;a href=&quot;http://www.nait.ca&quot;&gt;www.nait.ca&lt;/a&gt;) in the CST program (&lt;a href=&quot;http://cst.nait.ca&quot;&gt;http://cst.nait.ca&lt;/a&gt;), I am wanting to make notes &amp;amp; thoughts available to my students on my instructor website. I also have other postings and articles that I want to do that have nothing to do with my job (but which might still be of interest to my students). Hence, the idea to make my personal website a place where I can post &lt;a href=&quot;&quot;&gt;blogs&lt;/a&gt; and &lt;a href=&quot;&quot;&gt;articles&lt;/a&gt; on a wide, wide variety of topics. We'll se how successful I'm at in all of this. ;) &lt;/li&gt;    &lt;li&gt;While I'm at it, I thought I might get around to doing some general &lt;a href=&quot;http://www.gilleland.info/AboutMe/tabid/687/Default.aspx&quot;&gt;biography info on myself&lt;/a&gt; (maybe with a resume in the future). &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;At present, there's not much on this site, but that can (hopefully) change in the future! Stay tuned!!!&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/6/2009 3:37:39 PM"," "," "," "," "
"Personal Project Management: The Quest","","","Personal Project Management: The Quest","&lt;p&gt;TBA&lt;/p&gt;  &lt;p&gt;The beauty of paper and a simple to-do list    &lt;br /&gt;- simplicity     &lt;br /&gt;- immediacy&lt;/p&gt;  &lt;p&gt;The bane of paper to-do lists    &lt;br /&gt;- too many     &lt;br /&gt;- gets lost/misplaced     &lt;br /&gt;- old lists stay around (w. items un-checked)     &lt;br /&gt;- what did I do today?&lt;/p&gt;  &lt;p&gt;The limitations    &lt;br /&gt;- not tied to source (disconnected)     &lt;br /&gt;- can’t aggregate or search     &lt;br /&gt;- status: done or not done, no “other” or “postponed” status to apply&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;Types of ToDo/Task Lists    &lt;br /&gt;&amp;#160; o People (appointments/contacts)     &lt;br /&gt;&amp;#160; o Projects (tasks, priority, development &amp;amp; “tools integration”, “what I got done”, billing, planning, etc)&lt;/p&gt;  &lt;p&gt;Compare:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Paper &amp;amp; Pen (&amp;amp; scattered electronic document &amp;amp; scattered memory…)&lt;/li&gt;    &lt;li&gt;OnTime&lt;/li&gt;    &lt;li&gt;TargetProcess&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://unfuddle.com/&quot; target=&quot;_blank&quot;&gt;Unfuddle&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.projectlocker.com/&quot; target=&quot;_blank&quot;&gt;ProjectLocker&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.springloops.com/&quot; target=&quot;_blank&quot;&gt;SpringLoops&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Comparison Grid&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Project Management&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Agile Support = Lots | Some | None&lt;/li&gt;      &lt;li&gt;Workflows&lt;/li&gt;      &lt;li&gt;Burn-down charts&lt;/li&gt;      &lt;li&gt;Team/Task Management&lt;/li&gt;      &lt;li&gt;Time Tracking&lt;/li&gt;      &lt;li&gt;Multiple Projects&lt;/li&gt;      &lt;li&gt;Milestones&lt;/li&gt;      &lt;li&gt;Releases&lt;/li&gt;      &lt;li&gt;Iterations&lt;/li&gt;      &lt;li&gt;Simplicity&lt;/li&gt;      &lt;li&gt;3rd party hosting&lt;/li&gt;      &lt;li&gt;Self hosting&lt;/li&gt;      &lt;li&gt;Ease-of-use&lt;/li&gt;      &lt;li&gt;Customization = Lots | Some | None&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;Code Repository&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Subversion support&lt;/li&gt;      &lt;li&gt;3rd party hosting&lt;/li&gt;      &lt;li&gt;Self hosting&lt;/li&gt;      &lt;li&gt;# Projects (for Free)&lt;/li&gt;      &lt;li&gt;# Projects / $$&lt;/li&gt;      &lt;li&gt;Tools Integration (VS2008)&lt;/li&gt;      &lt;li&gt;TimeSnapper Integration&lt;/li&gt;      &lt;li&gt;AnkhSVN Support&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;Document Management&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Document Versioning (ala Subversion)&lt;/li&gt;      &lt;li&gt;Document Publishing (Draft to Final to Public)&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;Collaboration Capacity&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;# Free Users&lt;/li&gt;      &lt;li&gt;# Users / $$&lt;/li&gt;      &lt;li&gt;Assign/Restrict Users per Project&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;Customer Feedback&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Emails from Customer&lt;/li&gt;      &lt;li&gt;Email Auto-responder&lt;/li&gt;      &lt;li&gt;Bug Reports&lt;/li&gt;      &lt;li&gt;Feature Requests&lt;/li&gt;      &lt;li&gt;Feature Voting&lt;/li&gt;      &lt;li&gt;Ticket Tracking (for Customer)&lt;/li&gt;      &lt;li&gt;Ticket Tracking (for me)&lt;/li&gt;      &lt;li&gt;Search Bugs&lt;/li&gt;      &lt;li&gt;Search Features&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;Other (e.g.: unique features or limitations)&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;TargetProcess has an open API to develop my own custom integrations &amp;amp; solutions&lt;/li&gt;      &lt;li&gt;OnTime’s VS2008 add-in allows developer to create/add/edit tasks&lt;/li&gt;      &lt;li&gt;TargetProcess has a “timer” in the VS2008 add-in&lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;Desired Customizations:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Time Tracking&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Intensity = Very | Well-Paced | Light | Very Light&lt;/li&gt;      &lt;li&gt;Time of Day = AM + PM + Night&lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;   &lt;hr /&gt;&lt;/p&gt;  &lt;p&gt;[The article]&lt;/p&gt;  &lt;h1&gt;The Quest&lt;/h1&gt;  &lt;p&gt;I teach computer programming full time and run my own IT business part time. It’s a wonderful combination, because my work in each area helps to support the other. But, it has its pitfalls.&lt;/p&gt;  &lt;p&gt;The biggest shortcoming of these two jobs is that I have so many “irons in the fire” that it’s hard to keep all my projects straight. On top of that, I often get great ideas for projects that I may never get around to actually implementing (mainly, because my own business is a one-man show).&lt;/p&gt;  &lt;p&gt;In light of this shortcoming, I have sporadically ventured on the quest for a meaningful and easy-to-use toolset to improve my productivity. I want it all: Project Management, Code Repository, Document Management, Collaboration Capacity, and Customer Feedback. Oh, and one last thing: I want it to be free (or almost free)! After all, as a one-man IT shop that can’t afford employees (yet…), I need to trim my costs as much as possible.&lt;/p&gt;  &lt;p&gt;The path of this quest has often been vague, and I have found myself running after this, that and the other thing. Recently, however, my quest has started to take some shape, and I’ve begun comparing different solutions (and combinations). Here’s a chart of my initial findings:&lt;/p&gt;  &lt;table border=&quot;1&quot; cellspacing=&quot;2&quot; cellpadding=&quot;2&quot; width=&quot;500&quot;&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;Project Management&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;Goal&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;OnTime&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;TargetProcess&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;Unfuddle&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;ProjectLocker&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;SpringLoops&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;Summary&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;71&quot;&gt;&amp;#160;&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","9/13/2009 10:23:44 PM"," "," "," "," "
"Agile Project Planning vs. Traditional Project Planning","","","Agile Project Planning vs. Traditional Project Planning","&lt;p&gt;I read an &lt;a href=&quot;http://www.extremeplanner.com/articles/Agile-Project-Planning.html&quot; target=&quot;_blank&quot;&gt;article at ExtremePlanner.com&lt;/a&gt; that takes a look at traditional project planning and the tensions/problems inherent to that approach.&lt;/p&gt;  &lt;p&gt;It’s interesting to note how important project planning is to the success or failure of a project, and to see that some of the tensions built into the traditional approach (“plan everything, then develop”) will naturally undermine the success of a project. In many ways, I see this as yet another reason that Agile project planning stands heads &amp;amp; shoulders above the traditional approach.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.lostechies.com/blogs/joe_ocampo/archive/2007/09/20/agile-vs-traditional-development-cost-models-maybe.aspx&quot; target=&quot;_blank&quot;&gt;Another article&lt;/a&gt; I read recently compares the cost models of Agile and Traditional project development. What really gets my attention is the profit generated by the value stream of a mature agile development. Now that is something to sell a client on!&lt;/p&gt;  &lt;p&gt;By the way, in that cost model article, it’s worth reading the comments at the end, especially following up on the &lt;a href=&quot;http://www.ambysoft.com/essays/brokenTriangle.html&quot; target=&quot;_blank&quot;&gt;“Broken Iron Triangle” Software Development Anti-pattern&lt;/a&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/5/2009 4:54:10 AM"," "," "," "," "
"StatBrain &ndash; See How Your Website is Doing&hellip;","","","StatBrain &ndash; See How Your Website is Doing&hellip;","&lt;p&gt;I stumbled upon a site called &lt;a href=&quot;http://www.statbrain.com&quot; target=&quot;_blank&quot;&gt;StatBrain&lt;/a&gt; that gives very general statistics on page visits to a domain. For example, if I go to &lt;a href=&quot;http://www.statbrain.com&quot; target=&quot;_blank&quot;&gt;StatBrain&lt;/a&gt; and type in &lt;a href=&quot;&quot;&gt;my site&lt;/a&gt; (&lt;a href=&quot;http://www.statbrain.com/www.kb.gilleland.info/&quot; target=&quot;_blank&quot;&gt;kb.Gilleland.info&lt;/a&gt;), I get the following results:&lt;/p&gt;  &lt;p&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px&quot; title=&quot;StatBrain for http://kb.Gilleland.info&quot; border=&quot;0&quot; alt=&quot;StatBrain for http://kb.Gilleland.info&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-StatBrainSeeHowYourWebsiteisDoing_115B-image_3.png&quot; width=&quot;744&quot; height=&quot;101&quot; /&gt; &lt;/p&gt;  &lt;p&gt;So, try &lt;a href=&quot;http://www.StatBrain.com&quot; target=&quot;_blank&quot;&gt;StatBrain&lt;/a&gt; on your website, and see what you think. Is it accurate?&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/12/2009 12:14:11 AM"," "," "," "," "
"Thinking Through Form Design","","","Thinking Through Form Design","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;One of the benefits of teaching computer programming to post-secondary students is stumbling across all sorts of great resources on the web. I ran into two of them today.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.lukew.com/resources/articles/web_forms.html&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;“Web Application Form Design”&lt;/a&gt; by Luke Wroblewski (&lt;a href=&quot;http://www.lukew.com/&quot; target=&quot;_blank&quot;&gt;LukeW Interface Designs&lt;/a&gt;), and&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2008/04/17/web-form-design-modern-solutions-and-creative-ideas/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;“Web Form Design: Modern Solutions and Creative Ideas”&lt;/a&gt; by Vitaly Friedman&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href=&quot;http://www.lukew.com/resources/articles/web_forms.html&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 5px 0px 0px; display: inline; border-top: 0px; border-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; align=&quot;left&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-ThinkingThroughFormDesign_14ADC-image_3.png&quot; width=&quot;240&quot; height=&quot;71&quot; /&gt;&lt;/a&gt; The &lt;a href=&quot;http://www.lukew.com/resources/articles/web_forms.html&quot; target=&quot;_blank&quot;&gt;first article by Luke Wroblewski&lt;/a&gt; gives a good introduction and examination of what makes for friendly web forms. He provides nice, simple examples of effective form layouts and identifies the advantages and disadvantages they hold. He has a book, too, called Web Form Design: Filling in the Blanks. If the article is any indication of what’s in the book, it would be worth looking into.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2008/04/17/web-form-design-modern-solutions-and-creative-ideas/&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 0px 0px 5px; display: inline; border-top: 0px; border-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-ThinkingThroughFormDesign_14ADC-image_6.png&quot; width=&quot;240&quot; height=&quot;97&quot; /&gt;&lt;/a&gt; The &lt;a href=&quot;http://www.smashingmagazine.com/2008/04/17/web-form-design-modern-solutions-and-creative-ideas/&quot; target=&quot;_blank&quot;&gt;second article by Vitaly Friedman&lt;/a&gt; is thought-provoking because of the whole creative aspect of designing web forms. If you are tired of the standard types of forms out there, then looking over this article could whet your appetite for something more exciting. Again, this is definitely worth the read.&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;It’s also worth noting that this second article is from a website called Smashing Magazine (&lt;a href=&quot;http://www.SmashingMagazine.com&quot;&gt;www.SmashingMagazine.com&lt;/a&gt;),&amp;#160; which I’ve found to be a great resource for inspiration and technical advice. It’s definitely on my “watch” list of sites to browse around.&lt;/p&gt;  &lt;p&gt;So, check these out, and start making your sites sweeter. Cheers!&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/13/2009 10:42:46 PM"," "," "," "," "
"C# and VB.Net Tutorials by Mike Kitchen","","","C# and VB.Net Tutorials by Mike Kitchen","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;  &lt;p&gt;If you’re looking for a good tutorial to learn C# or VB.Net, then I would recommend the writings of a fellow in the UK by the name of &lt;!--Begin mp_html_link_1_67de425f--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_67de425f'  } )&quot;&gt;Mike Kitchen&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_67de425f--&gt;. He has a website called &lt;a href=&quot;http://www.publicjoe.co.uk/&quot; target=&quot;_blank&quot;&gt;PublicJoe&lt;/a&gt; that is chock full of good reading material. The &lt;a href=&quot;http://www.publicjoe.co.uk/csharp/tut/tut.html&quot; target=&quot;_blank&quot;&gt;C# tutorial&lt;/a&gt; looks quite extensive, and the &lt;a href=&quot;http://www.publicjoe.co.uk/vbnet/tut/tut.html&quot; target=&quot;_blank&quot;&gt;VB.Net tutorial&lt;/a&gt; looks pretty good too.&lt;/p&gt;  &lt;p&gt;I’ve been impressed with the amount he has written in his tutorials, but it seems a bit difficult to learn more about him or find out how to contact him (other than his hotmail account). Hopefully I can get in touch with him someday – I want to see if he’s turned his online tutorials into a book. &lt;strong&gt;&lt;em&gt;&lt;u&gt;&lt;font color=&quot;#004000&quot;&gt;Mike&lt;/font&gt;&lt;/u&gt;&lt;/em&gt;&lt;/strong&gt;: If you’re out there reading this, then drop me a line at &lt;em&gt;dgilleland[AT]Nait.ca&lt;/em&gt;.&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_67de425f--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_67de425f&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_67de425f--&gt; &lt;p&gt;&lt;/p&gt;  &lt;h2&gt;Mike Kitchen and PublicJoe&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;Mike Kitchen&lt;/strong&gt; has written a number of pages of tutorials and other material on &lt;a href=&quot;http://www.publicjoe.co.uk/&quot; target=&quot;_blank&quot;&gt;PublicJoe&lt;/a&gt;. He has also written articles on &lt;a href=&quot;http://www.CodeProject.com&quot; target=&quot;_blank&quot;&gt;CodeProject&lt;/a&gt; (see &lt;a href=&quot;http://www.codeproject.com/Members/Mike-Kitchen&quot; target=&quot;_blank&quot;&gt;his member profile&lt;/a&gt;).&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_1_67de425f--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_67de425f--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/16/2009 11:10:40 AM","1336"," "," ","&lt;p&gt;If you’re looking for a good tutorial to learn C# or VB.Net, then I would recommend the writings of a fellow in the UK by the name of &lt;strong&gt;Mike Kitchen&lt;/strong&gt;. He has a website called &lt;a href=&quot;http://www.publicjoe.co.uk/&quot; target=&quot;_blank&quot;&gt;PublicJoe&lt;/a&gt; that is chock full of good reading material. The &lt;a href=&quot;http://www.publicjoe.co.uk/csharp/tut/tut.html&quot; target=&quot;_blank&quot;&gt;C# tutorial&lt;/a&gt; looks quite extensive, and the &lt;a href=&quot;http://www.publicjoe.co.uk/vbnet/tut/tut.html&quot; target=&quot;_blank&quot;&gt;VB.Net tutorial&lt;/a&gt; looks pretty good too.&lt;/p&gt;"
"Hand-Rolling DAL Code","","","Hand-Rolling DAL Code","&lt;p&gt;Every once in a while, I find myself needing to hand-code my own DAL (mostly because I play with different kinds of DAL and ORM approaches).&lt;/p&gt;  &lt;p&gt;Today, I wanted to generate a lot of code that basically needs the names of the tables and the stored procedures that affect them. Fortunately, I had named all my stored procedures to start with the name of the table that they depend on. All I would need to do is run a query on the sysobjects table, pull the results into EditPlus and generate another set of queries, and then run those queries to get the text names that I’m looking for.&lt;/p&gt;  &lt;p&gt;Here’s the steps (in detail).&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Run a query to get the names of the tables I want:      &lt;ol&gt;       &lt;li&gt;&lt;span style=&quot;line-height: 115%; font-family: &amp;quot;Courier New&amp;quot;; color: blue; font-size: 10pt; mso-fareast-font-family: calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: en-us; mso-fareast-language: en-us; mso-bidi-language: ar-sa; mso-no-proof: yes&quot;&gt;select&lt;/span&gt;&lt;span style=&quot;line-height: 115%; font-family: &amp;quot;Courier New&amp;quot;; font-size: 10pt; mso-fareast-font-family: calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: en-us; mso-fareast-language: en-us; mso-bidi-language: ar-sa; mso-no-proof: yes&quot;&gt; &lt;span style=&quot;color: blue&quot;&gt;name&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;from&lt;/span&gt; sysobjects &lt;span style=&quot;color: blue&quot;&gt;where&lt;/span&gt; xtype&lt;span style=&quot;color: gray&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: red&quot;&gt;'U'&lt;/span&gt; &lt;span style=&quot;color: gray&quot;&gt;and&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;name&lt;/span&gt; &lt;span style=&quot;color: gray&quot;&gt;like&lt;/span&gt; &lt;span style=&quot;color: red&quot;&gt;'Exam%'&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;order&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;by&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;/li&gt;        &lt;li&gt;This returned the following result:          &lt;br /&gt;ExamBank_Choice           &lt;br /&gt;ExamBank_ExamProfile           &lt;br /&gt;ExamBank_MultipleChoiceProblem           &lt;br /&gt;ExamBank_ProblemSet           &lt;br /&gt;ExamBank_ProfileItemSet           &lt;br /&gt;ExamWriter_Choice           &lt;br /&gt;ExamWriter_Exam           &lt;br /&gt;ExamWriter_MultipleChoiceProblem           &lt;br /&gt;ExamWriter_ProblemSet &lt;/li&gt;     &lt;/ol&gt;   &lt;/li&gt;    &lt;li&gt;Copy this text into EditPlus and run the following search/replace:      &lt;ol&gt;       &lt;li&gt;Search:          &lt;br /&gt;^(Exam.+)$ &lt;/li&gt;        &lt;li&gt;Replace with:          &lt;br /&gt;SELECT 'Table\1'           &lt;br /&gt;SELECT name FROM sysobjects WHERE xtype='P' AND name like '\1%' ORDER BY name           &lt;br /&gt;SELECT '--&amp;#160; --' &lt;/li&gt;        &lt;li&gt;This produces the following script.          &lt;p style=&quot;line-height: normal; margin-bottom: 0pt; mso-layout-grid-align: none&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;Courier New&amp;quot;; color: blue; font-size: 10pt; mso-no-proof: yes&quot;&gt;SELECT&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;Courier New&amp;quot;; font-size: 10pt; mso-no-proof: yes&quot;&gt; &lt;span style=&quot;color: red&quot;&gt;'TableExamBank_Choice' &lt;/span&gt;&lt;/span&gt;            &lt;p&gt;&lt;/p&gt;         &lt;/p&gt;          &lt;p&gt;&lt;/p&gt;          &lt;p&gt;&lt;/p&gt;          &lt;p style=&quot;line-height: normal; margin-bottom: 0pt; mso-layout-grid-align: none&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;Courier New&amp;quot;; color: blue; font-size: 10pt; mso-no-proof: yes&quot;&gt;SELECT&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;Courier New&amp;quot;; font-size: 10pt; mso-no-proof: yes&quot;&gt; &lt;span style=&quot;color: blue&quot;&gt;name&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;FROM&lt;/span&gt; sysobjects &lt;span style=&quot;color: blue&quot;&gt;WHERE&lt;/span&gt; xtype&lt;span style=&quot;color: gray&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: red&quot;&gt;'P'&lt;/span&gt; &lt;span style=&quot;color: gray&quot;&gt;AND&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;name&lt;/span&gt; &lt;span style=&quot;color: gray&quot;&gt;like&lt;/span&gt; &lt;span style=&quot;color: red&quot;&gt;'ExamBank_Choice%'&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;ORDER&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;BY&lt;/span&gt; &lt;span style=&quot;color: blue&quot;&gt;name &lt;/span&gt;&lt;/span&gt;            &lt;p&gt;&lt;/p&gt;         &lt;/p&gt;          &lt;p&gt;&lt;/p&gt;          &lt;p&gt;&lt;/p&gt;         &lt;span style=&quot;line-height: 115%; font-family: &amp;quot;Courier New&amp;quot;; color: blue; font-size: 10pt; mso-fareast-font-family: calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: en-us; mso-fareast-language: en-us; mso-bidi-language: ar-sa; mso-no-proof: yes&quot;&gt;SELECT&lt;/span&gt;&lt;span style=&quot;line-height: 115%; font-family: &amp;quot;Courier New&amp;quot;; font-size: 10pt; mso-fareast-font-family: calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: en-us; mso-fareast-language: en-us; mso-bidi-language: ar-sa; mso-no-proof: yes&quot;&gt; &lt;span style=&quot;color: red&quot;&gt;'--&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160; &lt;/span&gt;--'&lt;/span&gt;&lt;/span&gt; &lt;/li&gt;     &lt;/ol&gt;   &lt;/li&gt;    &lt;li&gt;Executing the generated sql, I get the following result (shortened), which I can paste into Visual Studio, comment out, and pull my stored procedure names as needed for my code.&lt;/li&gt;    &lt;ol&gt;     &lt;li&gt;&lt;span style=&quot;line-height: 115%; font-family: &amp;quot;Courier New&amp;quot;; font-size: 10pt; mso-fareast-font-family: calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: en-us; mso-fareast-language: en-us; mso-bidi-language: ar-sa; mso-no-proof: yes&quot;&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'--------------------           &lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'TableExamBank_Choice           &lt;br /&gt;&lt;/span&gt;          &lt;br /&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'ExamBank_Choice_Add           &lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'ExamBank_Choice_Delete           &lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'ExamBank_Choice_Get           &lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'ExamBank_Choice_GetByMultipleChoiceProblem           &lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'ExamBank_Choice_List           &lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun: yes&quot;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/span&gt;&lt;span style=&quot;color: green&quot;&gt;'ExamBank_Choice_Update&lt;/span&gt;&lt;/span&gt; &lt;/li&gt;   &lt;/ol&gt; &lt;/ol&gt;  &lt;p&gt;And that’s all. Now, I’ve got it blogged &amp;amp; I (or you) can refer to it again when needed. For more useful SQL scripts, check out some tips on this &lt;a href=&quot;http://stackoverflow.com/questions/578454/useful-system-stored-procedures-in-sql-server&quot; target=&quot;_blank&quot;&gt;StackOverflow&lt;/a&gt; posting. That’s also where I got &lt;a href=&quot;http://wiki.lessthandot.com/index.php/SQL_Server_Programming_Hacks_-_100%2B_List&quot; target=&quot;_blank&quot;&gt;this list of short and handy SQL scripts&lt;/a&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/28/2009 7:20:00 AM"," "," "," "," "
"Note to Self &ndash; ObjectDataSource","","","Note to Self &ndash; ObjectDataSource","&lt;p&gt;I was looking a bit deeper into the ObjectDataSource, and found a series of helpful &lt;a href=&quot;http://www.manuelabadia.com/blog/&quot; target=&quot;_blank&quot;&gt;blogs by Manuel Abadia&lt;/a&gt;. Here they are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;ObjectDataSource In Depth      &lt;ul&gt;       &lt;li&gt;&lt;a href=&quot;http://www.manuelabadia.com/blog/PermaLink,guid,c72852ae-1fdd-4934-a715-f565ceaf21cc.aspx&quot; target=&quot;_blank&quot;&gt;Part 1&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://www.manuelabadia.com/blog/PermaLink,guid,f002752d-1258-475d-9ec0-eee3bd98d0a4.aspx&quot; target=&quot;_blank&quot;&gt;Part 2&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://www.manuelabadia.com/blog/PermaLink,guid,eaa3eed8-f997-43c4-8c30-78c2f72d0c86.aspx&quot; target=&quot;_blank&quot;&gt;Part 3&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href=&quot;http://www.manuelabadia.com/blog/PermaLink,guid,32e83915-a503-403e-97c7-e20dcf2e0b7e.aspx&quot; target=&quot;_blank&quot;&gt;Part 4&lt;/a&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.manuelabadia.com/products/EODS_features.aspx&quot; target=&quot;_blank&quot;&gt;ExtendedObjectDataSource&lt;/a&gt; (a commercial version of ObjectDataSource) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Of course, it’s worth looking at the MSDN stuff on this as well:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms227679.aspx&quot; target=&quot;_blank&quot;&gt;Data Source Controls Overview&lt;/a&gt; (not just the ObjectDataSource – there are others too)&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/9a4kyhcx.aspx&quot; target=&quot;_blank&quot;&gt;Overview&lt;/a&gt; and code documentation of the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.objectdatasource.aspx&quot; target=&quot;_blank&quot;&gt;ObjectDataSource&lt;/a&gt; (scroll down for more How to stuff)&lt;/li&gt; &lt;/ul&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/30/2009 2:58:39 AM"," "," "," "," "
"SpeedTest.Net","","","SpeedTest.Net","&lt;div style=&quot;padding-bottom: 5px; padding-left: 5px; padding-right: 5px; float: left; padding-top: 5px&quot;&gt;&lt;a href=&quot;http://www.speedtest.net/index.php?link=1&quot;&gt;&lt;img border=&quot;0&quot; alt=&quot;Test your Internet connection speed at Speedtest.net&quot; src=&quot;http://www.speedtest.net/images/link120x60.gif&quot; width=&quot;120&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;&lt;/div&gt;  &lt;p&gt;How fast is your internet connection? If you haven’t already tried it out, it’s worth taking a look at &lt;a href=&quot;http://www.speedtest.net/index.php&quot; target=&quot;_blank&quot;&gt;SpeedTest.Net&lt;/a&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/30/2009 3:27:06 AM"," "," "," "," "
"Comments and Tasks in Visual Studio","","","Comments and Tasks in Visual Studio","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;&lt;font color=&quot;#800000&quot;&gt;Updated Nov 20, 2009 – I added three more tokens that I’ve started using: RULE, TEST and CLEAN.&lt;/font&gt;&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;You may or may not know that Visual Studio allows you to write comments that, when starting with a certain keyword (token), become Task items. The standard one is the TODO comment, like the following.&lt;/p&gt;  &lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;TODO Task List Token&quot; border=&quot;0&quot; alt=&quot;TODO Task List Token&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-CommentsandTasksinVisualStudio_933-image_6.png&quot; width=&quot;693&quot; height=&quot;129&quot; /&gt; &lt;/p&gt;  &lt;p&gt;This produces an item in the Task List, which can be used to remind oneself of what to do. This is powerful in keeping the developer on-task for what has to be done while allowing him/her to focus on a train of thought by pushing “details” into comments. When it’s time to get back to that TODO item, all one has to do is find it in the Task List and double-click it, which will jump you straight to the line of code for the task. Once you’re finished the task, all you have to do is delete the comment, and it’s removed from your Task List.&lt;/p&gt;  &lt;p&gt;Remember that TODO from above? Well, it would look like this in the Task List.&lt;/p&gt;  &lt;p&gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;Task List&quot; border=&quot;0&quot; alt=&quot;Task List&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-CommentsandTasksinVisualStudio_933-image_3.png&quot; width=&quot;646&quot; height=&quot;242&quot; /&gt; &lt;/p&gt;  &lt;p&gt;Here’s the great thing about this tool: it’s possible to add your own comment/task list tokens! For example, because I find my coding &amp;amp; teaching often gets me learning new &amp;amp; cool things, I could add a token called “BLOG”. That way, I can be reminded later on that I wanted to blog about something I was working on. &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&amp;#39;97b1f808&amp;#39;})&quot; href=&quot;/Portals/50/articles/News-Articles/2009/WLW-CommentsandTasksinVisualStudio_193-image_2.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'1021a47d'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; margin: 5px 0px 5px 10px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;Customize Task List Tokens (click to enlarge)&quot; border=&quot;0&quot; alt=&quot;Customize Task List Tokens (click to enlarge)&quot; title=&quot;Customize Task List Tokens (click to enlarge)&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-CommentsandTasksinVisualStudio_193-image_thumb.png&quot; width=&quot;244&quot; height=&quot;143&quot; /&gt;&lt;/a&gt; When I’m done my other stuff, I can go back, look for something to blog (and blog it) and then delete the comment.&lt;/p&gt;  &lt;p&gt;Here’s a list of my Task List Tokens and how I use them:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;TODAY&lt;/strong&gt; – This is an important task that I just have to do today, particularly if I’m expected to submit my code changes to the &lt;!--Begin mp_html_link_1_1021a47d--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_1021a47d'  } )&quot;&gt;repository&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_1021a47d--&gt;. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;FIXME&lt;/strong&gt; – This is something that needs fixing before that part of the program is ready to use. It’s a known bug that needs addressing, but doesn’t have to be done today. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;REDO&lt;/strong&gt; –This is something that needs refactoring or improvements. It might be small, or it might be large. It’s important enough that it needs to be noted, but it doesn’t stop the product from shipping on time. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;DOCUMENT&lt;/strong&gt; – This is a friendly reminder that I need to document my code, probably with some XML comments. It’s a “low” priority item, mainly to be done when I’m otherwise brain dead or have some time to deal with it. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;INFO&lt;/strong&gt; – This is a comment, note or reminder that might be of interest to someone who’s going to inherit my project. Maybe I’m going on holidays, or I’m being moved around to help another project, and I want someone who comes after me to know what I was up to in a particular bit of code. It can be a great way to bring someone else up to speed on what I’m doing. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;BLOG&lt;/strong&gt; – Well, you guessed it! This is for something that I want to blog about. Maybe it’s a great insight or a design that will bring me acclaim and riches. Or (more likely) it’s just something I want to remember or I think others might want to know about for a problem they’re trying to fix or understand. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;RULE&lt;/strong&gt; – If I’m on a roll for developing basic functionality, and want to remember some validation logic or business rule for later implementation, I can make a note of it with this token. It is helpful to me both for determining my tests as well as for catching the obscure edge tests that pop into my mind when I’m busy building some other area of my app.&lt;/li&gt;    &lt;li&gt;&lt;strong&gt;TEST&lt;/strong&gt; – As a solo-developer, I don’t aim at 100% code coverage (I don’t test stuff that is too simple or that doesn’t appear critical at the time). However, this task token is useful for when I know that I’ll want to build some testing framework around it at a later time (for maintenance &amp;amp;/or peace of mind).&amp;#160; Yes, yes – I know that’s not really the TDD way and that I should write my tests first. TDD is great, and I love it, but it’s just not always practical for the solo developer. Hence this token. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;CLEAN&lt;/strong&gt; – Here’s another solo-developer thing. I know I should “clean up” unused code as I go, but time pressures and uncertainty can plague me when I don’t have someone to help me think through my code. Sometimes I leave a bunch of code from older thought processes, because I’m not sure if I’ll be wanting to come back to it and revive that code. It might be a bunch of methods, or just a couple lines of code. I can keep it around – for a while – but I know I’ll probably want to do some clean-up at the end. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Well, there’s my list! I hope you’ve found it useful. If you have any favorites of your own, just drop a comment and I’ll post it for others to see.&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_1021a47d--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_1021a47d&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_1021a47d--&gt; &lt;p&gt; &lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;A Code Repository is a place to save your code and manage changes. &lt;a href=&quot;http://en.wikipedia.org/wiki/Subversion_(software)&quot; target=&quot;_blank&quot;&gt;Subversion&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Mercurial&quot; target=&quot;_blank&quot;&gt;Mercurial&lt;/a&gt; are popular tools for managing code repositories.&lt;/p&gt;  &lt;p&gt;&lt;/p&gt; &lt;!--End mp_html_detail_body_1_1021a47d--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_1021a47d--&gt;    &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","10/30/2009 11:26:36 PM"," "," "," "," "
"PluralSight Videos","","","PluralSight Videos","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;I stumbled onto a site called &lt;a href=&quot;http://www.pluralsight.com/main/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;PluralSight&lt;/a&gt; that has a few nice looking videos. They do training in .NET development. Here’s a couple of the videos that caught my attention:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.pluralsight.com/main/screencasts/screencast.aspx?id=validation-controls-isvalid&quot; target=&quot;_blank&quot;&gt;ASP.NET Validation Controls&lt;/a&gt; – I found this interesting, not so much for myself as for my students.&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.pluralsight.com/main/screencasts/screencast.aspx?id=wf-service-hellocloudwf&quot; target=&quot;_blank&quot;&gt;Introducing the .NET Workflow Service&lt;/a&gt; – ***** I’ve always wanted to get into using Workflow – this video should be a good quick-start. &lt;strong&gt;It looks like they have a &lt;em&gt;lot&lt;/em&gt; of videos on Workflow Services.&lt;/strong&gt; Gotta check them out….&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.pluralsight.com/main/screencasts/screencast.aspx?id=iis-aspnetdev&quot; target=&quot;_blank&quot;&gt;Web Sites, Applications, and Virtual Directories in IIS&lt;/a&gt; – Again, this is more for my students, but I’ll take a look at it too ‘cause you never know when you’ll learn something new.&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.pluralsight.com/main/screencasts/screencast.aspx?id=understanding-viewstate&quot; target=&quot;_blank&quot;&gt;Understanding ViewState in ASO.NET&lt;/a&gt; – Again, for my students.&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Well, that’s my first quick look at their sight. You might find it interesting too. Bye for now!&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","11/2/2009 12:00:22 AM"," "," "," "," "
"Sesame Street Turns 40","","","Sesame Street Turns 40","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-SesameStreetTurns40_6084-image_2.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'a3ee740f'})&quot; &gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 0px 0px 5px; display: inline; border-top: 0px; border-right: 0px&quot; title=&quot;101 Muppets of Sesame Street&quot; border=&quot;0&quot; alt=&quot;101 Muppets of Sesame Street&quot; title=&quot;101 Muppets of Sesame Street&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-SesameStreetTurns40_6084-image_thumb.png&quot; width=&quot;240&quot; height=&quot;195&quot; /&gt;&lt;/a&gt;Yes, Sesame Street is celebrating 40 years of existence. I found out about it on Google (‘cause of their &lt;!--Begin mp_html_link_1_a3ee740f--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_a3ee740f'  } )&quot;&gt;search page&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_a3ee740f--&gt;). And, I found &lt;a href=&quot;http://www.nationalpost.com/muppets/index.html&quot; target=&quot;_blank&quot;&gt;this page&lt;/a&gt; on the National Post. Do you know who the &lt;a href=&quot;http://www.nationalpost.com/muppets/index.html&quot; target=&quot;_blank&quot;&gt;101 Muppets of Sesame Street&lt;/a&gt; are?&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_a3ee740f--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_a3ee740f&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_a3ee740f--&gt; &lt;p&gt;&lt;/p&gt;  &lt;h1&gt;Google Search&lt;/h1&gt;  &lt;p&gt;Google often puts up special logos on their search page to commemorate events and holidays. I found their page for their &lt;a href=&quot;http://www.google.com/logos/index.html&quot; target=&quot;_blank&quot;&gt;holiday logos&lt;/a&gt;, but I haven’t found their other event logos. Here’s a screen capture of their Sesame Street logo.&lt;/p&gt;  &lt;p&gt;&lt;a href=&quot;http://www.google.ca/search?q=sesame+street&amp;amp;ct=bigbird-hp&amp;amp;oi=ddle&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px&quot; title=&quot;Search Google for Sesame Street&quot; border=&quot;0&quot; alt=&quot;Search Google for Sesame Street&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-SesameStreetTurns40_6084-image_5.png&quot; width=&quot;310&quot; height=&quot;159&quot; /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;!--End mp_html_detail_body_1_a3ee740f--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_a3ee740f--&gt;  &lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","11/4/2009 6:00:53 AM"," "," "," "," "
"A Holy Experience (.com)","","","A Holy Experience (.com)","&lt;p&gt;&lt;a href=&quot;http://www.aholyexperience.com/&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 0px 0px 10px; display: inline; border-top: 0px; border-right: 0px&quot; title=&quot;www.aHolyExperience.com&quot; border=&quot;0&quot; alt=&quot;www.aHolyExperience.com&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-AHolyExperience.com_12EBC-image_3.png&quot; width=&quot;244&quot; height=&quot;150&quot; /&gt;&lt;/a&gt;My wife pointed me to this site. It’s basically a blog, but what I find refreshing about it, besides the clear Christian messages with great reflections (&amp;amp; photos), is the music.&lt;/p&gt;  &lt;p&gt;You seldom come across sites, particularly blogs, that have streaming background music. Most that do use music or sounds that’s just plain tacky. This site is different. It’s music is soothing, and that’s a good fit for the content as well.&lt;/p&gt;  &lt;p&gt;So, go over there. Sit a spell, and let the music, the images, and the words wash over you. Let yourself be refreshed. I’m sure you’ll want to come back again and again.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","11/6/2009 8:33:06 PM"," "," "," "," "
"Feeling at Home","","","Feeling at Home","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;When I think of the wisdom and scope of God’s plan, I fall to my knees and pray to the Father, the Creator of everything in heaven and on earth. I pray that from his glorious, unlimited resources he will give you mighty inner strength through his Holy Spirit. And I pray that Christ will be more and more at home in your hearts as you trust in him. May your roots go down deep into the soil of God’s marvelous love.&lt;/strong&gt;       &lt;br /&gt;&lt;!--Begin mp_html_link_1_2e18cbd4--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_2e18cbd4'  } )&quot;&gt;Ephesians 3:14-17&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_2e18cbd4--&gt;, New Living Translation&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;I was reading this passage today, and the phrase that stuck out for me was “I pray that Christ will be more and more at home in your hearts”.&lt;/p&gt;  &lt;p&gt;As a believer in and follower of Jesus, I know that He lives in my heart. Yet, I also know that many times, I haven’t made my heart a comfortable place for Him to live in. The imagery of being “more and more at home” struck me, because I can relate to how in some people’s homes I feel quite comfortable while at other places I feel quite uncomfortable.&lt;/p&gt;  &lt;p&gt;&lt;em&gt;Jesus, please help me in my heart, so that it can be a place that you feel at home. I give you freedom to re-arrange the furniture and to say what stays and what goes. Help me, Holy Spirit, in doing a good and thorough “house cleaning”. Teach me and grow in me the habits that help keep my heart tidy: taking out the garbage, cleaning up the messes, and putting things in their proper place. Let my heart and my life be a place that you want to call home.&lt;/em&gt;&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_2e18cbd4--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_2e18cbd4&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_2e18cbd4--&gt; &lt;p&gt;&lt;/p&gt;  &lt;div class=&quot;bibleverse&quot;&gt;   &lt;h3 id=&quot;p49003014.01-1&quot;&gt;Prayer for Spiritual Strength&lt;/h3&gt;    &lt;p id=&quot;p49003014.05-1&quot;&gt;&lt;span id=&quot;v49003014-1&quot; class=&quot;verse-num&quot;&gt;14 &lt;/span&gt;For this reason I bow my knees before the Father, &lt;span id=&quot;v49003015-1&quot; class=&quot;verse-num&quot;&gt;15 &lt;/span&gt;from whom every family in heaven and on earth is named, &lt;span id=&quot;v49003016-1&quot; class=&quot;verse-num&quot;&gt;16 &lt;/span&gt;that according to the riches of his glory he may grant you to be strengthened with power through his Spirit in your inner being, &lt;span id=&quot;v49003017-1&quot; class=&quot;verse-num&quot;&gt;17 &lt;/span&gt;so that Christ may dwell in your hearts through faith—that you, being rooted and grounded in love, &lt;span id=&quot;v49003018-1&quot; class=&quot;verse-num&quot;&gt;18 &lt;/span&gt;may have strength to comprehend with all the saints what is the breadth and length and height and depth, &lt;span id=&quot;v49003019-1&quot; class=&quot;verse-num&quot;&gt;19 &lt;/span&gt;and to know the love of Christ that surpasses knowledge, that you may be filled with all the fullness of God.&lt;/p&gt;    &lt;p&gt;&lt;a href=&quot;http://www.gnpcb.org/esv/search/?q=Ephesians%203:14-19%20%3Cobject%20type=%22application/x-shockwave-flash%22%20%20data=%22http://www.esvapi.org/assets/play.swf?myUrl=hw%252F49003014-49003019%22%20width=%2240%22%20height=%2212%22%20class=%22audio%22%3E%3Cparam%20name=%22movie%22%20value=%22http://www.esvapi.org/assets/play.swf?myUrl=hw%252F49003014-49003019%22%20/%3E%3Cparam%20name=%22wmode%22%20value=%22transparent%22%20/%3E%3C/object%3E&quot;&gt;Ephesians 3:14-19&lt;/a&gt; &lt;span style=&quot;font-size: smaller&quot;&gt;&lt;a href=&quot;http://www.esvapi.org/v2/rest/passageQuery?key=IP&amp;amp;passage=eph3:14-19&amp;amp;output-format=mp3&quot; target=&quot;_blank&quot;&gt;Listen&lt;/a&gt;&lt;/span&gt; (&lt;a class=&quot;copyright&quot; href=&quot;http://www.esv.org&quot;&gt;ESV&lt;/a&gt;)&lt;/p&gt; &lt;/div&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_1_2e18cbd4--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_2e18cbd4--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","11/7/2009 8:28:14 AM"," "," "," "," "
"Google&rsquo;s Sidewiki","","","Google&rsquo;s Sidewiki","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;http://www.google.com/support/toolbar/bin/answer.py?hl=en&amp;amp;answer=164493&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-right-width: 0px; margin: 0px 5px 5px 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot; title=&quot;Sidewiki&quot; border=&quot;0&quot; alt=&quot;Sidewiki&quot; align=&quot;left&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-GooglesSidewiki_9602-image_3.png&quot; width=&quot;270&quot; height=&quot;224&quot; /&gt;&lt;/a&gt; I just stumbled upon &lt;a href=&quot;http://googleblog.blogspot.com/2009/09/help-and-learn-from-others-as-you.html&quot; target=&quot;_blank&quot;&gt;Google’s Sidewiki&lt;/a&gt; and &lt;a href=&quot;http://www.google.com/support/toolbar/bin/answer.py?hl=en&amp;amp;answer=164493&quot; target=&quot;_blank&quot;&gt;installed it&lt;/a&gt; on my Chrome browser. It looks pretty good. It might spark a bit of a debate, however. It has the potential to turn the whole of the web into a sort of wiki or semi-social media site.&lt;/p&gt;  &lt;h2&gt;Pros&lt;/h2&gt;  &lt;p&gt;On the positive side, it is a great way for my students to comment and give feedback on the stuff I post. Based on what they say, I can make improvements to what I’ve published. Furthermore, they can then share their insights with one another, without having to wait for me to find their comments and make the improvements I suggest.&lt;/p&gt;  &lt;p&gt;Likewise, people can share their insights on pages that don’t provide a feedback or comments form. It can potentially add a lot of value to a given web page.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&amp;lt;EDIT&amp;gt;&lt;/p&gt;    &lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-GooglesSidewiki_9602-image_4.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'cbb0f9b1'})&quot; &gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 0px 10px 10px; display: inline; border-top: 0px; border-right: 0px&quot; title=&quot;Sidewiki Example&quot; border=&quot;0&quot; alt=&quot;Sidewiki Example&quot; title=&quot;Sidewiki Example&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-GooglesSidewiki_9602-image_thumb.png&quot; width=&quot;142&quot; height=&quot;244&quot; /&gt;&lt;/a&gt; &lt;strong&gt;Author’s Note&lt;/strong&gt;: I just tried doing a &lt;a href=&quot;https:/www.google.com/sidewiki/clientui?hl=en&amp;amp;url=http://kb.gilleland.info/Home/tabid/808/ctl/ArticleView/mid/1674/articleId/164/PageID/181/Googlersquos-Sidewiki.aspx&quot; target=&quot;_blank&quot;&gt;Sidewiki entry on this article&lt;/a&gt;, and discovered that I was recognized as the owner of the site (pretty cool!). It turns out that as the page owner, you can make your own Sidewiki entries, even with &lt;a href=&quot;http://www.google.com/support/toolbar/bin/answer.py?hl=en&amp;amp;answer=163222&quot; target=&quot;_blank&quot;&gt;HTML&lt;/a&gt;. This can be a great help in allowing the page owner to express their comments and have them show prominently in Sidewiki.&lt;/p&gt;    &lt;p&gt;&amp;lt;/EDIT&amp;gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;h2&gt;Cons&lt;/h2&gt;  &lt;p&gt;I see some potential pitfalls.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Some people don’t want to have people doing Sidewiki publications on their page. Is there a way that they can prevent this? &lt;/li&gt;    &lt;li&gt;How is any page author going to monitor this? It somewhat circumvents the idea of Moderated Posts that some sites have, such as blogging and Forum sites. &lt;/li&gt;    &lt;li&gt;It’s hard to get people to agree (and harder to know who’s really right). Again, Sidewiki could get really tough to monitor. And who would be responsible for any &lt;a href=&quot;http://www.answers.com/libel&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;libel&lt;/a&gt; suits? Would Google be culpable, if they don’t respond in a &lt;!--Begin mp_html_link_1_cbb0f9b1--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_1_cbb0f9b1'  } )&quot;&gt;timely manner&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--End mp_html_link_1_cbb0f9b1--&gt; to complaints by the page owners? &lt;/li&gt;    &lt;li&gt;And what about sites like Experts Exchange? How would they feel if some people started posting the answers they’re hiding from unregistered users? I bet they would get up in arms over that pretty quick. &lt;/li&gt;    &lt;li&gt;What would Google’s policy be for “unfair competition”? For example, what if a bunch of people started using Sidewiki on &lt;a href=&quot;http://www.Google.com&quot; target=&quot;_blank&quot;&gt;Google’s search page&lt;/a&gt; to state that they actually prefer &lt;a href=&quot;http://www.Bing.com&quot; target=&quot;_blank&quot;&gt;Bing&lt;/a&gt; or &lt;a href=&quot;http://www.Yahoo.com&quot; target=&quot;_blank&quot;&gt;Yahoo&lt;/a&gt;? &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Basically, the big complaint I see is where the page or website owner takes &lt;!--Begin mp_html_link_2_cbb0f9b1--&gt;&lt;a  href=&quot;#&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { contentId:'mp_html_2_cbb0f9b1'  } )&quot;&gt;umbrage&lt;/a&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;2&lt;/sup&gt;&lt;!--End mp_html_link_2_cbb0f9b1--&gt; over what is perceived as an intrusive association on their site by others. Is it really right to make the whole of the Internet a wiki?&lt;/p&gt;  &lt;!--Begin mp_html_detail_1_cbb0f9b1--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_1_cbb0f9b1&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;1&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_1_cbb0f9b1--&gt; &lt;p&gt;&lt;/p&gt;  &lt;h1&gt;A Timely Response to Complaints&lt;/h1&gt;  &lt;p&gt;How much time is a “timely” response for complaints on the Internet. If it’s a concern of &lt;a href=&quot;http://www.answers.com/libel&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;libel&lt;/a&gt;, then there could be a problem for some folks, because in Internet terms, it doesn’t take much time at all for something to spread.&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_1_cbb0f9b1--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_1_cbb0f9b1--&gt;   &lt;!--Begin mp_html_detail_2_cbb0f9b1--&gt; &lt;div class=&quot;itcexpand-html-content&quot; id=&quot;mp_html_2_cbb0f9b1&quot;&gt; 	&lt;div class=&quot;itcexpand-header&quot;&gt; 		&lt;ul&gt; 			&lt;li class=&quot;itcexpand-move&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return false&quot;&gt;Move&lt;/a&gt; 			&lt;/li&gt; 			&lt;li class=&quot;itcexpand-close&quot;&gt; 				&lt;a href=&quot;#&quot; onclick=&quot;return mp.close(this)&quot;&gt;Close&lt;/a&gt; 			&lt;/li&gt; 		&lt;/ul&gt;	     	&lt;/div&gt; 	&lt;div class=&quot;itcexpand-body&quot;&gt;&lt;sup class=&quot;itcexpand-super&quot;&gt;2&lt;/sup&gt;&lt;!--Begin mp_html_detail_body_2_cbb0f9b1--&gt; &lt;p&gt;&lt;/p&gt;  &lt;h2&gt;Umbrage&lt;/h2&gt;  &lt;p&gt;It’s not too often I get to use that word, so I thought I would. It basically means “offence”, and a person who “takes umbrage” to something is kinda upset or annoyed over it.&lt;/p&gt;  &lt;p&gt;For more, check out the &lt;a href=&quot;http://www.answers.com/topic/umbrage&quot; target=&quot;_blank&quot;&gt;definition on Answers.com&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;/p&gt;&lt;!--End mp_html_detail_body_2_cbb0f9b1--&gt;&lt;/div&gt;     &lt;div class=&quot;itcexpand-footer&quot;&gt;         &lt;div&gt;             &lt;span class=&quot;itcexpand-resize&quot; title=&quot;Resize&quot;&gt;                 &lt;span&gt;&lt;/span&gt;             &lt;/span&gt;         &lt;/div&gt;     &lt;/div&gt; &lt;/div&gt; &lt;!--End mp_html_detail_2_cbb0f9b1--&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","11/7/2009 10:02:19 AM"," "," "," "," "
"GenerateData.com for your Sample Data Needs","","","GenerateData.com for your Sample Data Needs","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2009/WLW-GenerateData.comforyourSampleDataNeeds_14D16-image_2.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'2f0b1a64'})&quot; &gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; margin: 0px 0px 5px 5px; display: inline; border-top: 0px; border-right: 0px&quot; title=&quot;Screen-shot of GenerateData.com in use&quot; border=&quot;0&quot; alt=&quot;Screen-shot of GenerateData.com in use&quot; title=&quot;Screen-shot of GenerateData.com in use&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2009/WLW-GenerateData.comforyourSampleDataNeeds_14D16-image_thumb.png&quot; width=&quot;240&quot; height=&quot;138&quot; /&gt;&lt;/a&gt; For years, now, I have had a “hope-to-get-to” project idea of creating a program that will generate data for use in my databases that I give to my students. I would delve a little while into the idea, only to find time pressures &amp;amp; other work making me push it to the side. I would say to myself, “Eventually….”&lt;/p&gt;  &lt;p&gt;Well, time has come again where I started raising that idea, and I decided (again) to do a quick Google search to see what others might have done. Lo and behold, there is a site out there by &lt;a href=&quot;http://www.blacksheepsoft.com/#index&quot; target=&quot;_blank&quot;&gt;Black Sheep Web Software&lt;/a&gt; called &lt;a href=&quot;http://www.generatedata.com/#generator&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;GenerateData.com&lt;/a&gt;. It’s written in JavaScript, PHP and MySQL, and it looks pretty cool! Even better, it’s under a very nice GNU Open Source license (read it &lt;a href=&quot;http://www.generatedata.com/#gnu_license&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;) allowing for this to be copied/modified/redistributed. Perfect for my needs!&lt;/p&gt;  &lt;p&gt;Now, all I need is the time to dive in and modify it. Eventually….&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","11/13/2009 10:47:16 PM"," "," "," "," "
"Google Chrome &ndash; The Most Secure Browser Yet","","","Google Chrome &ndash; The Most Secure Browser Yet","&lt;p&gt;&lt;a href=&quot;http://www.google.com/googlebooks/chrome/big_00.html&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; display: inline; margin-left: 0px; border-top: 0px; margin-right: 0px; border-right: 0px&quot; title=&quot;Chrome Comic&quot; border=&quot;0&quot; alt=&quot;Chrome Comic&quot; align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2010/WLW-GoogleChromeTheMostSecureBrowserYet_E1B4-image_3.png&quot; width=&quot;260&quot; height=&quot;206&quot; /&gt;&lt;/a&gt; I just had to make this post (after sending it to all my colleagues at work). It seems that in the Pwn2Own hacking contest, Google's Chrome was the only browser that wasn't hacked after the first day of the contest. As far as I know, it still hasn't been hacked. All of the other browsers were taken down in a very short time (minutes, I believe).&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&amp;quot;Safari was the first to fall, followed by Internet Explorer 8 on Windows 7. Firefox on Windows 7 x64 was also taken down, as was the iPhone's mobile Safari. Google Chrome, however, has yet to succumb.&amp;quot; (&lt;a href=&quot;http://www.downloadsquad.com/2010/03/25/pwn2own-2010-google-chrome-is-the-last-man-standing/&quot; target=&quot;_blank&quot;&gt;original article&lt;/a&gt;)&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;So, you might be asking, &amp;quot;Why is Chrome so much more secure than any other browser?&amp;quot; The answer, my friend, is in a comic book. Yep. The comic book about Chrome. You can read it online at &lt;a href=&quot;http://www.google.com/googlebooks/chrome/&quot; target=&quot;_blank&quot;&gt;http://www.google.com/googlebooks/chrome/&lt;/a&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","3/27/2010 3:16:31 PM"," "," "," "," "
"Fix Your FaceBook Privacy Settings","","","Fix Your FaceBook Privacy Settings","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2010/WLW-FixYourFacebookPrivacySettings_9373-image_2.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'9971f10f'})&quot; &gt;&lt;img style=&quot;border-bottom: 0px; border-left: 0px; display: inline; margin-left: 0px; border-top: 0px; margin-right: 0px; border-right: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  align=&quot;right&quot; src=&quot;/Portals/50/articles/News-Articles/2010/WLW-FixYourFacebookPrivacySettings_9373-image_thumb.png&quot; width=&quot;244&quot; height=&quot;138&quot; /&gt;&lt;/a&gt; A free tool from &lt;a href=&quot;http://www.ReclaimPrivacy.org&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;ReclaimPrivacy.org&lt;/a&gt; allows you easily check – and fix! – your privacy settings on &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Why is that important? First, many people find it difficult to find (let alone change) their privacy settings on &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;. Not only are they difficult to find, &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt; sometimes changes what those settings are (and what their &lt;em&gt;default&lt;/em&gt; settings are) and how they work.&lt;/p&gt;  &lt;p&gt;Secondly, &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt; is a website that allows you to integrate third-party applications (like FarmTown) into your account on &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;. These third-party programs often ask for (and can expose) your personal information.&lt;/p&gt;  &lt;p&gt;If you’re interested in keeping your privacy on &lt;a href=&quot;http://www.FaceBook.com&quot; target=&quot;_blank&quot;&gt;FaceBook&lt;/a&gt;, then check it out – &lt;a href=&quot;http://www.ReclaimPrivacy.org&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot;&gt;www.ReclaimPrivacy.org&lt;/a&gt;. You can see a demo of how to use this free tool below.&lt;/p&gt;  &lt;p&gt;   &lt;div style=&quot;padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 15px; display: inline; float: left; padding-top: 4px&quot; id=&quot;scid:5737277B-5D6D-4f48-ABFC-DD9C333F4C5D:e93f81ec-820f-41a3-b8c9-e328eb1c0d88&quot; class=&quot;wlWriterEditableSmartContent&quot;&gt;&lt;div id=&quot;95423005-2bee-40b7-a262-c0ba8451d737&quot; style=&quot;margin: 0px; padding: 0px; display: inline;&quot;&gt;&lt;div&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=_IbnfbOxY18&quot; target=&quot;_new&quot;&gt;&lt;img src=&quot;/Portals/50/articles/News-Articles/2010/WLW-FixYourFacebookPrivacySettings_9373-video732a42d57367.jpg&quot; style=&quot;border-style: none&quot; galleryimg=&quot;no&quot; onload=&quot;var downlevelDiv = document.getElementById('95423005-2bee-40b7-a262-c0ba8451d737'); downlevelDiv.innerHTML = &amp;quot;&amp;lt;div&amp;gt;&amp;lt;object width=\&amp;quot;425\&amp;quot; height=\&amp;quot;355\&amp;quot;&amp;gt;&amp;lt;param name=\&amp;quot;movie\&amp;quot; value=\&amp;quot;http://www.youtube.com/v/_IbnfbOxY18&amp;amp;hl=en\&amp;quot;&amp;gt;&amp;lt;\/param&amp;gt;&amp;lt;embed src=\&amp;quot;http://www.youtube.com/v/_IbnfbOxY18&amp;amp;hl=en\&amp;quot; type=\&amp;quot;application/x-shockwave-flash\&amp;quot; width=\&amp;quot;425\&amp;quot; height=\&amp;quot;355\&amp;quot;&amp;gt;&amp;lt;\/embed&amp;gt;&amp;lt;\/object&amp;gt;&amp;lt;\/div&amp;gt;&amp;quot;;&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/p&gt;  &lt;p&gt;(It’s a rough video demo, whose quality was degraded in the upload to YouTube – I’ll look at fixing it a bit later.)&lt;/p&gt;  &lt;p&gt;I first heard about it at &lt;a href=&quot;http://www.cnn.com/video/data/2.0/video/bestoftv/2010/05/18/mxp.westhoven.reclaim.privacy.cnn.html&quot; target=&quot;_blank&quot;&gt;CNN Online&lt;/a&gt;.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","5/18/2010 9:37:43 AM"," "," "," "," "
"Stuff I Gotta Try","","","Stuff I Gotta Try","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;I bump into a lot of great programming ideas/technologies/tools/techniques/concepts/etc. I often think to myself, “I gotta try that” or “I need to remember where this is.” So I don’t forget these things, I often keep browser windows open. But, I’m running out of memory, so I need to blog it to remember it. So, here’s a list of the keepers for today.&lt;/p&gt;  &lt;h2&gt;AJAX&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/javascript-ajax/24-best-practices-for-ajax-implementations/&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;24 Best Practices of AJAX Implementations&lt;/a&gt; – The name says it all!&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.dotnetfunda.com/articles/article794-4-steps-to-consume-web-services-using-ajax-includes-video-tutorial-.aspx&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;4 Steps to Consume Web Services Using Ajax&lt;/a&gt; - (Includes Video Tutorial) Again, the name says it all. Plus, I can see a numbers theme starting here…&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Windows Home Server&lt;/h2&gt;  &lt;p&gt;Among other things, I’m looking into getting a real Home Server &amp;amp; do a more formal (&amp;amp; organized) backup of stuff I’ve got. Right now, backups are rather disorganized, and with the crash of an external HD at work, I’m feeling a bit skittish on my own system. So, I’ve been glancing at Windows Home Server (WHS) again, and I’ve seen some good deals at Memory Express, like the &lt;a href=&quot;http://www.memoryexpress.com/Products/PID-MX23988(ME).aspx&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: 'iframe',width:1024,height:768 } )&quot; target=&quot;_blank&quot;&gt;Acer H340&lt;/a&gt; (or the other &lt;a href=&quot;http://www.memoryexpress.com/Products/PID-MX27056(ME).aspx&quot; target=&quot;_blank&quot;&gt;Acer H340&lt;/a&gt;).&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/windows/products/winfamily/windowshomeserver/default.mspx&quot; target=&quot;_blank&quot;&gt;WHS Home Page&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/canada/windows/products/winfamily/windowshomeserver/default.mspx?CM=Nav&amp;amp;CE=Nav2b&quot; target=&quot;_blank&quot;&gt;WHS Canada Home Page&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://channel9.msdn.com/posts/LarryLarsen/Windows-Home-Server-Vail/Default.aspx?wa=wsignin1.0#Page=1&quot; target=&quot;_blank&quot;&gt;Vail Beta Announcement&lt;/a&gt; (video)&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://usingwindowshomeserver.com/&quot; target=&quot;_blank&quot;&gt;Using Windows Home Server&lt;/a&gt; (.com)&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://www.homeserversync.co.uk/index.html&quot; target=&quot;_blank&quot;&gt;HomeServerSync&lt;/a&gt; (for your own cloud)&lt;/li&gt;    &lt;li&gt;Add-Ins&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a href=&quot;http://www.theofficemaven.com/products/whs-outlook&quot; target=&quot;_blank&quot;&gt;WHS Outlook&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;Setting Up&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;tba…&lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;That’s all for now.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","5/27/2010 8:49:23 PM"," "," "," "," "
"How to Set Up a Demo Skin","","","How to Set Up a Demo Skin","&lt;script type=&quot;text/javascript&quot; src=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&gt;&lt;/script&gt;&lt;p&gt;When you are designing a site for someone that includes a custom skin, it is helpful for the end-users to see that skin “live”. With DotNetNuke&#174;, you can create a “skin preview” page that is visible to a select group of users and apply your skin just to that page.&lt;/p&gt;  &lt;p&gt;To do this, follow these steps:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Log onto the site as an administrator. &lt;/li&gt;    &lt;li&gt;Create a new page named “Skin Preview” using the DotNetNuke Control Panel at the top of the page. This will create the page and navigate you to that page so that you can edit the content.      &lt;br /&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_2.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'ab65ce1e'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_thumb.png&quot; width=&quot;244&quot; height=&quot;98&quot; /&gt;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Click on the Edit link in the “Actions” section of the DotNetNuke Control Panel. This will open the page settings.      &lt;br /&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_4.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'ab65ce1e'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_thumb_1.png&quot; width=&quot;51&quot; height=&quot;120&quot; /&gt;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Set the Page Permissions to the Security Role or specific Username that should have View permissions for the page.      &lt;br /&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_6.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'ab65ce1e'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_thumb_2.png&quot; width=&quot;244&quot; height=&quot;155&quot; /&gt;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Open the section named “Advanced Settings” by clicking on the Expand/Collapse icon (&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_11.png&quot; width=&quot;13&quot; height=&quot;13&quot; /&gt; / &lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot; src=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_12.png&quot; width=&quot;13&quot; height=&quot;13&quot; /&gt; ). Then, under the “Appearance” settings, select the particular Page Skin and Page Container that you want to be applied to this page.       &lt;br /&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_14.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'ab65ce1e'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_thumb_5.png&quot; width=&quot;244&quot; height=&quot;46&quot; /&gt;&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Scroll to the bottom of the Settings page and click the “Update” link to apply these new settings.      &lt;br /&gt;&lt;a href=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_16.png&quot;  class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:'ab65ce1e'})&quot; &gt;&lt;img style=&quot;border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px&quot;  border=&quot;0&quot; alt=&quot;image&quot;  src=&quot;/Portals/50/articles/News-Articles/2010/WLW-HowtoSetUpaDemoSkin_D3B6-image_thumb_6.png&quot; width=&quot;232&quot; height=&quot;34&quot; /&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Now the page can be viewed with your demo skin. If you wish, you can then fill this page with demo content to go along with the skin, to give your end-users an idea of the complete design. This approach will allow your clients to have a “living” example, one where they can even play with the content to explore the possibilities and limitations of your design.&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/8/2010 5:00:39 PM"," "," "," "," "
"Testing NETBibleTagger Skin Object","","","Testing NETBibleTagger Skin Object","&lt;p&gt;Gen 1:1 – Where it all began.&lt;/p&gt;  &lt;p&gt;This week, I put together a skin object that leverages the &lt;strong&gt;NET Bible Tagger&lt;/strong&gt;. I’m doing a bit of testing before I release it. I intend on releasing it as a free &amp;amp; open source DotNetNuke&lt;sup&gt;&lt;font size=&quot;smaller&quot;&gt;&#174;&lt;/font&gt;&lt;/sup&gt; extension. When it’s ready, I’ll make a formal announcement.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/&quot;&gt;&lt;img style=&quot;margin: 0px 3px 3px 0px; display: inline&quot; alt=&quot;Creative Commons License&quot; align=&quot;left&quot; src=&quot;http://i.creativecommons.org/l/by-nc/3.0/88x31.png&quot; /&gt;&lt;/a&gt;NET Bible Tagger for DotNetNuke&#174; by &lt;a href=&quot;/Dynamic Generation Inc.&quot;&gt;Dan Gilleland&lt;/a&gt; is licensed under a &lt;a href=&quot;http://creativecommons.org/licenses/by-nc/3.0/&quot;&gt;Creative Commons Attribution-NonCommercial 3.0 Unported License&lt;/a&gt;.       &lt;br /&gt;Based on a work at &lt;a href=&quot;http://labs.bible.org/NETBibleTagger&quot;&gt;labs.bible.org&lt;/a&gt;.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;The NET Bible Tagger is a JavaScript library that parses a page to look for any Bible references that already exist on the page (like John 3:16). There is no need for the person who writes the reference to do anything in terms of manually making the link – NET Bible Tagger does it all automatically. Here’s info from the installation package for this skin object.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;NETBibleTagger is a new and innovative way to quote and link to the Bible from your existing scripture references. Using a JavaScript library imported from &lt;a href=&quot;http://labs.bible.org&quot;&gt;http://labs.bible.org&lt;/a&gt; (see &lt;a href=&quot;http://labs.bible.org/api/NETBibleTagger/netbibletagger.js&quot;&gt;here&lt;/a&gt;, plain references to Bible passages turn into hyperlinks which create a small in-line window (tooltip), when the user moves the mouse over them. This tooltip displays the text in the passages that were referenced. See the Release Notes for further details.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;And, from the release notes:&lt;/p&gt;  &lt;blockquote&gt;   &lt;h2&gt;Usage&lt;/h2&gt;    &lt;p&gt;To use this skin object, simply place it anywhere inside the page skin. The skin object has three parameters: VoidOnMouseOut - (boolean, default = False) True to have the pop-up disappear when the user moves the mouse away from the link, False to have the pop-up stay. ParseAnchors - (boolean, default = False) True to have the script work with your existing links, False to have the script ignore your links. FontSize - (enum with limited values, default = 'small') The font size for the Bible text in the pop-up. Acceptable values are small, xx_small, x_small, medium, large, x_large, xx_large. This skin object runs by importing a JavaScript file (see below). &lt;/p&gt;    &lt;h2&gt;Background&lt;/h2&gt;    &lt;p&gt;The NET Bible Tagger uses an external JavaScript from &lt;a href=&quot;http://labs.bible.org&quot;&gt;http://labs.bible.org&lt;/a&gt; (you can access the script &lt;a href=&quot;http://labs.bible.org/api/NETBibleTagger/netbibletagger.js&quot;&gt;here&lt;/a&gt;). Here is the summary from their site: &lt;/p&gt;    &lt;p&gt;“NETBibleTagger is a new and innovative way to quote and link to the Bible from your existing scripture references. Plain references turn into hyperlinks which create a small in-line windows (tooltips), when the user mouses over them. This tooltip displays the text in the passage(s) that were referenced. A &amp;quot;Read more&amp;quot; link is provided allowing one to view in context the reference and to study it further in the free NET&#174; Bible Study Environment! Now, you have access to the same great Bible quoting that Bible.org has been using for years to enhance its readers' experiences. The Translation used is the NET&#174;. NETBibleTagger supports all of the Bible book names and their standard abbreviations. It will recognize and tag books with only one chapter (e.g., Matthew 1 or Matthew 2:9). It also handles multiple verses and chapters in a row with verses separated by commas and chapter:verse groups separated by semi-colons (e.g., Acts 3:16-18; 4:2-4), and recognizes many other common abbreviations and formats (e.g., Lk 2:1; 4:4; Gal 3:3; 3:8-10; Eph 3:1; 4:2). Whether you use a hyphen (-) or an en dash (–), NETBibleTagger will correctly recognize and tag your Bible references (e.g., Rom 5:1-10; Eph 2:8–9). To prevent certain verses from being linked, place the text you want NETBibleTagger to ignore inside of tags.”&lt;/p&gt;&lt;/blockquote&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","7/9/2010 1:04:56 PM"," "," "," "," "
"DNN Tree Menu Research","","","DNN Tree Menu Research","&lt;p&gt;&amp;gt; Skinning Toolkit&lt;br /&gt; --&amp;gt; http://www.skinningtoolkit.com/DOTNETNUKECLASSES/TreeMenu/TreeViewMenu/tabid/114/Default.aspx&lt;/p&gt; &lt;p&gt;&amp;gt; Misc.&lt;br /&gt; --&amp;gt; http://www.dotnetnuke.com/Community/Blogs/tabid/825/EntryId/2270/DotNetNuke-reg-Case-Study-DNNTreeView-for-Large-DNN-Applications.aspx&lt;br /&gt; --&amp;gt; http://www.dotnetnuke.com/LinkClick.aspx?fileticket=ILtlAa1Vf5E%3d&amp;amp;tabid=874&amp;amp;mid=2653&amp;amp;forcedownload=true&lt;br /&gt; --&amp;gt; http://blog.theaccidentalgeek.com/post/2010/03/01/DotNetNuke-530-Alpha-Release.aspx&lt;br /&gt; --&amp;gt; http://www.iowacomputergurus.com/products/icg-dnn-sitemap.aspx&lt;/p&gt; &lt;p&gt;--&amp;gt; http://www.bitethebullet.co.uk/Google_SiteMap_DNN_Module.aspx&lt;br /&gt; --&amp;gt; http://www.dnnspot.com/Modules/DotNetNuke-Sitemap&lt;br /&gt; --&amp;gt; http://seablick.com/blog/156/the-dnn-xml-sitemap-dilemma.aspx&lt;br /&gt; --&amp;gt; http://www.local.dotnetnuke.com/Community/Forums/tabid/795/forumid/199/postid/364055/scope/posts/Default.aspx&lt;br /&gt; --&amp;gt;http://inspectorit.com/category/dotnetnuke-modules/&lt;br /&gt; --&amp;gt; http://www.ifinity.com.au/Products/Google_Sitemap_For_DNN&lt;br /&gt; --&amp;gt; http://www.dnncreative.com/Resources/tabid/74/articleType/ArticleView/articleId/174/DotNetNuke4xHowtocreateaSiteMapModule.aspx&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;gt; Other Reads:&lt;br /&gt; --&amp;gt; http://www.codeproject.com/KB/custom-controls/DnnSiteMap.aspx&lt;br /&gt; --&amp;gt; http://blog.theaccidentalgeek.com/post/2010/06/20/Converting-Self-Referencing-Collection-into-Hierarchical-Collection.aspx&lt;br /&gt; --&amp;gt;http://www.zurb.com/blog/page/4&lt;br /&gt; --&amp;gt; http://www.thehouseofomni.com/blog/viewall/&lt;br /&gt; --&amp;gt; http://www.justinkistner.com/archive/in-search-of-a-better-way-to-design/&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;gt; Manual Creation&lt;br /&gt; --&amp;gt; Tool:&amp;#160;http://astuteo.com/slickmap/&lt;br /&gt; --&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;gt; Design Ideas&lt;br /&gt; --&amp;gt; http://xhtmlelite.com/sitemap.php&lt;br /&gt; --&amp;gt; http://www.svend.com/svend-sitemap.html&lt;br /&gt; --&amp;gt;http://www.avidwebdesign.com.au/avid_sitemap.html&lt;br /&gt; --&amp;gt; http://www.thehouseofomni.com/site_media/user/images/blogs/TCEF_sitemap.jpg&lt;br /&gt; --&amp;gt; http://www.zurb.com/blog_uploads/0000/0761/web-sitemap2.jpg&lt;br /&gt; --&amp;gt; http://www.designeye.org/ideaguy/files/knemeyer-map.jpg&lt;br /&gt; &amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt;","0","7/30/2010 2:44:10 PM"," "," "," "," "
"Virtualization Planning (for end-users)","","","Virtualization Planning (for end-users)","&lt;p&gt;Plan:&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;Dynamic &amp;amp;&amp;#160;Differencing Disks     &lt;ul&gt;         &lt;li&gt;wim2vhd.wsf - make a 120 GB (122880 MB) Dynamic Disk from installation         &lt;ul&gt;             &lt;li&gt;Set for booting (see &lt;a href=&quot;http://www.hanselman.com/blog/LessVirtualMoreMachineWindows7AndTheMagicOfBootToVHD.aspx&quot;&gt;here&lt;/a&gt;)&lt;/li&gt;             &lt;li&gt;Finish installation/configuration (base programs)&lt;/li&gt;             &lt;li&gt;Set drive letters as desired&lt;/li&gt;             &lt;li&gt;Move Paging file to a separate spindle&lt;/li&gt;             &lt;li&gt;disk defragment&lt;/li&gt;             &lt;li&gt;compact&lt;/li&gt;             &lt;li&gt;(see &lt;a href=&quot;http://blogs.msdn.com/b/heaths/archive/2009/10/13/booting-windows-to-a-differencing-virtual-hard-disk.aspx&quot;&gt;here&lt;/a&gt;)&lt;/li&gt;             &lt;li&gt;make read-only&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt; &lt;/ul&gt;","0","8/23/2010 8:03:05 AM"," "," "," "," "
"Simple Assembly Signing  and InternalsVisibleTo","","","Simple Assembly Signing  and InternalsVisibleTo","&lt;p&gt;Recently, I ran into the situation where I needed to have an assembly signed with a strong name key file. The assembly was a wizard that I needed in a Visual Studio template (to gather additional information for running the template). That task was pretty easy: just open the project&amp;rsquo;s properties, click on the Signing tab, and make a new strong name key file. Give the file a name and a password, and it&amp;rsquo;s done. The results are a clean .pfx (Personal Information Exchange) file that is password secured.&lt;/p&gt; &lt;p&gt;But, sensing the need for some unit tests to manage the wizards changes in the future (and I was pretty sure it would morph over time), I didn&amp;rsquo;t want to make my internal class public just to satisfy unit tests, especially since some of those internal classes played with file I/O. I wanted a fairly secure assembly with a minimal exposure to public access (since the wizard would wind up in other people&amp;rsquo;s GAC).&lt;/p&gt; &lt;p&gt;The answer, of course, was to apply the [InternalsVisibleTo()] attribute on my wizard. Since my wizard was signed, my unit test project needed to be signed as well.&lt;/p&gt; &lt;p&gt;When I looked into the MSDN documents to see how to do this, I was presented with the Strong Name command line tool (&lt;strong&gt;sn&lt;/strong&gt;). [&lt;em&gt;Note: Funny and somewhat serendipitous, how putting &lt;/em&gt;&lt;strong&gt;sn&lt;/strong&gt;&lt;em&gt; in parenthesis just now in WLW, I get a nice snail icon: &lt;img style=&quot;border-style: none;&quot; class=&quot;wlEmoticon wlEmoticon-snail&quot; alt=&quot;Snail&quot; src=&quot;/Portals/50/articles/News-Articles/2010/WLW-fab59f3d0610_14F4C-wlEmoticon-snail_2.png&quot; /&gt;&lt;/em&gt;] As I looked through the how/wherefore of using this tool, I didn&amp;rsquo;t see any mention of the .pfx file that gets generated when signing via the property page of the project in the IDE. A little more Googling, and I stumbled upon a comment in social.msdn about using the &lt;strong&gt;&amp;ndash;p&lt;/strong&gt; switch on &lt;strong&gt;sn&lt;/strong&gt; to convert the .pfx to a .publickey. Then, I was able to use the sn tool to display the public key, and I&amp;rsquo;m ready to roll.&lt;/p&gt; &lt;p&gt;So, for the sake of those who need detailed steps (and for myself, when memory fails me in the coming months), here&amp;rsquo;s the steps for a simple demo pair of projects:&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;TBA&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Bibliography:&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;(MDSN) &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb385180.aspx&quot; target=&quot;_blank&quot;&gt;How to: Create Signed Friend Assemblies&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/k5b5tt23.aspx&quot; target=&quot;_blank&quot;&gt;Sn.exe (Strong Name Tool)&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://geekswithblogs.net/dotnetrodent/archive/2006/10/05/93247.aspx&quot; target=&quot;_blank&quot;&gt;Assembly Signing Gotchas&lt;/a&gt; &amp;ndash; Of note are the steps for using &lt;strong&gt;ILMerge&lt;/strong&gt; to get around signing the unit test dependent assemblies (like NMock2 and perhaps others)&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://www.davidarno.org/2008/01/15/c-and-friend-assemblies-made-easy/&quot; target=&quot;_blank&quot;&gt;C# and Friend Assemblies Made Easy&lt;/a&gt; by David Arno (with related post &amp;ldquo;&lt;a href=&quot;http://www.davidarno.org/c-howtos/friend-assemblies-accessing-internal-classes-externally/&quot; target=&quot;_blank&quot;&gt;Friend Assemblies: accessing internal classes externally&lt;/a&gt;&amp;rdquo;)&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/magazine/cc163583.aspx&quot; target=&quot;_blank&quot;&gt;Using Strong Name Signatures&lt;/a&gt; (2006, but has a nice item on &amp;ldquo;Test Key Signing&amp;rdquo;)&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/KB/security/StrongNameExplained.aspx&quot; target=&quot;_blank&quot;&gt;Strong Names Explained&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://social.msdn.microsoft.com/forums/en-US/netfxbcl/thread/e9ef6858-e82c-4326-a962-53efbc010a01&quot; target=&quot;_blank&quot;&gt;Uses of .pfx and .snk files&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://social.msdn.microsoft.com/forums/en-US/clr/thread/3c53c779-5f93-4c79-8f03-f39567d4f798&quot; target=&quot;_blank&quot;&gt;Extracting keyset from a password-protected pfx file&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a href=&quot;http://consultingblogs.emc.com/stuartpreston/archive/2007/02/19/Automating-signtool.exe-_2800_or-how-to-make-a-PFX-file-from-a-PVK-and-SPC-file_21002900_.aspx&quot; target=&quot;_blank&quot;&gt;Automating signtool.exe&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear: both; height: 11px;&quot;&gt;&lt;/div&gt;","0","10/5/2010 1:06:14 AM"," "," "," "," "
"Getting Into Agile & Scrum","","","Getting Into Agile & Scrum","&lt;p&gt;Here's a few good videos on Agile &amp;amp; SCRUM.&lt;/p&gt; &lt;p&gt;Scrum Master in Under 10 Minutes (8 min)&lt;br /&gt; &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/Q5k7a9YEoUI&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt; &lt;/p&gt; &lt;p&gt;Why is Scrum so Hard? (41 min)&lt;br /&gt; &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/q3t8twm3aUk&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt; &lt;/p&gt;","0","11/21/2011 12:28:33 PM"," "," "," "," "
"HTML5 Layout &amp; CSS&ndash;Research","","","HTML5 Layout &amp; CSS&ndash;Research","&lt;p&gt;Here’s some of my research in exploring HTML5 &amp;amp; CSS.&lt;/p&gt;  &lt;p&gt;Basically, there are three proposed layout approaches before the W3C:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;CSS3 Layout Module Browser&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;Grid Positioning&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;Flexible Box Layout Module&lt;/div&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p align=&quot;left&quot;&gt;There’s a good video on &lt;a href=&quot;http://www.webmonkey.com/2011/03/the-future-of-css-finally-sane-layout-tools/&quot;&gt;How We’ll Lay Out Websites in 2016&lt;/a&gt; that contrasts these approaches. At the end, though, it might still be good to &lt;a href=&quot;http://giveupandusetables.com/&quot;&gt;Give Up and Use Tables&lt;/a&gt;.&lt;/p&gt;  &lt;h3 align=&quot;left&quot;&gt;TO READ&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://matthewjamestaylor.com/blog/ultimate-multi-column-liquid-layouts-em-and-pixel-widths&quot;&gt;http://matthewjamestaylor.com/blog/ultimate-multi-column-liquid-layouts-em-and-pixel-widths&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.positioniseverything.net/articles/onetruelayout/&quot;&gt;http://www.positioniseverything.net/articles/onetruelayout/&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://css-tricks.com/examples/FluidEqualHeightFauxColumns/&quot;&gt;http://css-tricks.com/examples/FluidEqualHeightFauxColumns/&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://css-tricks.com/7692-fluid-width-equal-height-columns/&quot;&gt;http://css-tricks.com/7692-fluid-width-equal-height-columns/&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&amp;#160;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.eggheadcafe.com/tutorials/asp-net/2d3cb263-b289-418a-bb4b-4a34c406e077/aspnet-asynchronous-image-processing.aspx&quot;&gt;http://www.eggheadcafe.com/tutorials/asp-net/2d3cb263-b289-418a-bb4b-4a34c406e077/aspnet-asynchronous-image-processing.aspx&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://codeasp.net/blogs/raghav_khunger/microsoft-net/1760/asp-net-disable-autocomplete-for-a-textbox&quot;&gt;http://codeasp.net/blogs/raghav_khunger/microsoft-net/1760/asp-net-disable-autocomplete-for-a-textbox&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.iis.net/ConfigReference/system.webServer/asp/limits&quot;&gt;http://www.iis.net/ConfigReference/system.webServer/asp/limits&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&amp;#160;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&amp;#160;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://code.google.com/webtoolkit/doc/latest/DevGuideUiPanels.html#Design&quot;&gt;http://code.google.com/webtoolkit/doc/latest/DevGuideUiPanels.html#Design&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p align=&quot;left&quot;&gt;&amp;#160;&lt;/p&gt;  &lt;h2 align=&quot;left&quot;&gt;Display: Table and other CSS&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://ajaxian.com/archives/display-table&quot;&gt;http://ajaxian.com/archives/display-table&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;div align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.thecssninja.com/xhtml/why-display-table-shouldnt-be-frowned-upon&quot;&gt;http://www.thecssninja.com/xhtml/why-display-table-shouldnt-be-frowned-upon&lt;/a&gt;&lt;/div&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h2 align=&quot;left&quot;&gt;CSS3 (Template) Layout Module&lt;/h2&gt;  &lt;p align=&quot;left&quot;&gt;&lt;strong&gt;Pros:&lt;/strong&gt; Very Simple to use, no re-positioning of HTML for gettnig a . &lt;strong&gt;Cons:&lt;/strong&gt; Not implemented in browsers, but can be implemented through jQuery&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.nealgrosskopf.com/tech/thread.php?pid=46&quot;&gt;CSS Template Layouts: A Simpler CSS Layout System, Now Possible With JQuery&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://a.deveria.com/csstpl/&quot;&gt;CSS Template Layout Demos&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://code.google.com/p/css-template-layout/&quot;&gt;(code.google.com) JavaScript (jQuery) implementation of the CSS Template Layout Module&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.w3.org/TR/css3-layout/&quot;&gt;WC3 Working Draft&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&amp;#160;&lt;/p&gt;  &lt;h2 align=&quot;left&quot;&gt;Flexible Box Layout Module&lt;/h2&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/flexbox/quick/&quot;&gt;Quick Hits with the Flexible Box Model&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://peter.sh/examples/?/css/flexbox.html&quot;&gt;CSS3 Flexible Box Layout Module&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://infrequently.org/2009/08/css-3-progress/&quot;&gt;http://infrequently.org/2009/08/css-3-progress/&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://evolpin.wordpress.com/tag/flexbox/&quot;&gt;FlexBox in IE10&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/ie/gg192966&quot;&gt;IE10 Guide for Developers&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.xanthir.com/blog/b4580&quot;&gt;Why Flexboxes aren’t Good for Page Layout&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://oli.jp/2011/css3-flexbox/&quot;&gt;CSS3 Flexbox vs A Princess Bride&lt;/a&gt;&lt;/p&gt;  &lt;h2 align=&quot;left&quot;&gt;Other Notes/Ideas&lt;/h2&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.nealgrosskopf.com/tech/thread.php?pid=79&quot;&gt;Image Swipe/Shimmer Effect&lt;/a&gt;&lt;/p&gt;  &lt;p align=&quot;left&quot;&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/3d/css/&quot;&gt;3D and CSS&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;d_itc_f&quot; style=&quot;clear:both;height:11px;&quot;&gt;&lt;script src=&quot;/DesktopModules/itcMetaPost/js/m.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;","0","11/25/2011 1:03:23 PM"," "," "," "," "
"Greedy Constructors","","","Greedy Constructors","I get asked by my students, &quot;What's a &lt;strong&gt;Greedy Constructor&lt;/strong&gt;?&quot;. They see mentions of it on the web (like on StackOverflow.com), but it's not &quot;defined&quot; anywhere.&lt;br /&gt; &lt;br /&gt; Basically, the idea of a &quot;Greedy Constructor&quot; is that it's a constructor that has a parameter for each and every property/field in the class/object. For example, if you have a class called Person that has two properties (one for the name and the other for the age), then a Greedy Constructor will have two parameters - one for the name and another for the age.&lt;br /&gt; &lt;br /&gt; public class Person&lt;br /&gt; {&lt;br /&gt; &amp;nbsp; &amp;nbsp; public string Name { get; set; }&lt;br /&gt; &amp;nbsp; &amp;nbsp; public int Age { get; set; }&lt;br /&gt; &lt;br /&gt; &amp;nbsp; &amp;nbsp; public Person(string name, int age)&lt;br /&gt; &amp;nbsp; &amp;nbsp; {&lt;br /&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Name = name;&lt;br /&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Age = age;&lt;br /&gt; &amp;nbsp; &amp;nbsp; }&lt;br /&gt; }&lt;br /&gt; &lt;br /&gt; So, now that I've blogged briefly about &quot;Greedy Constructors&quot;, hopefully it will appear in Google (the ultimate help file).","0","3/19/2012 10:22:10 AM","478"," "," ","I get asked by my students, &quot;What's a&amp;nbsp;&lt;strong&gt;Greedy Constructor&lt;/strong&gt;?&quot;. They see mentions of it on the web (like on StackOverflow.com), but it's not &quot;defined&quot; anywhere. Read more about it here."
"Inception Phase for Web Development","","","Inception Phase for Web Development","So, I'm approached by an organization that wants to hire me to help build them a &quot;portal&quot; (which is just a fancy way of saying they want a website). The trouble is, from all they've told me so far, they have a pretty fuzzy picture of what they want, but they are eager to get an estimate of how much time it will take and how much it will cost. After all, they are hiring me because I'm the expert, and they've never ever owned (let alone &quot;built&quot;) a website before.&lt;br /&gt; Whoa there, Nelly, hold your horses!&lt;br /&gt; If I were to follow the thoughts of Dan North and begin with the idea that we've got to face the fact that our ignorance is going to be the greatest barrier, then I am&amp;nbsp;definitely&amp;nbsp;going to need some sit-down time before I come anywhere near giving them an estimate on time and cost. Furthermore, I have to be careful not to fall into &lt;a href=&quot;http://kb.gilleland.info/LinkClick.aspx?link=http%3a%2f%2fdannorth.net%2f2009%2f07%2f01%2fthe-perils-of-estimation%2f&amp;amp;tabid=808&amp;amp;mid=1674&quot; target=&quot;_blank&quot;&gt;the trap of giving them precision instead of accuracy&lt;/a&gt;. And remember, they don't know &lt;em&gt;anything&lt;/em&gt;&amp;nbsp;about websites or portals (other than that they need one).&lt;br /&gt; We need to sit down and spend some time on &lt;em style=&quot;font-weight: bold;&quot;&gt;deliberate discovery&lt;/em&gt;. So, I need a block of time (not just a half-hour meeting) to go over some basic questions. You see, I need to get an idea from them of what they think &quot;done&quot; will look like. &lt;em&gt;[Note to self: &lt;a href=&quot;http://kb.gilleland.info/LinkClick.aspx?link=http%3a%2f%2fwww.dtsato.com%2fblog%2f2009%2f07%2f03%2fvelocity-gone-wrong-done-is-not-done%2f&amp;amp;tabid=808&amp;amp;mid=1674&quot; target=&quot;_blank&quot;&gt;Don't confuse Velocity with &quot;Done&quot;&lt;/a&gt;]&lt;/em&gt;&lt;br /&gt; To start off, pretend that this &quot;portal&quot; that they want is actually a brick-and-mortar building. Here's my questions (in no particular order):&lt;br /&gt; - What kind of building is it (a house, a shed, a skyscraper)?&lt;br /&gt; - Where do you want to put it? &lt;em&gt;[domain name, hosting]&lt;/em&gt;&lt;br /&gt; -&amp;nbsp;","0","4/19/2012 8:13:36 PM"," "," "," "," "
"How do you know that Christianity is the one true religion?","","","How do you know that Christianity the the one true religion?","&lt;p&gt;A question is asked, &quot;How do you know that Christianity is the one true religion?&quot; Here is a good quote:&lt;/p&gt; &lt;br /&gt; &lt;blockquote style=&quot;margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&quot;&lt;strong&gt;Origin&lt;/strong&gt;, &lt;strong&gt;meaning&lt;/strong&gt;, &lt;strong&gt;morality &lt;/strong&gt;and &lt;strong&gt;destiny&lt;/strong&gt;. The Judeo-Christian worldview is not the only one that claims exclusivity, but its the only one that takes those four questions with corresponding answers that are truthful and coherent answers that stand the test of time, and the ultimate answer of the resurrection from the dead that gives you hope and meaning.&quot; (&lt;a href=&quot;http://kb.gilleland.info/LinkClick.aspx?link=http%3a%2f%2fwww.youtube.com%2fwatch%3fv%3dnWY-6xBA0Pk%26feature%3dplayer_detailpage%23t%3d397s&amp;amp;tabid=808&amp;amp;mid=1674&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;source link&lt;/em&gt;&lt;/a&gt;)&lt;br /&gt; - Ravi Zacharias&lt;br /&gt; &lt;/blockquote&gt;&lt;br /&gt; Ravi Zacharias does a good job addressing this, as seen in&lt;a href=&quot;http://youtu.be/nWY-6xBA0Pk&quot; target=&quot;_blank&quot;&gt; this YouTube video&lt;/a&gt;. &lt;p&gt;All worldviews can be grouped under only three categories&lt;/p&gt; &lt;p&gt;- Only the universe exists&lt;br /&gt; &amp;nbsp; &amp;nbsp; naturalism, athiesm&lt;br /&gt; - Only God exists&lt;br /&gt; &amp;nbsp; &amp;nbsp; Buddhism&lt;br /&gt; - Both God and the universe exists&lt;br /&gt; &amp;nbsp; &amp;nbsp; Judaism, Christianity, Islam&lt;/p&gt; &lt;p&gt;&lt;br /&gt; &lt;/p&gt;","0","7/8/2012 1:17:49 PM"," "," "," "," "
"Meet the ASP.Net Web Server Controls","","","Meet the ASP.Net Web Server Controls","&lt;p&gt;Visual Studio allows website developers to quickly create highly functional websites with relatively little effort through the use of ASP.Net Server Controls. There are quite a few controls available out-of-the-box with Visual Studio, as well as scores of 3rd-party controls. In this exercise, you will get a chance to meet and try out some of the more commonly used controls.&lt;/p&gt; &lt;div style=&quot;border-bottom-color: orange; border-bottom-width: 1px; border-bottom-style: solid; border-left-color: orange; border-left-width: 1px; border-left-style: solid; padding-bottom: 5px; background-color: #ccffbb; margin-top: 8px; padding-left: 5px; width: 325px; margin-bottom: 8px; float: right; margin-left: 8px; padding-top: 5px;&quot;&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Quick Steps&lt;/em&gt;&lt;/strong&gt;       &lt;/p&gt; &lt;ol&gt;     &lt;li&gt;Create an ASP.Net Web Site.&lt;/li&gt;     &lt;li&gt;Edit Default.aspx. Add a heading to the page &quot;Meet the ASP.Net Server Controls&quot;.&lt;/li&gt;     &lt;li&gt;Insert a table for displaying the controls; give it three columns and fourteen rows and a width of 100 px. Give the following column headings in the first row of the table: Control Name, Sample Control, and Comments.&lt;/li&gt;     &lt;li&gt;Add the following controls from the ToolBox: Label, TextBox, Button, LinkButton, HyperLink, RadioButton, CheckBox, Image, Menu, Calendar, DropDownList, Gridview, and ObjectDataSource.&lt;/li&gt;     &lt;li&gt;View the page in your browser. Note which controls are displayed in the browser and which are not.&lt;/li&gt;     &lt;li&gt;Edit some of the properties of the controls on Default.aspx.&lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;ol&gt;     &lt;li&gt;Create an ASP.Net Web Site.      &lt;br /&gt;     &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_10.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;Create ASP.Net Website&quot; alt=&quot;Create ASP.Net Website&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb_4.png&quot; width=&quot;244&quot; height=&quot;121&quot; /&gt;&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;Edit Default.aspx. Add a heading to the page &quot;Meet the ASP.Net Server Controls&quot;.      &lt;br /&gt;     &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_16.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;Page Heading (h1)&quot; alt=&quot;Page Heading (h1)&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb_7.png&quot; width=&quot;240&quot; height=&quot;84&quot; /&gt;&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;Insert a table for displaying the controls; give it three columns and fourteen rows and a width of 100 px. Give the following column headings in the first row of the table: Control Name, Sample Control, and Comments.      &lt;br /&gt;     &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_12.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;Insert Table&quot; alt=&quot;Insert Table&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb_5.png&quot; width=&quot;166&quot; height=&quot;120&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_14.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;3 Columns X 14 Rows&quot; alt=&quot;3 Columns X 14 Rows&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb_6.png&quot; width=&quot;110&quot; height=&quot;124&quot; /&gt;&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;Add the following controls from the ToolBox to the table, one row for each control. For now, leave their properties at their default values.     &lt;ol&gt;         &lt;li&gt;&lt;strong&gt;Label&lt;/strong&gt; &amp;ndash; (Standard Controls) The Label Web server control lets you programmatically set text in an ASP.NET Web page. You typically use the Label control when you want to change text in the page at run time, such as in response to a button click. (see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bfhhhk72.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/bfhhhk72.aspx&lt;/a&gt;)&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;TextBox&lt;/strong&gt; - (Standard Controls) The TextBox Web server control provides a way for users to type information into an ASP.NET Web page, including text, numbers, and dates. The TextBox server control is an input control that lets the user enter text. By default, the TextMode property of the control is set to TextBoxMode.SingleLine, which displays a single-line text box. However, you can set the TextMode property to TextBoxMode.MultiLine to display a multi-line text box (which renders as a textarea element). You can also change the TextMode property to TextBoxMode.Password to display a text box that masks user input. The text displayed in the TextBox control is available by using the Text property. (see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ke98t8z7.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/ke98t8z7.aspx&lt;/a&gt;)&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;Button&lt;/strong&gt; - (Standard Controls) Presents a standard command button, which is rendered as an HTML input element. Use the ASP.NET button Web server control to enable users to post a page to the server and to trigger an event on a page.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;LinkButton&lt;/strong&gt; - (Standard Controls) Renders as a hyperlink in the page. However, it contains client-side script that causes the form to be posted back to the server. (You can create a true hyperlink by using the HyperLink Web server control.) Use the ASP.NET LinkButton Web server control to enable users to post a page to the server and to trigger an event on a page.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;HyperLink&lt;/strong&gt; - (Standard Controls) The HyperLink Web server control creates links on a Web page that enables users to move from page to page in an application. The primary advantage of using a HyperLink control is that you can set link properties in server code. For example, you can dynamically change the link text or target page based on conditions in the page. Unlike most Web server controls, the HyperLink control does not raise an event in server code when users click it. Instead, the control simply performs navigation.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;RadioButton&lt;/strong&gt; - (Standard Controls) The RadioButton control and the RadioButtonList control enable users to select from a small set of mutually exclusive, predefined choices.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;CheckBox&lt;/strong&gt; - (Standard Controls) The CheckBox control and the CheckBoxList control provide a way for users to specify yes/no (true/false) choices.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/ASP.Net%20Warrior_2.jpg&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; margin: 0px 0px 5px; display: inline; border-style: solid; float: right;&quot; title=&quot;ASP.Net Warrior&quot; alt=&quot;ASP.Net Warrior&quot; align=&quot;right&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/ASP.Net%20Warrior_thumb.jpg&quot; width=&quot;445&quot; height=&quot;531&quot; /&gt;&lt;/a&gt;Image&lt;/strong&gt; - (Standard Controls) The Image Web server control enables you to display images on an ASP.NET Web page and manage these images in your own code. You can specify the graphics file for an Image control at design time or at run time programmatically. You can also bind the control&#39;s ImageUrl property to a data source to display graphics based on database information. Unlike most other Web server controls, the Image control does not support any events. For example, the Image control does not respond to mouse clicks. Instead, you can create an interactive image by using the ImageMap or the ImageButton Web server controls.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;Menu&lt;/strong&gt; - (Navigation Controls) The ASP.NET Menu control allows you to develop both statically and dynamically displayed menus for your ASP.NET Web pages. You can configure the contents of the Menu control directly in the control, or you can specify the contents by binding the control to a data source.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;Calendar&lt;/strong&gt; - (Standard Controls) The Calendar Web server control can be used to display selectable dates in a calendar and to display data associated with specific dates.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;DropDownList&lt;/strong&gt; - (Standard Controls) The DropDownList Web server control enables users to select a single item from a predefined drop-down list.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;GridView&lt;/strong&gt; - (Data Controls) With the GridView control, you can display, edit, and delete data from many different kinds of data sources, including databases, XML files, and business objects that expose data.&lt;/li&gt;         &lt;li&gt;&lt;strong&gt;ObjectDataSource&lt;/strong&gt; - (Data Controls) The ASP.NET ObjectDataSource control represents a middle-tier object with data retrieval and update capabilities. The ObjectDataSource control acts as a data interface for data-bound controls such as the GridView, FormView, or DetailsView controls. You can use these controls to display and edit data from a middle-tier business object on an ASP.NET Web page.&lt;/li&gt;     &lt;/ol&gt;     &lt;/li&gt;     &lt;li&gt;View the page in your browser. Note which controls are displayed in the browser and which are not.&lt;/li&gt;     &lt;li&gt;Edit some of the properties of the controls on Default.aspx.     &lt;ol&gt;         &lt;li&gt;&lt;strong&gt;Label&lt;/strong&gt;         &lt;ul&gt;             &lt;li&gt;Text: &amp;ldquo;&lt;em&gt;Database Update Successful&lt;/em&gt;&amp;rdquo;&lt;/li&gt;             &lt;li&gt;ForeColor: &lt;em&gt;Green&lt;/em&gt;&lt;/li&gt;             &lt;li&gt;Font-Bold: &lt;em&gt;True&lt;/em&gt;&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;TextBox&lt;/strong&gt;         &lt;ul&gt;             &lt;li&gt;TextMode: &lt;em&gt;Multiline&lt;/em&gt;&lt;/li&gt;             &lt;li&gt;Rows: &lt;em&gt;5&lt;/em&gt;&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;Button&lt;/strong&gt; -         &lt;ul&gt;             &lt;li&gt;Text: &amp;ldquo;Save Changes&amp;rdquo;&lt;/li&gt;             &lt;li&gt;Enabled: False&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;LinkButton&lt;/strong&gt; -         &lt;ul&gt;             &lt;li&gt;Text: &amp;ldquo;Change Password&amp;rdquo;&lt;/li&gt;             &lt;li&gt;ToolTip: &amp;ldquo;Click here to change your password.&amp;rdquo;&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;HyperLink&lt;/strong&gt; -         &lt;ul&gt;             &lt;li&gt;Text: &amp;ldquo;Google&amp;rdquo;&lt;/li&gt;             &lt;li&gt;NavigateUrl: &lt;a href=&quot;http://www.Google.ca&quot;&gt;http://www.Google.ca&lt;/a&gt;&lt;/li&gt;             &lt;li&gt;Target: _blank&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;RadioButton&lt;/strong&gt; -         &lt;ul&gt;             &lt;li&gt;Checked: True&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;CheckBox&lt;/strong&gt; -         &lt;ul&gt;             &lt;li&gt;Checked: True&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;Image&lt;/strong&gt; -         &lt;ul&gt;             &lt;li&gt;AlternateText: NAIT &amp;ndash; An Institute of Technology Committed to Student Success&lt;/li&gt;             &lt;li&gt;ImageUrl: &lt;a href=&quot;http://www.nait.ca/images/interface/h_nait_logo.gif&quot;&gt;http://www.nait.ca/images/interface/h_nait_logo.gif&lt;/a&gt;&lt;/li&gt;             &lt;li&gt;ImageAlign: Left&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;Menu&lt;/strong&gt; -           &lt;br /&gt;         &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_8.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;ASP:Menu - Smart Tag&quot; alt=&quot;ASP:Menu - Smart Tag&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb_3.png&quot; width=&quot;244&quot; height=&quot;150&quot; /&gt;&lt;/a&gt;         &lt;ul&gt;             &lt;li&gt;Click the Smart Tag and add two items:             &lt;ul&gt;                 &lt;li&gt;Text: &amp;ldquo;Home Again&amp;rdquo;&lt;/li&gt;                 &lt;li&gt;Text: &amp;ldquo;About Me&amp;rdquo;&lt;/li&gt;             &lt;/ul&gt;             &lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;Calendar&lt;/strong&gt; -           &lt;br /&gt;         &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_6.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;ASP:Calendar - Smart Tag&quot; alt=&quot;ASP:Calendar - Smart Tag&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb_2.png&quot; width=&quot;244&quot; height=&quot;113&quot; /&gt;&lt;/a&gt;         &lt;ul&gt;             &lt;li&gt;Click the Smart Tag, then click &amp;ldquo;Auto Format&amp;hellip;&amp;rdquo;&lt;/li&gt;             &lt;li&gt;Select the &amp;ldquo;Colorful 1&amp;rdquo; format&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;DropDownList&lt;/strong&gt; -           &lt;br /&gt;         &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_4.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;ASP:DropDownList - Smart Tag&quot; alt=&quot;ASP:DropDownList - Smart Tag&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb_1.png&quot; width=&quot;244&quot; height=&quot;84&quot; /&gt;&lt;/a&gt;         &lt;ul&gt;             &lt;li&gt;Click the Smart Tag, then &amp;ldquo;Edit Items&amp;hellip;&amp;rdquo;&lt;/li&gt;             &lt;li&gt;Add three items with any Text you choose&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;         &lt;li&gt;&lt;strong&gt;GridView&lt;/strong&gt; -           &lt;br /&gt;         &lt;a href=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_2.png&quot; class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;1ed076cb&#39;})&quot;&gt;&lt;img style=&quot;border-width: 0px; display: inline; border-style: solid;&quot; title=&quot;ASP:GridView - Smart Tag&quot; alt=&quot;ASP:GridView - Smart Tag&quot; src=&quot;/Portals/50/images/%5BProvider%5D/%5BFolderFilePath%5D/WLW/MeettheASP.NetWebServerControls_12185/image_thumb.png&quot; width=&quot;244&quot; height=&quot;65&quot; /&gt;&lt;/a&gt;         &lt;ul&gt;             &lt;li&gt;Click the Smart Tag, then click &amp;ldquo;Edit Templates&amp;rdquo;&lt;/li&gt;             &lt;li&gt;Display the EmptyData Template and enter &amp;ldquo;No data has been loaded&amp;rdquo;&lt;/li&gt;         &lt;/ul&gt;         &lt;/li&gt;     &lt;/ol&gt;     &lt;/li&gt;     &lt;li&gt;View the page once more in your browser. Take a look at the HTML that was sent from the website by selecting &amp;ldquo;View Source&amp;rdquo; from your browser.&lt;/li&gt; &lt;/ol&gt; &lt;div class=&quot;d_itc_f&quot; style=&quot;clear: both; height: 11px;&quot;&gt;&lt;/div&gt;","0","9/24/2012 8:40:46 AM","930"," "," ","&lt;p&gt;&lt;em&gt;[Re-posted from my archives]&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Visual Studio allows website developers to quickly create highly functional websites with relatively little effort through the use of ASP.Net Server Controls. There are quite a few controls available out-of-the-box with Visual Studio, as well as scores of 3rd-party controls. In this exercise, you will get a chance to meet and try out some of the more commonly used controls.&lt;/p&gt;"
"Fixing a VHD After a Hardware Upgrade","","","Fixing a VHD After a Hardware Upgrade","&lt;p&gt;So, recently I got so frustrated with the slow speed of my computer that I decided to finally upgrade my hardware. I was running an older motherboard whose limit was 4GB RAM, and I wanted to upgrade to about 16GB.&lt;/p&gt; &lt;p&gt;Being impetuous, I ran right ahead with installing my new hardware (motherboard, RAM &amp;amp; CPU) without prepping my system beforehand. Big mistake!&lt;/p&gt; &lt;p&gt;I run a bunch of &lt;strong&gt;virtual machines&lt;/strong&gt;&amp;nbsp;(VM) as &quot;&lt;em&gt;boot to VHD&lt;/em&gt;&quot; (also called &quot;&lt;em&gt;Native Boot&lt;/em&gt;&quot; VHD or &quot;&lt;em&gt;Bare Metal&lt;/em&gt;&quot; VM) instances of Windows 7 Ultimate - one as my main development environment. I also had a &quot;normal&quot; installation of Win 7 on another partition, and I used this to create &amp;amp; manage my VHDs.&lt;/p&gt; &lt;p&gt;&lt;hr /&gt; &lt;/p&gt; &lt;p&gt;Things to mention:&lt;/p&gt; &lt;ul&gt;     &lt;li&gt;Fixing drivers for the VHDs&lt;/li&gt;     &lt;li&gt;Using various tools     &lt;ul&gt;         &lt;li&gt;dism - to push drivers onto an OS&lt;/li&gt;         &lt;li&gt;bcdedit - to manage the boot menu&lt;/li&gt;         &lt;li&gt;&lt;/li&gt;     &lt;/ul&gt;     &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;","0","6/5/2013 11:45:18 AM"," "," "," "," "
"Alpha/Beta","","","Alpha/Beta","&lt;p&gt;&lt;span style=&quot;color: rgb(227, 108, 9);&quot;&gt;&lt;strong&gt;άλφα μετάφραση &lt;br&gt;[alpha version]&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;","0","8/12/2013 1:59:52 PM"," "," "," "," "
"Code Snippets on HOT4DNN","","","Code Snippets on HOT4DNN","&lt;p&gt;Writers are advised to use the SyntaxHighlighter support when inserting Code Snippets for articles on HOT4DNN.&lt;/p&gt; &lt;p&gt;For example, the following code was inserted using the PreCode plug-in for Windows Live Writer (Scott Hanselman has a &lt;a href=&quot;http://www.hanselman.com/blog/BestCodeSyntaxHighlighterForSnippetsInYourBlog.aspx&quot; target=&quot;_blank&quot;&gt;nice blog post about using these&lt;/a&gt;).&lt;/p&gt;&lt;pre class=&quot;brush: csharp; ruler: true; first-line: 5;&quot;&gt;// Hello3.cs&lt;br&gt;using System;&lt;br&gt;&lt;br&gt;public class Hello3&lt;br&gt;{&lt;br&gt;   public static void Main(string[] args)&lt;br&gt;   {&lt;br&gt;      Console.WriteLine(&quot;Hello, World!&quot;);&lt;br&gt;      Console.WriteLine(&quot;You entered the following {0} command line arguments:&quot;,&lt;br&gt;         args.Length );&lt;br&gt;      for (int i=0; i &amp;lt; args.Length; i++)&lt;br&gt;      {&lt;br&gt;         Console.WriteLine(&quot;{0}&quot;, args[i]); &lt;br&gt;      }&lt;br&gt;   }&lt;br&gt;}&lt;/pre&gt; &lt;p&gt;Right now, this is being tested out on my site.&lt;/p&gt;","0","8/12/2013 2:00:32 PM"," "," "," "," "
"Your First DotNetNuke Module","","","Your First DotNetNuke Module","<p>This <strong>Hands-On-Tutorial</strong> for <strong>DotNetNuke<sup>®</sup></strong> walks you through creating a very simple module for DotNetNuke. Additionally, this article will show you how to install, test and package your module for distribution, followed by instructions on how to publish your module in the DotNetNuke Forge. Lastly, you will see how to package a version upgrade for your module.</p> <h2>Hello User</h2> <p>In a spin on the traditional “Hello World” program, this DNN Module Extension will be an ultra-thin module with a minimal bit of functionality. Nevertheless, through this tiny module you will see the fundamentals of creating DNN Module Extensions, including</p> <ul> <li>Building on PortalModuleBase  <li>Using the DNN API  <li>Packaging your module  <li>Incorporating Language Internationalization  <li>Publishing in DNN Forge </li></ul> <p>The following mockup is a sketch of what the module will look like when its finished.</p> <p><img width=""513"" height=""214"" title=""Hello User Module Mockup"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Hello User Module Mockup"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML156cda09.png"" border=""0""></p> <h2>Creating a (Simple) Module</h2> <p><img width=""255"" height=""182"" title=""HelloUser Source Code Files"" align=""right"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: right; display: inline; background-image: none;"" alt=""HelloUser Source Code Files"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1a267ca7.png"" border=""0"">To begin, open up Visual Studio and create a DotNetNuke website using the starter kit from DotNetNuke.Then add a blank C# module to your website with the name “HelloUser”. (You can read more about this step in my article on <font style=""background-color: rgb(255, 255, 0);""></font><a href=""http://hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/56/Getting-Started-with-DotNetNuke-Development.aspx"">Getting Started with DotNetNuke Development</a><font style=""background-color: rgb(255, 255, 0);""></font>.)</p> <p>This module has three files that we will have to edit.</p> <ul> <li><strong>ViewHelloUser.ascx</strong> – This is the ASP.NET user control that will be the “view” for the module’s content.  <li><strong>ViewHelloUser.ascx.cs</strong> – This code-behind file will provide functionality for the module by injecting user-specific data into the module’s controls.  <li><strong>ViewHelloUser.ascx.resx</strong> – This is a Resource File (.resx) used for storing literal text values that will be used in the module. </li></ul> <p>The first step will be to edit the resource file. This file contains a dictionary (Name/Value pairs) of string literals that we will be accessing through our C# code. Double-click the <strong>ViewHelloUser.ascx.resx</strong> file and modify its contents to match the image below.</p> <p><img width=""577"" height=""245"" title=""ViewHellowUser.ascx.resx"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""ViewHellowUser.ascx.resx"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1aa0be89.png"" border=""0""></p> <p>Next, edit the <strong>ViewHelloUser.ascx</strong> file to have the following markup. Note that we’re just using a couple of labels and a ListView on this form – a nice, simple layout. The content for these controls will be provided in the code-behind of the file.</p> <div style=""margin-bottom: 7px;""><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);""><p><span style=""color: black; background-color: rgb(255, 255, 0);"">&lt;%@ Control language=""C#"" Inherits=""HOT4DNN.Modules.HelloUser.ViewHelloUser"" </span></p><p><span style=""color: black; background-color: rgb(255, 255, 0);"">    CodeFile=""ViewHelloUser.ascx.cs"" AutoEventWireup=""true""%&gt;</span> </p></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);""><span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(199, 21, 133);"">asp</span>:<span style=""color: rgb(128, 0, 0);"">Label</span> <span style=""color: rgb(255, 0, 0);"">id</span>=<span style=""color: rgb(0, 0, 255);"">""Greeting""</span> <span style=""color: rgb(255, 0, 0);"">runat</span>=<span style=""color: rgb(0, 0, 255);"">""server""</span> <span style=""color: rgb(0, 0, 255);"">/&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);""><span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(199, 21, 133);"">asp</span>:<span style=""color: rgb(128, 0, 0);"">Label</span> <span style=""color: rgb(255, 0, 0);"">id</span>=<span style=""color: rgb(0, 0, 255);"">""AboutUser""</span> <span style=""color: rgb(255, 0, 0);"">runat</span>=<span style=""color: rgb(0, 0, 255);"">""server""</span> <span style=""color: rgb(0, 0, 255);"">/&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);""><span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(199, 21, 133);"">asp</span>:<span style=""color: rgb(128, 0, 0);"">ListView</span> <span style=""color: rgb(255, 0, 0);"">ID</span>=<span style=""color: rgb(0, 0, 255);"">""ActiveRoleList""</span> <span style=""color: rgb(255, 0, 0);"">runat</span>=<span style=""color: rgb(0, 0, 255);"">""server""</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">    <span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">LayoutTemplate</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">        <span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">div</span> <span style=""color: rgb(255, 0, 0);"">style</span>=<span style=""color: rgb(0, 0, 255);"">""border:1px solid black;""</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">            <span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">div</span> <span style=""color: rgb(255, 0, 0);"">id</span>=<span style=""color: rgb(0, 0, 255);"">""itemPlaceholder""</span> <span style=""color: rgb(255, 0, 0);"">runat</span>=<span style=""color: rgb(0, 0, 255);"">""server""</span> <span style=""color: rgb(0, 0, 255);"">&gt;</span><span style=""color: rgb(0, 0, 255);"">&lt;/</span><span style=""color: rgb(128, 0, 0);"">div</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">        <span style=""color: rgb(0, 0, 255);"">&lt;/</span><span style=""color: rgb(128, 0, 0);"">div</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">    <span style=""color: rgb(0, 0, 255);"">&lt;/</span><span style=""color: rgb(128, 0, 0);"">LayoutTemplate</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">    <span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">ItemTemplate</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">        <span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">div</span><span style=""color: rgb(0, 0, 255);"">&gt;</span><span style=""color: black; background-color: rgb(255, 255, 0);"">&lt;%</span># Container.DataItem <span style=""color: black; background-color: rgb(255, 255, 0);"">%&gt;</span><span style=""color: rgb(0, 0, 255);"">&lt;/</span><span style=""color: rgb(128, 0, 0);"">div</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);"">    <span style=""color: rgb(0, 0, 255);"">&lt;/</span><span style=""color: rgb(128, 0, 0);"">ItemTemplate</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre><pre style=""margin: 0em; width: 100%; font-family: consolas,&quot;Courier New&quot;,courier,monospace; font-size: 12px; background-color: rgb(255, 255, 255);""><span style=""color: rgb(0, 0, 255);"">&lt;/</span><span style=""color: rgb(199, 21, 133);"">asp</span>:<span style=""color: rgb(128, 0, 0);"">ListView</span><span style=""color: rgb(0, 0, 255);"">&gt;</span></pre></div> <p>In the code-behind file (<strong>ViewHelloUser.ascx.cs</strong>), enter the following code.</p> <div id=""codeSnippetWrapper""><pre id=""codeSnippet"" style=""margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &quot;Courier New&quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);""><p><span style=""color: rgb(0, 0, 255);"">using</span> System;<br><span style=""color: rgb(0, 0, 255);"">using</span> System.Collections.Generic;<br><span style=""color: rgb(0, 0, 255);"">using</span> DotNetNuke.Entities.Modules;<br><span style=""color: rgb(0, 0, 255);"">using</span> DotNetNuke.Services.Localization;</p><p><span style=""color: rgb(0, 0, 255);"">using</span> DotNetNuke.Security.Roles;</p><p><span style=""color: rgb(0, 0, 255);"">using</span> System.Web.UI.WebControls;</p><p><br><br><span style=""color: rgb(0, 0, 255);"">namespace</span> HOT4DNN.Modules.HelloUser<br>{<br>    <span style=""color: rgb(0, 0, 255);"">partial</span> <span style=""color: rgb(0, 0, 255);"">class</span> ViewHelloUser : PortalModuleBase<br>    {<br>        <span style=""color: rgb(0, 0, 255);"">protected</span> <span style=""color: rgb(0, 0, 255);"">void</span> Page_Load(System.Object sender, System.EventArgs e)<br>        {<br>            <span style=""color: rgb(0, 0, 255);"">if</span> (!Page.IsPostBack)<br>            {<br>                AboutUser.Text = Localization.GetString(<span style=""color: rgb(0, 96, 128);"">""AboutUser""</span>, LocalResourceFile);<br>                <span style=""color: rgb(0, 0, 255);"">string</span> greetUser;<br>                <span style=""color: rgb(0, 0, 255);"">if</span> (Request.IsAuthenticated)<br>                {<br>                    <span style=""color: rgb(0, 128, 0);"">// Use the Greeting text</span><br>                    greetUser = Localization.GetString(<span style=""color: rgb(0, 96, 128);"">""Greeting""</span>, LocalResourceFile);<br>                    greetUser = <span style=""color: rgb(0, 0, 255);"">string</span>.Format(greetUser, UserInfo.DisplayName);<br>                    <span style=""color: rgb(0, 128, 0);"">// List the user's security roles</span><br>                    RoleController rl = <span style=""color: rgb(0, 0, 255);"">new</span> RoleController();<br>                    <span style=""color: rgb(0, 0, 255);"">string</span>[] roleNames = rl.GetRolesByUser(UserId, PortalId);<br>                    ActiveRoleList.DataSource = roleNames;<br>                    ActiveRoleList.DataBind();<br>                }<br>                <span style=""color: rgb(0, 0, 255);"">else</span><br>                {<br>                    <span style=""color: rgb(0, 128, 0);"">// Only show a general greeting to the anonymous user</span><br>                    greetUser = Localization.GetString(<span style=""color: rgb(0, 96, 128);"">""AnonymousUser""</span>, LocalResourceFile);<br>                    AboutUser.Visible = <span style=""color: rgb(0, 0, 255);"">false</span>;<br>                    ActiveRoleList.Visible = <span style=""color: rgb(0, 0, 255);"">false</span>;<br>                }<br><br>                Greeting.Text = greetUser;<br>            }<br>        }<br>    }<br>}<br></p></pre><br></div> <h3>Understanding the Code</h3> <p>There’s a few items to note about the C# code and DotNetNuke.</p> <ul> <li>The class inherits from <strong>PortalModuleBase</strong> rather than from System.Web.UI.UserControl directly. <br>PortalModuleBase is a key part of the DotNetNuke API, and it exposes a rich set of properties to your module. With it, you have easy access to a lot of portal, page, and user-specific information. You can read more about this base class in the article <a href=""http://hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx""><strong>PortalModuleBase – Under the Hood</strong></a>.  <li>The <strong>UserInfo</strong> property of your page is a DotNetNuke object with a rich set of information about the currently logged on user. In this module, we’re placing the user’s Display Name in the greeting string.  <li>The <strong>Localization</strong> class (from DotNetNuke.Services.Localization) allows you to access text from a resource file. <br>Localization is all about making it possible for your module to support multiple languages, such as French or German, for your end-users. Notice that we make use of the <strong>LocalResourceFile</strong> property of the page, which by default points to the .resx file in your module’s App_LocalResources folder.  <li>The <strong>RoleController</strong> class (from DotNetNuke.Security.Roles) is used to get the list of security roles for the user. Notice that we are passing in the <strong>UserId</strong> and <strong>PortalId</strong> to the GetRolesByUser() method; these are more properties on your page, courtesy of PortalModuleBase. </li></ul> <h2>Testing Your Module</h2> <p>Testing your module is a matter of installing it into the DotNetNuke portal and adding it to a test page. The simplest way to do that is through the Extensions page in your website.</p> <p>Launch the portal from Visual Studio by pressing [CTRL] + [F5] and log in as the SuperUser (or Host account). Navigate to the Extensions page under the Host tab. Then, hover over the “Manage” link and select “Create New Module”.</p> <p><img width=""559"" height=""226"" title=""Extensions &gt; Create New Module"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Extensions &gt; Create New Module"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1ab8159e.png"" border=""0""></p> <p>In the Create Module From dialog, select “Control”. Then select “HelloUser” from the Module Folder and “ViewHelloUser.ascx” from the Resource drop-downs. Enter a user-friendly module name and a description. Make sure you have selected the Add Test Page checkbox so that you can quickly build the test page with your module pre-added for you.</p> <p><img width=""772"" height=""513"" title=""Create New Module dialog"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Create New Module dialog"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" border=""0""></p> <p>Click “Create Module” and you will be directed to the test page where you can view the module. By default, this test page will only be visible to Administrators, so you will need to change the page settings to allow all users to see it for testing purposes. Also, to properly test your module, you would need to create some security roles and a few test users, and then log onto the site as those users. Here’s a screenshot of my own tests.</p> <p><img width=""628"" height=""169"" title=""Hello User Test Page"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Hello User Test Page"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" border=""0""></p> <h2>Packaging Your Module</h2> <p>An important part of creating DotNetNuke modules is packaging the module for distribution. In order for others to load your module into their DotNetNuke installation, you must supply a zip file of all your files, including a DotNetNuke manifest (.dnn) that will guide the installation.</p> <p>Once again, the Host &gt; Extensions page will make that a snap! On the Extensions page, locate your module definition and click the Edit icon.</p> <p><img width=""742"" height=""93"" title=""Edit Hello User"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Edit Hello User"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" border=""0""></p> <p>In the Package Settings for the module, enter some notes about this initial release and some contact information for the end-users. Note that the module’s Version number defaults to version 01.00.00. Later, we’ll publish an updated version using these same steps.</p> <p><a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""554"" height=""571"" title=""Hello User Package Settings"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Hello User Package Settings"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a></p> <p>Click the Create Package link and this will start a wizard which will guide you through the steps. If you select the Review Manifest checkbox, the wizard will walk you through the following steps:</p> <ul> <li><strong>Choose Files to include</strong> – Here you will see the .ascx, .ascx.cs and .resx files created earlier.  <li><strong>Choose Assemblies to include</strong> – A list of the related DLLs for your module are shown here.  <li><strong>Create Manifest</strong> – The DNN manifest is shown here in a text box, allowing you to perform any manual edits to the installation manifest.  <li><strong>Create Package</strong> – In this step, you will specify the name of the Manifest File and the .zip that holds your distribution package.  <li><strong>Create Package Results</strong> – This final page of the wizard shows the results of creating the manifest and the zip file along with information on where the distribution package will be found (typically in the ~Install/Module/ folder of your portal). </li></ul> <p>Each of these steps are illustrated in the following screenshots (click to expand the image). <br><a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""244"" height=""147"" title=""Create Package"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Create Package"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a>&nbsp;<a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""244"" height=""138"" title=""Choose Files to include"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Choose Files to include"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a>&nbsp;<a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""244"" height=""134"" title=""Choose Assemblies to include"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Choose Assemblies to include"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a></p> <p><a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""244"" height=""171"" title=""Create Manifest"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Create Manifest"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a>&nbsp;<a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""244"" height=""126"" title=""Create Package"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Create Package"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a>&nbsp;<a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""244"" height=""163"" title=""Create Package Results"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Create Package Results"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a></p> <h2>Publishing in DotNetNuke Forge</h2> <p>The <a href=""http://www.dotnetnuke.com/Community/Extensions-Forge.aspx"" target=""_blank"">DotNetNuke Extension Forge</a> is a “community repository for Open Source extensions (modules, providers, skins, etc) for the DotNetNuke platform.” If you have a user account at <a href=""http://www.DotNetNuke.com"" target=""_blank"">DotNetNuke</a> (free registration), then you can publish &amp; promote your module there.</p> <p>The steps to publishing to the Forge are outlined in this <a href=""http://www.dotnetnuke.com/Resources/Video-Library/Viewer/VideoId/73/Create-An-DotNetNuke-Extensions-Forge-Project.aspx"" target=""_blank"">video</a> and <a href=""http://www.dotnetnuke.com/Resources/Wiki/Page/Forge.aspx"" target=""_blank"">wiki</a>. You can also learn more through the <a href=""http://www.dotnetnuke.com/Resources/Video-Library/Viewer/VideoId/263/Part-4-Creating-A-Project-In-The-DotNetNuke-Forge.aspx"" target=""_blank"">Task Manager video (Part 4)</a>. For brevity, here are the main steps:</p> <ol> <li>Log onto DotNetNuke and navigate to the <a href=""http://www.dotnetnuke.com/Community/Extensions-Forge.aspx"" target=""_blank"">Extensions Forge</a> page. Then, click the Create Project link. <br><a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1b43894a.png"" rel=""shadowbox""><img width=""240"" height=""41"" title=""Create New Extensions Forge Project"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Create New Extensions Forge Project"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1b43894a_thumb.png"" border=""0""></a>  <li>Enter in a title for the new project and click Save. <br><a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1b455214.png"" rel=""shadowbox""><img width=""240"" height=""108"" title=""Enter Project Title"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Enter Project Title"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1b455214_thumb.png"" border=""0""></a>  <li>Create your new project on CodePlex. <br><a href=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png"" rel=""shadowbox""><img width=""153"" height=""244"" title=""image"" style=""margin: 0px; border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""image"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png"" border=""0""></a>  <li>Agree to the terms, choose a license, upload your DotNetNuke package (.zip) along with any source code, and then publish your project. </li></ol> <p>By default, DotNetNuke Forge will synchronize with CodePlex on a daily basis to publish new releases. You can manage the details of your release through CodePlex and through the DotNetNuke Forge.</p> <h2>Module Versioning and Upgrades</h2> <p>It’s pretty common to want to release an upgraded version of your module. DotNetNuke handles version upgrades quite smoothly. All you need to do is publish your new release under a higher module number! Simple, right?!</p> <p>Actually, it can get a bit more involved when you include SQL scripts to install database components for your module. It’s important to remember that when you publish module upgrades, your end-users might be installing it over-top of a previous version or as a completely fresh install. As such, planning your upgrade takes a bit of time and thought. I plan to cover the details of how to do this in a later article. For now, let me walk you through the basic steps of creating a new version of your module.</p> <h3>Change your code</h3> <p>First, make any changes you deem necessary for your module. In the case of “Hello User”, add an EmptyDataTemplate to the ListView control.</p> <div id=""codeSnippetWrapper""><pre id=""codeSnippet"" style=""margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &quot;Courier New&quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);""><span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">asp:ListView</span> <span style=""color: rgb(255, 0, 0);"">ID</span><span style=""color: rgb(0, 0, 255);"">=""ActiveRoleList""</span> <span style=""color: rgb(255, 0, 0);"">runat</span><span style=""color: rgb(0, 0, 255);"">=""server""</span><span style=""color: rgb(0, 0, 255);"">&gt;</span><br>    <span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">EmptyDataTemplate</span><span style=""color: rgb(0, 0, 255);"">&gt;</span><br>        <span style=""color: rgb(0, 0, 255);"">&lt;</span><span style=""color: rgb(128, 0, 0);"">asp:Literal</span> <span style=""color: rgb(255, 0, 0);"">ID</span><span style=""color: rgb(0, 0, 255);"">=""NoData""</span> <span style=""color: rgb(255, 0, 0);"">runat</span><span style=""color: rgb(0, 0, 255);"">=""server""</span> <span style=""color: rgb(0, 0, 255);"">/&gt;</span><br>    <span style=""color: rgb(0, 0, 255);"">&lt;/</span><span style=""color: rgb(128, 0, 0);"">EmptyDataTemplate</span><span style=""color: rgb(0, 0, 255);"">&gt;</span><br></pre><br></div> <p>Next, modify the C# code in the Page_Load() method, immediately after the call to ActiveRoleList.DataBind(), as follows.</p> <div id=""codeSnippetWrapper""><pre id=""codeSnippet"" style=""margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &quot;Courier New&quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);"">ActiveRoleList.DataSource = roleNames;<br>ActiveRoleList.DataBind();<br>Literal noData = ActiveRoleList.FindControl(<span style=""color: rgb(0, 96, 128);"">""NoData""</span>) <span style=""color: rgb(0, 0, 255);"">as</span> Literal;<br><span style=""color: rgb(0, 0, 255);"">if</span> (noData != <span style=""color: rgb(0, 0, 255);"">null</span>)<br>    noData.Text = Localization.GetString(<span style=""color: rgb(0, 96, 128);"">""NoSecurityRoles""</span>, LocalResourceFile);<br></pre><br></div> <p>Finally, add a new string in your .resx file for the “NoSecurityRoles” localization text.</p> <p><img width=""839"" height=""232"" title=""No Security Roles"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""No Security Roles"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1b69fc38.png"" border=""0""></p> <h3>Re-Create Your Module Package</h3> <p>Once you’ve modified and tested your module, go through the same steps as earlier for packaging your module. All you have to remember to do is to change the Version Number for your module (in this case, I’m changing it to 01.00.01). It might be a good idea to <strong><em>not</em></strong> use the existing manifest when running through the Create Package wizard; if you do, you need to be aware that <em>using</em> the existing manifest does <em><u>not</u></em> mean replacing that manifest.</p> <p><img width=""556"" height=""87"" title=""Do not Use Existing Manifest"" style=""border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;"" alt=""Do not Use Existing Manifest"" src=""http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML1b938d70.png"" border=""0""></p> <p>In any case, be sure to review the manifest and the final zip package to make sure it’s got all the parts you expect. When you’re done with the wizard, push your latest changes to CodePlex and upload the new zipped package.</p> <p>&nbsp;</p> <p>Hopefully, you’ve found this tutorial helpful in creating your first DotNetNuke module. Look for further articles and <strong><u>H</u>ands-<u>O</u>n-<u>T</u>utorials</strong> in <a href=""http://HOT4DNN.com""><strong>HOT4DNN.com</strong></a>.</p>","0","8/12/2013 2:01:40 PM"," "," "," "," "
"Getting Started with DotNetNuke Development","","","Getting Started with DotNetNuke Development","&lt;p&gt;TBA&lt;/p&gt;","0","8/12/2013 3:30:07 PM"," "," "," "," "
"Using HOT4DNN Tutorial Starter Kits","","","Using HOT4DNN Tutorial Starter Kits","&lt;p&gt;TBA:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;TODO: how to install a tutorial starter kit; how to use a tutorial starter kit; HOT4DNN tutorials that use these starter kits.&lt;/p&gt;&lt;/blockquote&gt;","0","8/12/2013 3:31:07 PM"," "," "," "," "
"Implementing IActionable","","","Implementing IActionable","&lt;p&gt;TBA - &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;h2&gt;DRAFT NOTES/Content …&lt;/h2&gt; &lt;p&gt;DotNetNuke offers a lot of flexibilty when it comes to adding ModuleActions. This is evident in all the properties of the ModuleAction class as well as the number of ways that the ModuleActionCollections.Add method can be called (there are three versions to choose from, one of which has seven optional arguments). That flexibility can lead to some hesitation for module developers: Which one should you use?&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;Every ModuleAction should have (as a minimum) an ID, Title and CommandName. The ID can be generated by calling the GetNextActionID() method of your View control (this method is defined in PortalModuleBase). The Title should come from your View’s resource file (.resx); it can be retrieved by calling the GetString() method of the DotNetNuke.Services.Localization class, as shown in the following code snippet.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ShowAllReservations&quot;&lt;/span&gt;, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The CommandName can be any string you want, since it’s only used by your code (and is not displayed as literal text to the user). For example, you could use “ShowAll” as a command name. To add this minimal information, your ModuleActions property would look like this.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ModuleActions() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Actions.ModuleActionCollection &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; IActionable.ModuleActions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Actions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; Actions.ModuleActionCollection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        Actions.Add(GetNextActionID(), Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ShowAllReservations&quot;&lt;/span&gt;, LocalResourceFile), &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ShowAll&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; Actions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Property&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Besides these minimum&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;If only this minimum information is supplied, then DotNetNuke will raise an event which your View control can capture by adding an event handler. This is a useful behaviour for extra functionality (such as sorting, searching or filtering data) that you want to give users who are simply viewing your content. A good place to add the event handler is in the Page_Init, as in the following sample.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Init(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.Init&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    AddActionHandler(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;AddressOf&lt;/span&gt; ModuleAction_Click)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.OnInit(sender, e)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Sub&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Then you can write a method to handle the module action as you see fit.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; ModuleAction_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Entities.Modules.Actions.ActionEventArgs)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; e.Action.CommandArgument = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ShowAll&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; your code to &quot;ShowAll&quot; goes here... &lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Sub&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Most of the time, developers are interested in adding a ModuleAction that allows the user to access the &lt;/p&gt;","0","8/12/2013 3:31:40 PM"," "," "," "," "
"Designing Database Tables for DNN Modules","","","Designing Database Tables for DNN Modules","&lt;p&gt;TBA – ModuleId and cascade Delete, sprocs, install script, uninstall script&lt;/p&gt;","0","8/12/2013 3:32:09 PM"," "," "," "," "
"Building Your Module’s Data Access Layer","","","Building Your Module’s Data Access Layer","&lt;p&gt;TBA – SqlDataProvider and the abstract DataProvider&lt;/p&gt;","0","8/12/2013 3:32:44 PM"," "," "," "," "
"CBOs – Your Module-Specific “Info” Classes","","","CBOs – Your Module-Specific “Info” Classes","&lt;p&gt;TBA – IHydratable, designing off of the DB tables.&lt;/p&gt;","0","8/12/2013 3:33:12 PM"," "," "," "," "
"Building a Business Controller Class","","","Building a Business Controller Class","&lt;p&gt;TBA – registering as your controller class; ISearchable, IPortable, IUpgradable; pros/cons of being the sole BLL entry point (large vs. small modules)&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;  &lt;h1&gt;Building a Business Controller Class&lt;/h1&gt; &lt;p&gt;DotNetNuke&#174; modules typically follow a Client-Server architecture in their design. An important part of Client-Server is the separation of the user interface (UI) layer from the business logic layer (BLL). The &lt;strong&gt;Controller&lt;/strong&gt; class of a DNN&#174; module falls squarely in the BLL camp. In many simple modules, the Controller is the only class in the BLL. In more complex modules, there may be many Controller classes or the Controller class might sit behind or alongside a fa&#231;ade class.&lt;/p&gt; &lt;p&gt;Most of the sample DNN-based Controller classes found on the internet perform these two distinct services.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;CRUD Services&lt;/strong&gt; – As the entry point for the back-end of a module, the Controller class exposes methods for accessing and managing the module’s data. Those methods are called by the UI when it needs to Create, Read, Update, or Delete (C.R.U.D.) module data.  &lt;li&gt;&lt;strong&gt;DNN Integration Services&lt;/strong&gt; – The Controller class can also provide the entry point which allows the DotNetNuke framework to connect to your module’s data. By implementing various DNN interfaces – ISearchable, IPortable, IUpgradeable – your module can be accessed by the DotNetNuke framework &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;Implements ISearchable&lt;/p&gt; &lt;p&gt;ISearchable is an optional interface (from the DotNetNuke.Entities.Modules) which, when implemented, allows the DotNetNuke framework to perform a &lt;/p&gt;","0","8/12/2013 3:33:40 PM"," "," "," "," "
"ModuleSettings vs. TabModuleSettings","","","ModuleSettings vs. TabModuleSettings","&lt;p&gt;A frequent question among those new to DNN module development is how to distinguish the purpose and usage of ModuleSettings and TabModuleSettings. To understand this distinction, it’s important to realize that any given module instance can be “shared” on different pages.&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;Alongside the above usages of the ModuleId and TabModuleId are the roles they play in module-specific settings. Module-specific settings are stored in a Hashtable as key-value pairs and are typically treated as distinct from the module’s own custom business objects (CBOs). A helpful way to think of module-specific settings is to regard them as customizable constants or metadata that is used to affect the module’s behaviour or presentation of the CBO data. These settings can then be used in the View and Edit user controls for the module.&lt;/p&gt;","0","8/12/2013 3:34:17 PM"," "," "," "," "
"PortalModuleBase – Under the Hood","","","PortalModuleBase – Under the Hood","&lt;p&gt;&lt;img width=&quot;201&quot; height=&quot;100&quot; title=&quot;PortalModuleBase Class Diagram&quot; align=&quot;left&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; margin: 0px 5px 5px 0px; display: inline;&quot; alt=&quot;PortalModuleBase Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_9.png&quot; border=&quot;0&quot;&gt;In the DotNetNuke&#174; framework, modules developers can leverage a number of classes are available as base classes for their user controls. This article takes a closer look at &lt;strong&gt;PortalModuleBase&lt;/strong&gt; which is typically used as a base class for View and Edit controls in standard module extensions.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul style=&quot;clear: both;&quot;&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/40/UserControlBase-ndash-Under-the-Hood.aspx&quot;&gt;UserControlBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/41/ModuleSettingsBase-ndash-Under-the-Hood.aspx&quot;&gt;ModuleSettingsBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/42/ModuleInstanceContext-ndash-Under-the-Hood.aspx&quot;&gt;ModuleInstanceContext&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/43/Developing-View-User-Controls-for-your-DotNetNuke-Module.aspx&quot;&gt;View Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/44/Developing-Edit-User-Controls-for-your-DotNetNukereg-Module.aspx&quot;&gt;Edit Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/45/Developing-a-Settings-User-Control-for-your-DotNetNukereg-Module.aspx&quot;&gt;Settings Control&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/46/Working-with-Resource-Files-resx-in-your-DotNetNukereg-Module.aspx&quot;&gt;Resource Files (.resx)&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/49/Building-a-Business-Controller-Class.aspx&quot;&gt;Building a Business Controller Class&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/50/CBOs-ndash-Your-Module-Specific-ldquoInfordquo-Classes.aspx&quot;&gt;CBOs – Your Module-Specific “Info” Classes&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/51/Building-Your-Modulersquos-Data-Access-Layer.aspx&quot;&gt;Building Your Module’s Data Access Layer&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/52/Designing-Database-Tables-for-DNN-Modules.aspx&quot;&gt;Designing Database Tables for DNN Modules&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;  &lt;h1&gt;PortalModuleBase – Under the Hood&lt;/h1&gt; &lt;p&gt;PortalModuleBase is the base class for View and Edit controls of DotNetNuke&#174; module extensions. This class extends the System.Web.UI.UserControl class to bring information to your module about the DotNetNuke framework. This information includes data about the user, the requested tab (page), and a bunch of portal-specific information. Before diving into this class, it’s helpful to look at the complete set of classes in their hierarchy.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;img width=&quot;426&quot; height=&quot;523&quot; title=&quot;DotNetNuke UI Base Classes&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; margin: 5px 0px; display: inline;&quot; alt=&quot;DotNetNuke UI Base Classes&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_10.png&quot; border=&quot;0&quot;&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;PortalModuleBase&lt;/strong&gt; is typically used as the base class for View and Edit controls while the Settings control inherits from &lt;strong&gt;ModuleSettingsBase&lt;/strong&gt;. These two classes form a chain in the class hierarchy that goes back to the UserControl class – the basis of all user controls (.ascx). In the middle is a DotNetNuke class called &lt;strong&gt;UserControlBase&lt;/strong&gt;, which supplies information about the end-user who is accessing the page. Module developers will not directly inherit the UserControlBase for their user controls.&lt;/p&gt; &lt;p&gt;Notice that both PortalModuleBase and ModuleSettingsBase implement unique interfaces (IModuleControl and ISettingsControl). These interfaces allow DotNetNuke to work directly with your module when rendering a page. Or, to put it another way, these interfaces act as a way to “plug-in” to the DotNetNuke framework.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;b7774b31&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_12.png&quot;&gt;&lt;img width=&quot;225&quot; height=&quot;250&quot; title=&quot;PortalModuleBase Class Diagram (Click for larger image)&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;PortalModuleBase Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_thumb_4.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Key Members&lt;/h2&gt; &lt;p&gt;PortalModuleBase has over 25 properties and a few methods. The majority of the properties are simple wrappers that get their values from the ModuleContext property (which is a ModuleInstanceContext object – you can learn more about this class through the related links at the end of this article). Module developers will typically focus on a few notable properties. Here are my “top-ten” key properties; all of the other members will be described later in this article.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;EditMode&lt;/strong&gt; – (ReadOnly) This boolean value is set to true if the current user is an administrator of the page (and therefore has Edit permissions on the module).  &lt;li&gt;&lt;strong&gt;IsEditable&lt;/strong&gt; – (ReadOnly) This boolean property checks to see if the page can be edited. DotNetNuke uses this to determine whether or not to show the Action menu when rendering the module on the page. To be editable, the page must be rendered in Edit or Layout mode and the user must have Edit rights to the module.  &lt;li&gt;&lt;strong&gt;LocalResourceFile&lt;/strong&gt; – This is the complete path to the resource file (.resx) for the user control.  &lt;li&gt;&lt;strong&gt;ModuleId&lt;/strong&gt; – This is the ID of this particular instance of the module. (Remember, any module extension may be added several times to a portal; each new instance is given a unique ModuleId.)  &lt;li&gt;&lt;strong&gt;PortalId&lt;/strong&gt; – This ID represents the particular portal (website) instance inside the DotNetNuke web application. (DotNetNuke supports the concept of hosting multiple web sites in a single installation.)  &lt;li&gt;&lt;strong&gt;Settings&lt;/strong&gt; – This is a Hashtable (key-value) collection of module settings that are specific to your module. It includes both the ModuleSettings and TabModuleSettings.  &lt;li&gt;&lt;strong&gt;TabId&lt;/strong&gt; – This is the ID of the tab (page) on which the module resides.  &lt;li&gt;&lt;strong&gt;TabModuleId&lt;/strong&gt; – The TabModuleId differs from the ModuleId in that the TabModuleId is unique for modules that are “shared” (or “mirrored”) between tabs.  &lt;li&gt;&lt;strong&gt;UserId&lt;/strong&gt; – This is the ID of the logged-in user currently accessing the module/page.  &lt;li&gt;&lt;strong&gt;UserInfo&lt;/strong&gt; – This object contains all the information about the logged in user, such as their UserId, UserName, and DisplayName. It also includes an array of the names of roles to which the user belongs as well as other information on the user’s profile. For performance reasons, some of the information (such as the Profile data) is “lazy-loaded”, meaning that the values are only retrieved when needed. For anonymous users, this object is set to Nothing (null). &lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;PortalId and TabId&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;PortalId&lt;/strong&gt; and &lt;strong&gt;TabId&lt;/strong&gt; are frequently referenced by module developers in their user control’s code. This is because they are often required as parameters to access various methods in the DNN API.&lt;/p&gt; &lt;p&gt;For example, the GetTab() method of the TabController class requires both of these properties in its parameter list. Another example is the FillUserCollection() method of the UserController which defines the PortalId as part of its parameter list. Yet another sample which requires a PortalId value is the GetRoleGroups() method of the RoleController.&lt;/p&gt; &lt;p&gt;The DNN API is not the only part that requires tab and portal IDs. Your own module may need this information for its own purposes. In any case, the TabId and PortalId are part and parcel of the overall context of any given module on a page.&lt;/p&gt; &lt;h3&gt;ModuleId and TabModuleId&lt;/h3&gt; &lt;p&gt;If PortalId and TabId are an important part of the context of a module, then &lt;strong&gt;ModuleId&lt;/strong&gt; is absolutely central. It’s no surprise, then, to see this as the PortalModuleBase property most frequently used within module extensions (both third-party and core modules). Alongside the &lt;strong&gt;ModuleId&lt;/strong&gt; is the &lt;strong&gt;TabModuleId&lt;/strong&gt;, which helps in uniquely identifying a module on a page. To see how these properties relate to each other, it’s important to understand how DotNetNuke handles modules on a page.&lt;/p&gt; &lt;p&gt;When someone adds a new module to a page, that module is assigned a unique ModuleId. This helps to distinguish each instance of that module from other instances. Because each module instance is unique, it can hold different data from other instances.&lt;/p&gt; &lt;p&gt;For example, if a user were to add two HTML modules to a page, each instance would be given a unique ModuleId (say 354 and 355). They can then be tracked as distinct entities and moved around as needed to different positions on the page or to different pages altogether. Each HTML module has its own content that can be edited entirely independent of other HTML module instances.&lt;/p&gt; &lt;p&gt;DotNetNuke also allows modules to be “referenced” on other pages. What this allows is the ability to create content in a single module and then show that exact same module instance on another page. For example, consider the case of a Contact module that is added to the “Home” page. That module might have a ModuleId of 542. If that exact same information were needed on another page (say, the “About Us” page), it would make sense to use the same module instance on both pages. That way, if the data were modified in one instance, then the changes would be reflected on both pages.&lt;/p&gt; &lt;p&gt;Still, DotNetNuke needs to tell them apart (so as to render them on the different pages). That is where the TabModuleId comes in. TabModuleId is unique for each module instance, including referenced modules. So, the sample of a ModuleId of 542 that is referenced on two pages, each “shared copy” or reference will still have unique values for the TabModuleId (such as 96 and 104).&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;558&quot; height=&quot;327&quot; title=&quot;TabModuleId distinguished Referenced (Shared) Modules&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Shared Module&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_39.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;Despite the ultimate uniqueness of the TabModuleId, the ModuleId is the one that gets the most use by developers. This is (in part) because the ModuleId is often a required parameter for interacting with many of the API calls into the DNN framework. Additionally, the ModuleId is almost indispensible for any module that has its own tables in the database. At least one of the module’s tables should have ModuleId as a foreign key column (preferably with Cascade Delete) in order to ensure that the table data will be cleared when a module is deleted from a page.&lt;/p&gt; &lt;h3&gt;Settings&lt;/h3&gt; &lt;p&gt;The PortalModuleBase class defines a property called &lt;strong&gt;Settings&lt;/strong&gt;. This property is a Hashtable of key-value pairs which contains module-specific settings. Module-specific settings are typically treated as distinct from the module’s own custom business objects (CBOs). A helpful way to think of module-specific settings is to regard them as customizable constants or metadata that is used to affect the module’s behaviour or presentation of the CBO data. These settings can then be used in the View and Edit user controls for the module.&lt;/p&gt; &lt;p&gt;The set of module-specific settings is made up of ModuleSettings and TabModuleSettings, and these rely on the ModuleId and TabModuleId respectively. The ModuleSettingsBase class (which directly inherits the PortalModuleBase and is itself inherited by the Settings.ascx for the module) is used to load and update the module-specific information when the end-user is editing the module’s overall settings. It is in this context that the ModuleId and TabModuleId are used to access and modify module-specific settings. (For more information on the ModuleSettingsBase or the Settings user control, see the related links at the end of this article.)&lt;/p&gt; &lt;p&gt;Recall that when a module is referenced (or “shared”) on separate pages (tabs) in a portal, then the data (embodied in CBOs) is also shared on those pages. However, sometimes developers want to share the CBO information while having different settings for each shared module instance. That’s where TabModuleSettings come in. A shared module may have different values for TabModuleSettings among the shared instances. By contrast, if the settings information is stored in the ModuleSettings, then those values are the same for the shared instances. The following image illustrates this distinction.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;558&quot; height=&quot;595&quot; title=&quot;ModuleSettings vs TabModuleSettings&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;ModuleSettings vs TabModuleSettings&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_21.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;By putting these values in the Settings property of PortalModuleBase, they are more easily accessible to the developer when coding the View and Edit user controls. As a Hashtable, all the developer needs to do is supply a key to the Settings property and cast the value to the required data type. For example, if there was a setting for showing or hiding the Fax number in the Contact Module, then the following code could be used to get the value from the Settings property.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Settings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ShowFax&quot;&lt;/span&gt;) IsNot &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; ShowFax &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Boolean&lt;/span&gt; = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(Settings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ShowFax&quot;&lt;/span&gt;), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Boolean&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.FaxInfo.Visible = ShowFax&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;It should also be noted that while the Settings property holds both ModuleSettings and TabModuleSettings, adding to or modifying the contents of this Hashtable will not cause those changes to be saved. Adding and modifying module-specific settings is supported through the ModuleSettingsBase class. Again, see the related links at the end of this article for further information on the ModuleSettingsBase class and developing a Settings user control.&lt;/p&gt; &lt;h3&gt;UserId and UserInfo&lt;/h3&gt; &lt;p&gt;For user-specific information, the &lt;strong&gt;UserId&lt;/strong&gt; and &lt;strong&gt;UserInfo&lt;/strong&gt; properties supply everything relevant about the logged in user. The UserId is simply an integer that uniquely identifies an individual user (it’s value is unique among all portals in the DNN application). The UserInfo property is actually an object (of type DotNetNuke.Entities.Users.UserInfo) that holds the UserId, UserName, Email, etc. For more information on the UserInfo class, see the related links at the end of this article.&lt;/p&gt; &lt;p&gt;For anonymous users (that is, when there is no logged-in user behind the page request), the UserInfo property will be Nothing (or null) while the UserId will hold a value of Null.NullInteger. NullInteger is a read-only property defined in the DotNetNuke.Common.Utilities.Null class. The NullInteger value has been defined as negative one (-1) since the early days of DotNetNuke, and it is unlikely to change. Still, it is a good programming practice to check the UserId against the NullInteger “constant” rather than comparing it to the “raw” value of –1.&lt;/p&gt; &lt;p&gt;Sometimes a developer will want to check the security roles to which the user belongs. It’s often not necessary (though not impossible) to use the UserInfo or UserId properties to see if the person has Edit permissions for the module; IsEditable is typically good enough for this check. Nevertheless, there are a few ways to go about checking the roles for the logged in user (especially when you’re interested in roles other than those that relate to the module’s Edit permissions). One way is to examine the UserInfo.Roles property, which is an array of strings containing the names of roles to which the user belongs. Another way is to call the UserInfo.IsInRole() method.&lt;/p&gt; &lt;p&gt;Along a similar vein, the UserInfo.IsSuperUser property can be checked to see if the person has Host-level access to the portal. &lt;br&gt;&lt;/p&gt; &lt;h3&gt;EditMode and IsEditable&lt;/h3&gt; &lt;p&gt;On the surface, &lt;strong&gt;EditMode&lt;/strong&gt; and &lt;strong&gt;IsEditable&lt;/strong&gt; might seem to have the same effect. In actuality, their purposes are quite different, and this is important to consider when choosing between them for your module.&lt;/p&gt; &lt;p&gt;When you dive under the hood of the EditMode property, you see that it eventually calls the CanAdminPage() method of the TabPermissionController class. What this ultimately checks is whether the current user is in a role with Edit permissions for the entire page (not just the module).&lt;/p&gt; &lt;div style=&quot;margin-bottom: 10px; margin-left: 10px; float: right;&quot;&gt; &lt;p&gt;&lt;img width=&quot;217&quot; height=&quot;20&quot; title=&quot;Page View Mode&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Page View Mode&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_24.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;217&quot; height=&quot;20&quot; title=&quot;Page Edit Mode&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Page Edit Mode&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_36.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;217&quot; height=&quot;20&quot; title=&quot;Page Layout Mode&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Page Layout Mode&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_35.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;By contrast, IsEditable is only concerned with two things: Whether or not the page is in View mode (as opposed to Edit or Layout), and whether or not the user has Edit rights to the module. If the page is in View mode, then IsEditable will be false. (This makes sense, because the whole purpose of the page’s View mode is to see what the page will look like to people without Edit rights.) Likewise, if the user does not have Edit rights, then IsEditable will be false. IsEditable will only be true when the page is in Edit or Layout mode and the user has permission to edit the module.&lt;/p&gt; &lt;p&gt;The IsEditable property is the best choice when looking for something to control the visibility of an element or control in your user control. Typically, the only time that this will be needed is when you are designing your View control. This property can be used in a declarative fashion or programmatically to control visibility. For example, in the Survey.ascx control from the DotNetNuke Survey module, this property is checked inside a DataList to control the visibility of the Edit link for each question.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:HyperLink&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;cmdEdit2&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ImageUrl&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;~/images/edit.gif&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;NavigateUrl&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&#39;&amp;lt;%# EditURL(&quot;SurveyId&quot;,DataBinder.Eval(Container.DataItem,&quot;SurveyId&quot;)) %&amp;gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Visible&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;&amp;lt;%# IsEditable %&amp;gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;To use IsEditable in your module’s code-behind, simply reference it by name (since PortalModuleBase is likely your base class for your View control, it’s already a property of your user control). The following code snippet, taken from the HtmlModule.ascx.vb of the DotNetNuke core demonstrates its usage in enabling the rich text editor.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; edit in place&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; EditorEnabled = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;AndAlso&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.IsEditable = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;AndAlso&lt;/span&gt; _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;   PortalSettings.UserMode = DotNetNuke.Entities.Portals.PortalSettings.Mode.Edit &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    EditorEnabled = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    EditorEnabled = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; If&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;As for the EditMode property, I haven’t found a suitable example to demonstrate when it should be used in a module, so I’m hesitant to recommend it for any purpose. &lt;em&gt;(Author’s Note: If you know more about this property, please let me know in the article comments below.)&lt;/em&gt; Knowing the distinction is important, however, to avoid choosing EditMode when IsEditable is more appropriate.&lt;/p&gt; &lt;h3&gt;LocalResourceFile&lt;/h3&gt; &lt;p&gt;The DotNetNuke framework is designed to support different human languages as the basis for all built-in text and labels in the UI. This whole concept of supporting different human languages in a web site is called “Localization”.&lt;/p&gt; &lt;p&gt;The DNN framework extends this capability to module developers through the use of Local Resource Files (.resx) for each User Control in the module. Resource files (.resx) are simply XML files for storing string constants used by your module; these constants can be referenced in place of putting literal text in your user control’s .ascx. The DotNetNuke framework defaults to the US English language (“en-us”), and module developers should be aware that their regular .resx file will be treated as English.&lt;/p&gt; &lt;p&gt;To facilitate the use of DNN’s Localization API, PortalModuleBase exposes a property called &lt;strong&gt;LocalResourceFile&lt;/strong&gt; which identifies the server-side path to the .resx file for the user control. This property is defined as part of the IModuleControl interface which PortalModuleBase implements. By default, PortalModuleBase will return a path that leads to an “App_LocalResources” folder inside the user control’s folder and will expect the name of the .resx file to match the name of the user control. Therefore, if your user control is named “ViewMyModule.ascx” then this property will generate a complete file name that goes to the user control’s folder and ends in “App_LocalResources/ViewMyModule.ascx.resx”.&lt;/p&gt; &lt;p&gt;Module developers can choose a different path for the LocalResourceFile by pointing this property to another .resx file. This can be useful when a module has many user controls and the developer wants to centralize their localization support in a single file. A good place to do this is in the Init event.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Protected&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; OnInit(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.LocalResourceFile = Path.Combine(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.ControlPath, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                        Localization.LocalResourceDirectory &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;/MyModuleResources&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.OnInit(e)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This will set the path for the .resx file to “App_LocalResources/MyModuleResources.resx” in your module’s control path. Note that to use Localization.LocalResourceDirectory in your code, you will need to import the DotNetNuke.Services.Localization namespace. Alternatively, you can set the LocalResourceFile in the PageLoad event.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Load(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.Load&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.LocalResourceFile = Path.Combine(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.ControlPath, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                        Localization.LocalResourceDirectory &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;/MyModuleResources&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; ... continue Page_Load logic&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Because LocalResourceFile is defined as part of the IModuleControl interface, this allows the DNN framework to reference your control as an IModuleControl in order to find your resource files; DNN can then use that file to inject your resource strings into your user control’s items (such as &amp;lt;ASP:Label&amp;gt; or &amp;lt;ASP:LinkButton&amp;gt;) as long as those server controls have a Text property and a ResourceKey attribute. It also allows DNN the capability of letting site administrators customize the language settings for your module (such as offering a French version of your module’s resource files).&lt;/p&gt; &lt;p&gt;There are a couple of ways to use resource strings from the .resx file in your module. The first (and easy) way to do this is to declaratively add the ResourceKey attribute to items such as the labels on your user control. For example, instead of placing the literal text “First Name” to label a text box, you could use an &amp;lt;ASP:Label&amp;gt; control with an assigned ResourceKey, as in the following code snippet.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;ASP:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;FirstNameLabel&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblFirstName&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;ASP:TextBox&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;FirstName&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Your LocalResourceFile could then define the literal text “First Name” under the key “lblFirstName.Text” (the “.Text” suffix is a convention that allows DNN to use a single ResourceKey for different properties of the server control; for more information on these suffixes, see the links on related articles below). A website administrator could then set up a French resource file for your module and substitute “Petit nom” under the same key “lblFirstName.Text”. This approach offers a flexible and elegant approach to dealing with Localization for module developers.&lt;/p&gt; &lt;p&gt;Besides this declarative approach to using the resource file, your module can programmatically access its string values through DNN’s Localization API. As an example, consider the following code which could be used instead of the ResourceKey for setting the Text of the &amp;lt;ASP:Label&amp;gt; control.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.FirstNameLabel.Text = Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;lblFirstName&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;There are many opportunities for using localized string in your module. They can be used for labels, link buttons, tooltips, error messages, etc. To learn more about localization, see the related links at the end of this article.&lt;/p&gt; &lt;h3&gt;EditUrl() Method&lt;/h3&gt; &lt;p&gt;Most of the methods in PortalModuleBase are obsolete (as of DNN 5.0). One method that has survived is the &lt;strong&gt;EditUrl&lt;/strong&gt; method, which comes in various overloaded forms. The EditUrl method is used to get the URL for an Edit control registered as part of the module. If you only have a single Edit control that uses the key name “Edit”, then the best one to use is either the parameter-less one called &lt;font face=&quot;Courier New&quot;&gt;EditUrl()&lt;/font&gt; or (if you want to pass parameters to your Edit control) the &lt;font face=&quot;Courier New&quot;&gt;EditUrl(ByVal KeyName As String, ByVal KeyValue As String)&lt;/font&gt; version. Here are the complete sets of signatures.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;EditUrl()&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;Generate using “Edit” as the default ControlKey name with no additional query-string parameters (key-value pairs). &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;EditUrl(ByVal ControlKey As String)&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;Generate using a specific user control (ControlKey) with no additional query-string parameters (key-value pairs). &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;EditUrl(ByVal KeyName As String, ByVal KeyValue As String)&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;Generate an URL using “Edit” as the default ControlKey name with a single query string parameter (key-value pair). &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;EditUrl(ByVal KeyName As String, ByVal KeyValue As String, ByVal ControlKey As String)&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;Generate an URL to request a specific user control (denoted by ControlKey) along with a single query string parameter (key-value pair). &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;font face=&quot;Courier New&quot;&gt;EditUrl(ByVal KeyName As String, ByVal KeyValue As String, ByVal ControlKey As String, ByVal ParamArray Additional Parameters As String())&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;Generate an URL to request a specific user control (denoted by ControlKey) along with a set of query string parameters (key-value pairs). &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;h2&gt;Implementing IModuleControl&lt;/h2&gt; &lt;p&gt;&lt;img width=&quot;293&quot; height=&quot;184&quot; title=&quot;IModuleControl Interface&quot; align=&quot;right&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; margin: 0px 0px 5px 5px; display: inline;&quot; alt=&quot;IModuleControl Interface&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_15.png&quot; border=&quot;0&quot;&gt;IModuleControl defines a number of properties which PortalModuleBase implements. Many of these properties are used by the DotNetNuke framework to supply information about the module. DotNetNuke typically uses these properties to aid in presenting (rendering) the module in the web page. Module developers can use these properties to get information about the module in the context of the entire DNN application. In a sense, the IModuleControl properties can allow a module to be “self-aware”; through them, a module can access data about itself and the DNN-specific context in which it is being used.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Control&lt;/strong&gt; – (ReadOnly) This property allows a class to refer to itself as an object of type Control.  &lt;li&gt;&lt;strong&gt;ControlPath&lt;/strong&gt; – (ReadOnly) This property defines the path to the actual .ascx control. Module developers can use this as a basis for accessing other files or controls in the same directory. Sample usages could be to get module-specific images or XML files. It is also used in PortalModuleBase to generate a default location for the control’s LocalResourceFile.  &lt;li&gt;&lt;strong&gt;ControlName&lt;/strong&gt; – (ReadOnly) This property offers a name for the control. PortalModuleBase implements this as the fully-qualified class name having underscores (_) replaced with periods (.). Therefore, if your class has the name “View_MyModule”, then the ControlName would be “View.MyModule”.  &lt;li&gt;&lt;strong&gt;LocalResourceFile&lt;/strong&gt; – This is the complete path to the resource file (.resx) for the user control. The DotNetNuke framework uses this when trying to resolve items such as the title to use for your module’s Edit or Settings controls and to replace text for server controls with the ResourceKey attribute..  &lt;li&gt;&lt;strong&gt;ModuleContext&lt;/strong&gt; – (ReadOnly) The ModuleContext property is a ModuleInstanceContext object. The ModuleInstanceContext provides the actual “grunt work” of getting values for many of the other properties of PortalModuleBase, such as the PortalId, ModuleId, etc. Most of the properties of PortalModuleBase get their actual values from examining the ModuleContext property. &lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;Other Class Members&lt;/h2&gt; &lt;p&gt;Besides the IModuleControl properties, these are the remaining properties of PortalModuleBase (including the commonly used ones discussed in detail earlier in the article).&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt; – This is a collection of menu items that are displayed as part of the Action Menu to those users who have permission to Edit the module. When a developer creates a View user control that implements the IActionable.ModuleActions property, they can add items to be included in this collection.  &lt;li&gt;&lt;strong&gt;CacheDirectory&lt;/strong&gt; – (ReadOnly, obsolete) This string produces the server-side path to the folder used for caching. It is now obsolete, and the path to the cache directory should now be obtained through a call to ModuleController.CacheDirectory().  &lt;li&gt;&lt;strong&gt;CacheFileName&lt;/strong&gt; – (ReadOnly, obsolete) This overloaded string property produces the name of the file used for caching module information on the server. It is now obsolete, and the file name for the cache should be obtained by calling ModuleController.CacheFileName() and passing in the module’s TabModuleId.  &lt;li&gt;&lt;strong&gt;CacheKey&lt;/strong&gt; – (ReadOnly, obsolete) This overloaded string property produces the key for the cache. It is obsolete and the key should be obtained by calling ModuleController.CacheKey() and passing in the module’s TabModuleId.  &lt;li&gt;&lt;strong&gt;CacheMethod&lt;/strong&gt; – (ReadOnly, obsolete since DNN 5.0) This string property is used to get the caching method (either caching to disk or to memory). It is now obsolete and the caching approach used by the portal should be found through the shared and read-only ModuleCachingMethod property of the DotNetNuke.Entities.Host class.  &lt;li&gt;&lt;strong&gt;ContainerControl&lt;/strong&gt; – (ReadOnly) This property is used to find the Control object that acts as the container of the user control. It does so with the following call: FindControlRecursive(Me, “ctr” &amp;amp; ModuleId.ToString)  &lt;li&gt;&lt;strong&gt;EditMode&lt;/strong&gt; – (ReadOnly) This boolean value is set to true if the current user has Edit permissions on the page (tab) to which the module belongs.  &lt;li&gt;&lt;strong&gt;HelpFile&lt;/strong&gt; – (Obsolete since DNN 2.2, it will be removed sometime after DNN 5.0) This obsolete property represented the name of the file in the module’s directory that the end-user can read to learn how to work with the control. As mentioned, this is now obsolete and is marked with this comment: “Help files are now stored in the /App_LocalResources folder beneath the module with the following resource key naming convention: ModuleHelp.Text”  &lt;li&gt;&lt;strong&gt;HelpURL&lt;/strong&gt; – This string is the URL for getting help information to show how to use this particular control. The Action menu for a module will include a Help item that uses this property for the link’s URL. When a developer packages a module, each user control can be given a specific Help URL as part of the module definition. The portal’s Super User can override this value to provide a link to alternative documentation.  &lt;li&gt;&lt;strong&gt;IsEditable&lt;/strong&gt; – (ReadOnly) This boolean property checks to see if the page can be edited. DotNetNuke uses this to determine whether or not to show the Action menu when rendering the module on the page. To be editable, the page must be rendered in Edit (&lt;img width=&quot;213&quot; height=&quot;16&quot; title=&quot;Page Edit Mode&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Page Edit Mode&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_27.png&quot; border=&quot;0&quot;&gt;) or Layout mode (&lt;img width=&quot;213&quot; height=&quot;16&quot; title=&quot;Page Layout Mode&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Page Layout Mode&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-951ad58f1b21_1154C-image_30.png&quot; border=&quot;0&quot;&gt;) and the user must have Edit rights to the module.  &lt;li&gt;&lt;strong&gt;ModuleConfiguration&lt;/strong&gt; – This is a ModuleInfo object that describes aspects of the module itself. Think of this as the heart of allowing your module to become “self-aware”.  &lt;li&gt;&lt;strong&gt;ModuleId&lt;/strong&gt; – This is the ID of this particular instance of the module. (Remember, any module extension may be added several times to a portal; each new instance is given a unique ModuleId.)  &lt;li&gt;&lt;strong&gt;ModulePath&lt;/strong&gt; – (ReadOnly, obsolete since DNN 5.0) ModulePath has been replaced by the new ControlPath property. The choice to rename this method lay in the fact that modules can have their individual user controls organized under various subfolders.  &lt;li&gt;&lt;strong&gt;PortalAlias&lt;/strong&gt; – (ReadOnly) This is a PortalAliasInfo object that contains the portal alias information for the page request. This value is pulled from the UserControlBase.PortalSettings property.  &lt;li&gt;&lt;strong&gt;PortalId&lt;/strong&gt; – (ReadOnly) This ID represents the particular portal (website) instance inside the DotNetNuke web application. (DotNetNuke supports the concept of hosting multiple web sites in a single installation.)  &lt;li&gt;&lt;strong&gt;Settings&lt;/strong&gt; – (ReadOnly) This is a Hashtable (key-value) collection of module settings that are specific to your module. It includes both the ModuleSettings and TabModuleSettings.  &lt;li&gt;&lt;strong&gt;TabId&lt;/strong&gt; – (ReadOnly) This is the ID of the tab (page) on which the module resides.  &lt;li&gt;&lt;strong&gt;TabModuleId&lt;/strong&gt; – This ID uniquely identifies a particular instance of the module on a specific page (tab). It is used to distinguish between instances of the module that are shared across different pages in the website.  &lt;li&gt;&lt;strong&gt;UserId&lt;/strong&gt; – (ReadOnly) This is the ID of the logged-in user currently accessing the module/page. This value is pulled from the UserControlBase.PortalSettings property.  &lt;li&gt;&lt;strong&gt;UserInfo&lt;/strong&gt; – (ReadOnly) This object contains all the information about the logged in user, such as their UserId, UserName, and DisplayName. It also includes an array of the names of roles to which the user belongs as well as other information on the user’s profile. For performance reasons, some of the information (such as the Profile data) is “lazy-loaded”, meaning that the values are only retrieved when needed. For anonymous users, this object is set to Nothing (null). This value is pulled from the UserControlBase.PortalSettings property. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;In addition to the above properties, here are the methods of PortalModuleBase.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;HasModulePermission(ByVal PermissionKey As String)&lt;/strong&gt; – (Obsolete as of DNN 5.0) This obsolete method was used to find out if the current user has a particular module permission. Developers are now encourages to call ModulePermissionController.HasModulePermission(ModuleConfiguration.ModulePermissions, PermsissionKey)  &lt;li&gt;&lt;strong&gt;SynchronizeModule()&lt;/strong&gt; – (Obsolete) This method is currently a wrapper for calling ModuleController.SynchronizeModule(ModuleId), which is the recommended call to make. It has been retained for backward compatibility of third-party modules.  &lt;li&gt;&lt;strong&gt;AddActionHandler(ByVal e as ActionEventHandler)&lt;/strong&gt; – This is a method to help in adding an event handler to the module’s parent skin in order to allow the module to respond to click events on the particular menu item. When a developer creates a View user control that implements the IActionable.ModuleActions property, this method can be called along with GetNextActionID() to simplify the creation of Action Menu items for the module.  &lt;li&gt;&lt;strong&gt;GetNextActionID()&lt;/strong&gt; – This is a method that gets the next available ActionID for adding items in the ActionMenu for the module. This method calls ModuleContext.GetNextActionID() to get the value. When a developer creates a View user control that implements the IActionable.ModuleActions property, this method can be called along with AddActionHandler() to simplify the creation of Action Menu items. &lt;br&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h1&gt;Summary&lt;/h1&gt; &lt;p&gt;In the DotNetNuke&#174; framework, modules developers can leverage a number of classes are available as base classes for their user controls. This article took a closer look at &lt;strong&gt;PortalModuleBase&lt;/strong&gt; which is typically used as a base class for View and Edit controls in standard module extensions.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/40/UserControlBase-ndash-Under-the-Hood.aspx&quot;&gt;UserControlBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/41/ModuleSettingsBase-ndash-Under-the-Hood.aspx&quot;&gt;ModuleSettingsBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/42/ModuleInstanceContext-ndash-Under-the-Hood.aspx&quot;&gt;ModuleInstanceContext&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/43/Developing-View-User-Controls-for-your-DotNetNuke-Module.aspx&quot;&gt;View Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/44/Developing-Edit-User-Controls-for-your-DotNetNukereg-Module.aspx&quot;&gt;Edit Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/45/Developing-a-Settings-User-Control-for-your-DotNetNukereg-Module.aspx&quot;&gt;Settings Control&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/46/Working-with-Resource-Files-resx-in-your-DotNetNukereg-Module.aspx&quot;&gt;Resource Files (.resx)&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/49/Building-a-Business-Controller-Class.aspx&quot;&gt;Building a Business Controller Class&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/50/CBOs-ndash-Your-Module-Specific-ldquoInfordquo-Classes.aspx&quot;&gt;CBOs – Your Module-Specific “Info” Classes&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/51/Building-Your-Modulersquos-Data-Access-Layer.aspx&quot;&gt;Building Your Module’s Data Access Layer&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/52/Designing-Database-Tables-for-DNN-Modules.aspx&quot;&gt;Designing Database Tables for DNN Modules&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Under the Hood – Articles on distinct classes in the DotNetNuke framework  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;&lt;a href=&quot;/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase&lt;/a&gt;  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;UserInfo  &lt;li&gt;ModuleInfo  &lt;li&gt;PortalSettings &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;&lt;font color=&quot;#008000&quot;&gt;&lt;strong&gt;Did you find this article helpful? If so, please let us know by filling out a comment below.&lt;/strong&gt;&lt;/font&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;&lt;font color=&quot;#008000&quot;&gt;&lt;strong&gt;If not, please let us know how we can improve this article. Thanks for taking the time to respond!&lt;/strong&gt;&lt;/font&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;","0","8/12/2013 3:35:35 PM"," "," "," "," "
"Working with Resource Files (.resx) in your DotNetNuke® Module","","","Working with Resource Files (.resx) in your DotNetNuke® Module","&lt;p&gt;Almost every DNN module extension will need to include labels, link buttons or other controls that include literal text created by the module developer. This article shows how you can move that hard-coded text into Resource Files. Using Resource Files, you can make your module extension fit snuggly into DotNetNuke’s localization capabilities.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;PortalModuleBase  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;View Controls  &lt;li&gt;Edit Controls  &lt;li&gt;Settings Control  &lt;li&gt;Resource Files (.resx) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;BLL – The Controller Class  &lt;li&gt;CBOs – Your Module-Specific “Info” Classes  &lt;li&gt;DAL – Provider-Specific Implementations &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;","0","8/12/2013 3:36:15 PM"," "," "," "," "
"Developing a Settings User Control for your DotNetNuke® Module","","","Developing a Settings User Control for your DotNetNuke® Module","&lt;p&gt;Part of creating module extensions for the DotNetNuke&#174; framework involves developing a user interface (UI). Often a project uses constants or other metadata which surrounds the module’s content or affects the module’s behaviour. A common way to expose these settings for customization by someone with module Edit permissions is through developing a Settings.ascx user control. This article explains how a Settings user control integrates with the DotNetNuke framework and how you can leverage ModuleSettings and TabModuleSettings in your project.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;PortalModuleBase  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;View Controls  &lt;li&gt;Edit Controls  &lt;li&gt;Settings Control  &lt;li&gt;Resource Files (.resx) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;BLL – The Controller Class  &lt;li&gt;CBOs – Your Module-Specific “Info” Classes  &lt;li&gt;DAL – Provider-Specific Implementations &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;","0","8/12/2013 3:36:36 PM"," "," "," "," "
"Developing Edit User Controls for your DotNetNuke® Module","","","Developing Edit User Controls for your DotNetNuke® Module","&lt;p&gt;Part of creating module extensions for the DotNetNuke&#174; framework involves developing a user interface (UI). Almost every module UI will include a user control to edit the module’s content. This article walks through the key parts to developing an &lt;strong&gt;Edit&lt;/strong&gt; user control for standard module extensions. &lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;PortalModuleBase  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;View Controls  &lt;li&gt;Edit Controls  &lt;li&gt;Settings Control  &lt;li&gt;Resource Files (.resx) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;BLL – The Controller Class  &lt;li&gt;CBOs – Your Module-Specific “Info” Classes  &lt;li&gt;DAL – Provider-Specific Implementations &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;  &lt;h1&gt;Developing Edit User Controls&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt; user controls (for DotNetNuke&#174; module extensions) have one major item in common with View user controls. Both of these controls inherit from PortalModuleBase. Another common characteristic is that the Edit control will have a Resource File for labels, etc. (just like the module’s View control).&lt;/p&gt; &lt;p&gt;Beyond this, a module’s Edit user control will take on different characteristics. First of all, the purpose of the Edit control is different from the View. The View is concerned with displaying or presenting the module’s content. The Edit user control is all about creating or modifying the module’s content. This means that Edit controls are essentially data entry forms for end-users.&lt;/p&gt; &lt;p&gt;Secondly, the View user control is intended to be accessible to any user with the View permission. In contrast, an Edit user control can only be accessed if the logged in user has Edit permissions. Further along these lines, the only way to navigate to an Edit control is through a link that identifies the control in the module (often the link is added to the Action menu of the View control).&lt;/p&gt; &lt;p&gt;Thirdly, Edit user controls tend not to implement any DNN&#174; interfaces. A module’s View will typically implement IActionable, in order to let the DNN framework query the control for items to add to the Action menu (such as a link to the module’s Edit control). Edit controls don’t usually implement IActionable. The purpose of an Edit control is very module-specific, and since there are no direct points of integration that the DNN framework at this level, there are no DNN interfaces to implement.&lt;/p&gt; &lt;p&gt;Lastly, an Edit user control will often make use of some DNN-specific user controls to provide a consistent “look and feel” with other DNN modules. Here are some of the DNN user controls commonly used by developers in their module’s Edit control.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;LabelControl&lt;/strong&gt; – This user control acts as both a label and a help resource for your users. It is a composite control that contains an ASP:Label along with a “Help” icon (&lt;img width=&quot;12&quot; height=&quot;12&quot; title=&quot;DNN Help Icon&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;DNN Help Icon&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/help.gif&quot; border=&quot;0&quot;&gt;) that, when clicked or hovered over, provides additional instructions to your end-user. These label controls are often used in conjuncture with data entry controls, such as a TextBox or CheckBox control.  &lt;li&gt;&lt;strong&gt;TextEditor&lt;/strong&gt; – This user control provides a rich-text editor which provides your users with a &lt;a href=&quot;mp1&quot;&gt;WYSIWYG&lt;/a&gt; way to create and edit HTML-formatted text.  &lt;li&gt;&lt;strong&gt;SectionHeadControl&lt;/strong&gt; – This control provides expand/collapse functionality that allows an end-user to show or hide parts of the Edit form. This is a helpful control whenever your Edit control is large and has natural “sections” for data entry. This is the same control used on Page Settings, Module Settings, Site Settings, etc. to hide advanced settings or settings which are rarely changed.  &lt;li&gt;&lt;strong&gt;HelpButtonControl&lt;/strong&gt; – This is similar to the LabelControl, but without the label. It displays a help icon which contains additional instructions. This is a great control to use alongside LinkButtons or other controls where some text is already present and an ASP:Label would simply be redundant.  &lt;li&gt;&lt;strong&gt;DualListControl&lt;/strong&gt; – This is great for those times when you have a list of “available” items which a user could add or remove from some “assigned” or selected list. This is the same control used in the Site Settings by the Super User when making premium-level modules available to the individual portal.  &lt;li&gt;&lt;strong&gt;ModuleAuditControl&lt;/strong&gt; – If your module tracks information on who created or last updated your module’s data, then this is a handy control for displaying that information.  &lt;li&gt;&lt;strong&gt;UrlControl&lt;/strong&gt; – This control provides a way for a user to select a link to internal or external resources. Internal resources include specific pages (tabs), files, images, or users. If the end-user has permissions to save files, this control can also be used to allow them to upload files and images to the portal. You can see a demo of the UrlControl on the Announcements module’s Edit page.  &lt;li&gt;&lt;strong&gt;UrlTrackingControl&lt;/strong&gt; – This control provides a consistent way to gather tracking information on links in your module’s content for statistical purposes. It is sometimes used alongside the UrlControl. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;The bulk of this article will walk through these key characteristics of Edit controls and show how they are usually implemented when creating DotNetNuke module extensions. Before discussing this, however, it’s important to make note of how Edit user controls are called in a module.&lt;/p&gt; &lt;h2&gt;(Securely) Linking to Your Edit Control&lt;/h2&gt; &lt;p&gt;Navigating among user controls in a module is not quite like navigating between pages in a regular ASP.NET web site. A regular ASP.NET website would handle navigation by simply linking to the other page (which would be a physical file on the site). Not so with DotNetNuke.&lt;/p&gt; &lt;p&gt;In DotNetNuke, the notion of distinct physical pages is an illusion, because the DNN framework intercepts and interprets the hyperlink to build individual pages “on the fly”. There is effectively just one single physical page (~/default.aspx) and individual tabs or pages are distinguished by query string parameters. To understand how it works and how it relates to module development, it’s important to highlight a number of differences about how all the pieces fit together in a DotNetNuke web site compared to regular web sites.&lt;/p&gt; &lt;p&gt;First of all, in DotNetNuke, “pages” (or “tabs”) are made up of modules which are “injected” or loaded into a page by the DNN framework. Secondly, DotNetNuke needs to “know” something about the module in order to “grab” it and load it into a page; part of this information is contained in the ModuleDefinitions table where the module has been “registered” with the DNN framework. Thirdly, modules are made up of many user controls (.ascx), not “regular” pages (.aspx, .html, etc.); these controls must also be “registered” as part of the module’s “definition”.&lt;/p&gt; &lt;p&gt;All of this plays a part in building the links between user controls in a module. The View control, for example, could link to the Edit control by identifying the page (tabid=62), the module instance (mid=397) and the specific user control (ctl=Edit). All of this information would appear in the hyperlink’s query string for the page. Shown in its traditional form, this page request could look like this.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;http://www.Hot4DNN.com/default.aspx?tabid=62&amp;amp;mid=397&amp;amp;ctl=Edit&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Articles&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Because DNN intercepts and interprets all page requests, it has full control on dynamically constructing a page. DotNetNuke also supports the notion of “Friendly URLs”. Therefore, the link in the example above could be written as follows.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;http://www.Hot4DNN.com/tabid/62/mid/397/ctl/Edit/default.aspx&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Articles&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If the page for TabId 62 had the name “Articles”, the link could also have been crafted to be even more “human friendly”, as in the following code snippet.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;a&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;http://www.Hot4DNN.com/Articles/mid/397/ctl/Edit/default.aspx&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Articles&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The DNN framework offers two methods which help in creating these Friendly URLs: NavigateUrl() and EditUrl(). Either of these methods can be used, but the EditUrl() method is commonly used to create links to the Edit user control. For more information on EditUrl() and linking from the View control, see the article on “&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/43/Developing-View-User-Controls-for-your-DotNetNukereg-Module.aspx&quot;&gt;Developing View User Controls&lt;/a&gt;”.&lt;/p&gt; &lt;p&gt;These query strings can also used to provide information to the Edit control about the module’s content. Take, for example, the Announcements module whose View renders a list of announcements. A pencil icon is shown beside existing announcements to allow editors to modify each individual announcement. The link to the Edit control contains a query string value (ItemId) identifying a specific announcement.&lt;/p&gt; &lt;p&gt;In general, it’s a good idea to supply the minimal information needed when creating links between user controls in your module. Part of the reason for this is security. Everything you send over the query string is visible in the address bar as plain text to the end user. That’s why sensitive information (like the UserId) should never be sent between user controls via query strings. (Besides, DNN already handles passing around the user information on page requests using other, more secure, means.)&lt;/p&gt; &lt;p&gt;If you are at all concerned about improving the security of your module, then it can be a good idea to perform extra checking on all the query string parameters that your Edit control is expecting. If anything looks unusual or suspicious (such as trying to edit data that does not exist for the module), you can throw a SecurityException. This will cause a re-direct back to the View of your module.&lt;/p&gt; &lt;p&gt;Another good idea is making use of Try/Catch blocks to handle any problems that might occur when handling the page request. The DNN framework offers a method called ProcessModuleLoadException() to relay any errors to the Event Viewer of the portal. The following code-behind illustrates both a SecurityException and the use of a try/catch.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Load(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.Load&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; (Request.QueryString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ReservationId&quot;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Is&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.ReservationId = Int32.Parse(Request.QueryString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ReservationId&quot;&lt;/span&gt;))&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Controller &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; ReservationController()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Info &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; ReservationInfo = Controller.GetReservation(ReservationId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Info &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Is&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Hmm, that&#39;s odd...&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Throw&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; SecurityException() &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Treat as a potential &quot;hack&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; ... code to process reservation ...&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            itemId = Convert.ToInt32(Common.Utilities.Null.NullInteger)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        ProcessModuleException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2&gt;Inherits PortalModuleBase&lt;/h2&gt; &lt;p&gt;I’ve already written a good bit about PortalModuleBase in the articles on “&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/43/Developing-View-User-Controls-for-your-DotNetNukereg-Module.aspx&quot;&gt;Developing View User Controls&lt;/a&gt;” and “&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase – Under the Hood&lt;/a&gt;”. The following steps will create an Edit control for your module which inherits from PortalModuleBase.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Right-click on your module’s folder and select “Add New Item…”. &lt;br&gt;--&amp;gt; img  &lt;li&gt;In the Add New Item dialog, select the Web User Control template and give it a name. For example, if your module manages Reservations and this control is meant to edit a single reservation, you could call it “EditReservation.ascx”. &lt;br&gt;--&amp;gt; img  &lt;li&gt;In the control’s code-behind, replace the UserControl base class with PortalModuleBase. &lt;br&gt;--&amp;gt; code &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;PortalModuleBase provides over 25 properties and a few methods which give contextual detail for your module, such as the ModuleId, TabId, PortalId, UserId and UserInfo, etc. Some of this information may be of particular interest to your module as you allow the user to edit the module’s content. For example, many modules track the ModuleId as a foreign key column in their database table; this value would not be entered by the user, but is provided by the DotNetNuke framework when your user control inherits from PortalModuleBase.&lt;img width=&quot;284&quot; height=&quot;436&quot; title=&quot;DotNetNuke User Controls&quot; align=&quot;right&quot; style=&quot;margin: 0px 0px 5px 5px; border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;DotNetNuke User Controls&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML2cb95e6.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;h2&gt;DotNetNuke User Controls&lt;/h2&gt; &lt;p&gt;As mentioned already, there are a number of user controls available as part of the DotNetNuke framework for use in your data-entry forms. The DNN user controls are under the “~/controls/” folder in the website.&lt;/p&gt; &lt;p&gt;To use any of these controls to your form, simply view your .ascx file in either Split or Design mode and then drag the desired DNN control from the Solution Explorer onto your form.&lt;/p&gt; &lt;p&gt;This will add the control to the page and place a &amp;lt;%@ Register %&amp;gt; directive near the top of your form. I tend to modify the Register directive’s TagPrefix attribute by changing it to “DNN” rather than the default “uc1”; it makes the following code easier to read later on.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;404&quot; height=&quot;79&quot; title=&quot;Register Directives for DNN User Controls (click to enlarge)&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Register Directives for DNN User Controls&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I should note that the controls discussed here are all user controls (not server controls). DotNetNuke also offers a number of server controls, but I’ll talk about those in another article.&lt;/p&gt; &lt;p&gt;Here’s a short description of the more common DNN user controls, along with instructions on incorporating them into your module’s Edit control. (I’ll walk through a more detailed examination of all the DNN User and Server Controls in a later article.)&lt;/p&gt; &lt;h3&gt;LabelControl&lt;/h3&gt; &lt;p&gt;Since the Edit control is all about letting end-users enter the data for your module’s content, it should be no surprise that you’ll need to provide labels for all the data input controls.&lt;/p&gt; &lt;p&gt;The DNN &lt;strong&gt;LabelControl&lt;/strong&gt; is a perfect choice to provide direction to your end users. It displays both a label and a help icon (&lt;img width=&quot;12&quot; height=&quot;12&quot; title=&quot;Help Icon&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Help Icon&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/help.gif&quot; border=&quot;0&quot;&gt;) which users can hover over or click to get further directions for filling out the form. Best of all, it offers multi-lingual support (also called Localization support) through the use of Resource Files. The resource files provide the actual text for both the label and the help information. (I discuss the Resource Files more in the articles on “&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/43/Developing-View-User-Controls-for-your-DotNetNukereg-Module.aspx&quot;&gt;Developing View User Controls&lt;/a&gt;” and “&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase – Under the Hood&lt;/a&gt;”.) &lt;/p&gt; &lt;p&gt;When you drag the user control onto the form, all you will see is a help icon with an empty space to the right for the label’s text. The following screen shot shows a sample label in the left column of a table with a textbox in the right column.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;362&quot; height=&quot;53&quot; title=&quot;DNN LabelControl&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;DNN LabelControl&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;In the Resource File, you would enter two resource strings: one for the label’s text and the other for the help text. The resource strings would have the same name, but different extensions (“.Text” and “.Help”). The following screen shot shows the Resource File entries for the label control shown above.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;777&quot; height=&quot;257&quot; title=&quot;Resource File&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Resource File&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;To hook this control up to the resource file strings, simply set the ResourceKey attribute to the name of the resource string (without the extension), as shown in the following code snippet.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;DNN:labelcontrol&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SampleLabel&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;rsSampleLabel&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;When the control appears in the browser, the label’s text will be shown and when the user hovers over the help icon, a tooltip will appear with further details.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;332&quot; height=&quot;134&quot; title=&quot;DNN Label Control - Hover for Tooltip&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;DNN Label Control - Hover for Tooltip&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;If the user clicks on the help icon, the help text will be expanded into a panel with a yellow highlight. Notice that the resource string for the help text included HTML tags; these tags are ignored when hovering over the help icon, but are actually rendered in the expanded help panel.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;348&quot; height=&quot;104&quot; title=&quot;DNN Label Control - Clicked&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;DNN Label Control - Clicked&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image6.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;h3&gt;HelpButtonControl&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;HelpButtonControl&lt;/strong&gt; is like the DNN LabelControl but without the label. It’s useful for placing alongside controls which would not normally have an associated label, such as LinkButton controls. Just as the LabelControl’s help text was set using a ResourceKey attribute, the ResourceKey attribute must be set for the HelpButton.&lt;/p&gt; &lt;p&gt;Note that when this control is displayed on the page, there is no ToolTip displayed when you hover over the help icon. Help is displayed only by clicking the help icon. The following sample shows a HelpButton placed right after an &amp;lt;ASP:LinkButton&amp;gt; to provide additional information to the user.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;355&quot; height=&quot;58&quot; title=&quot;HelpButton Sample&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;HelpButton Sample&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The following mark-up shows the ResourceKey setting for this control.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;DNN:helpbuttoncontrol&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SampleHelpButton&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SampleHelp&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3&gt;TextEditor&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;158&quot; title=&quot;TextEditor User Control (click for larger image)&quot; align=&quot;right&quot; style=&quot;margin: 0px 0px 5px 5px; border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;TextEditor User Control&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;The &lt;strong&gt;TextEditor&lt;/strong&gt; user control is all about letting the end user enter rich text (in HTML format) through a &lt;a href=&quot;mp1&quot;&gt;WYSIWYG&lt;/a&gt; editor. The DNN framework allows website owners (Super Users) to swap out the default text editor (&lt;a title=&quot;mp&quot; href=&quot;http://www.telerik.com/products/aspnet-ajax/editor.aspx&quot; target=&quot;_blank&quot;&gt;Telerik RadEditor&lt;/a&gt; since &lt;a href=&quot;http://www.dotnetnuke.com/Community/Blogs/tabid/825/EntryId/2569/Who-Moved-My-Cheese-ndash-DotNetNuke-Edition.aspx&quot; target=&quot;_blank&quot;&gt;DNN 5.4&lt;/a&gt;) for their preferred editor (such as &lt;a title=&quot;mp&quot; href=&quot;http://cutesoft.net/ASP.NET+WYSIWYG+Editor/&quot; target=&quot;_blank&quot;&gt;CuteEditor&lt;/a&gt; or &lt;a title=&quot;mp&quot; href=&quot;http://ckeditor.com/&quot; target=&quot;_blank&quot;&gt;CKEditor&lt;/a&gt;). The DNN TextEditor control acts as a wrapper for the site’s preferred rich text editor. This insulates your module development efforts; when you use the TextEditor user control, your module will use the website’s preferred editor.&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; .Text Property in the code behind &lt;br&gt;&amp;lt;&amp;lt; strip scripts, etc. &lt;br&gt;&amp;lt;&amp;lt; encode/decode html&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; description &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; image &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; steps to add &amp;gt;&amp;gt; 1: register directive; 2: place control; 3: set attributes&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; using in your code-behind &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; integrating with your module &amp;gt;&amp;gt;&lt;/p&gt; &lt;h3&gt;SectionHeadControl&lt;/h3&gt; &lt;p&gt;The DNN &lt;strong&gt;SectionHeadControl&lt;/strong&gt; makes it easy for you to specify collapsible regions in your Edit control. This is especially helpful for modules that have complex content or a lot of data entry on the form. It helps with presenting a cleaner, less cluttered user interface.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;464&quot; height=&quot;155&quot; title=&quot;SectionHeadControl&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;SectionHeadControl&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;To use this control, enclose the content you want to collapse into a &amp;lt;div&amp;gt; or &amp;lt;table&amp;gt;. It’s important to add an ID and runat=”server” attribute to the table or div, so that the SectionHeadControl can set its visibility on the server and through JavaScript in the browser. To associate the SectionHeadControl with your &amp;lt;div&amp;gt; or &amp;lt;table&amp;gt;, set the Section property to the ID of the &amp;lt;div&amp;gt; or &amp;lt;table&amp;gt;. Here’s the code that produced the above sample image.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;DNN:sectionheadcontrol&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SampleSectionHead&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SectionHead&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Section&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DivSection&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;IncludeRule&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;true&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;IsExpanded&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;false&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DivSection&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Here, you can place a group of controls to gather related data.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;DNN:labelcontrol&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblFirstName&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;GivenName&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:TextBox&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;FirstName&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;DNN:labelcontrol&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblLastName&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Surname&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:TextBox&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;LastName&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;DNN:labelcontrol&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblAge&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Age&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:TextBox&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Age&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Like many of the user controls available in DotNetNuke, the SectionHeadControl also uses the ResourceKey attribute. For this control, the ResourceKey’s text will display next to the expand (&lt;img width=&quot;12&quot; height=&quot;15&quot; title=&quot;Default Picture for MaxImageUrl&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Default Picture for MaxImageUrl&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/max.gif&quot; border=&quot;0&quot;&gt;) and collapse (&lt;img width=&quot;12&quot; height=&quot;15&quot; title=&quot;Default Picture for MinImageUrl&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Default Picture for MinImageUrl&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/min.gif&quot; border=&quot;0&quot;&gt;) icons. There are a number of other attributes or properties which can be used for this control.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Section&lt;/strong&gt; – This is the ID of the &amp;lt;div&amp;gt; or &amp;lt;table&amp;gt; you want to collapse.  &lt;li&gt;&lt;strong&gt;IncludeRule&lt;/strong&gt; – When set to true, this will display a horizontal rule just below the SectionHeadControl.  &lt;li&gt;&lt;strong&gt;IsExpanded&lt;/strong&gt; – Set this to false if you want the section collapsed by default; otherwise, set it to true if you want the section expanded.  &lt;li&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; – You can add your own JavaScript to be fired when the Max/Min image is clicked. This might be helpful if you want something other than the default expand/collapse action of the SectionHeadControl. For example, you may want to include client-script that will add a timer to the expand/collapse effect.  &lt;li&gt;&lt;strong&gt;MaxImageUrl&lt;/strong&gt; – You can set the URL for the image shown for the action that expands the section. By default, the MaxImageUrl is set to “~/images/plus.gif”.  &lt;li&gt;&lt;strong&gt;MinImageUrl&lt;/strong&gt; – You can set your own custom image for the action that collapses the section. By default, the MinImageUrl is set to “~/images/minus.gif”. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; description &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; image &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; steps to add &amp;gt;&amp;gt; 1: register directive; 2: place control; 3: set attributes&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; using in your code-behind &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; integrating with your module &amp;gt;&amp;gt;&lt;/p&gt; &lt;h3&gt;DualListControl&lt;/h3&gt; &lt;p&gt;&amp;lt;&amp;lt; description &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; image &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; steps to add &amp;gt;&amp;gt; 1: register directive; 2: place control; 3: set attributes&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; using in your code-behind &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; integrating with your module &amp;gt;&amp;gt;&lt;/p&gt; &lt;h3&gt;ModuleAuditControl&lt;/h3&gt; &lt;p&gt;&amp;lt;&amp;lt; description &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; image &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; steps to add &amp;gt;&amp;gt; 1: register directive; 2: place control; 3: set attributes&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; using in your code-behind &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; integrating with your module &amp;gt;&amp;gt;&lt;/p&gt; &lt;h3&gt;UrlControl&lt;/h3&gt; &lt;p&gt;&amp;lt;&amp;lt; description &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; image &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; steps to add &amp;gt;&amp;gt; 1: register directive; 2: place control; 3: set attributes&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; using in your code-behind &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; integrating with your module &amp;gt;&amp;gt;&lt;/p&gt; &lt;h3&gt;UrlTrackingControl&lt;/h3&gt; &lt;p&gt;&amp;lt;&amp;lt; description &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; image &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; steps to add &amp;gt;&amp;gt; 1: register directive; 2: place control; 3: set attributes&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; using in your code-behind &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;lt;&amp;lt; integrating with your module &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;[mp1]&lt;/p&gt; &lt;p&gt;&lt;strong&gt;WYSIWYG&lt;/strong&gt; – “What You See Is What You Get”&lt;/p&gt; &lt;p&gt;[/mp1]&lt;/p&gt;","0","8/12/2013 3:37:20 PM"," "," "," "," "
"Developing View User Controls for your DotNetNuke® Module","","","Developing View User Controls for your DotNetNuke® Module","&lt;p&gt;Part of creating module extensions for the DotNetNuke&#174; framework involves developing a user interface (UI). Almost every module UI will include a user control to view the module’s content. This article walks through three key pieces to developing a &lt;strong&gt;View&lt;/strong&gt; user control for standard module extensions: Inheriting from &lt;em&gt;PortalModuleBase&lt;/em&gt;, implementing &lt;em&gt;IActionable&lt;/em&gt; and using &lt;em&gt;Resource Files&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/40/UserControlBase-ndash-Under-the-Hood.aspx&quot;&gt;UserControlBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/41/ModuleSettingsBase-ndash-Under-the-Hood.aspx&quot;&gt;ModuleSettingsBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/42/ModuleInstanceContext-ndash-Under-the-Hood.aspx&quot;&gt;ModuleInstanceContext&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/43/Developing-View-User-Controls-for-your-DotNetNuke-Module.aspx&quot;&gt;View Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/44/Developing-Edit-User-Controls-for-your-DotNetNukereg-Module.aspx&quot;&gt;Edit Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/45/Developing-a-Settings-User-Control-for-your-DotNetNukereg-Module.aspx&quot;&gt;Settings Control&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/46/Working-with-Resource-Files-resx-in-your-DotNetNukereg-Module.aspx&quot;&gt;Resource Files (.resx)&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/49/Building-a-Business-Controller-Class.aspx&quot;&gt;Building a Business Controller Class&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/50/CBOs-ndash-Your-Module-Specific-ldquoInfordquo-Classes.aspx&quot;&gt;CBOs – Your Module-Specific “Info” Classes&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/51/Building-Your-Modulersquos-Data-Access-Layer.aspx&quot;&gt;Building Your Module’s Data Access Layer&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/52/Designing-Database-Tables-for-DNN-Modules.aspx&quot;&gt;Designing Database Tables for DNN Modules&lt;/a&gt;&amp;nbsp; &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;  &lt;h1&gt;Developing View User Controls&lt;/h1&gt; &lt;p&gt;DotNetNuke&#174; module extensions typically fill the role of managing specific types of content. For example, the HTML module is responsible for managing general-purpose HTML content. Likewise, the Announcements module is meant to manage (surprise, surprise) announcements; this module effectively defines an “announcement” as being made up of a title, a description, and some optional links and start/end dates.&lt;/p&gt; &lt;p&gt;Three types of user controls (.ascx) act as the central players in the user interface for DNN&#174; module extensions.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;View&lt;/strong&gt; – This acts to display or present the module’s content to users with permission to view the module.  &lt;li&gt;&lt;strong&gt;Edit&lt;/strong&gt; – This provides a means to create or modify the module’s content. It can only be accessed by users with permission to edit the module.  &lt;li&gt;&lt;strong&gt;Settings&lt;/strong&gt; – This allows users with edit permissions to manage settings that are unique to the type of module. These module-specific settings typically control aspects of the module’s behaviour in managing or presenting the module’s content. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;This article walks through three key pieces to include when creating a &lt;strong&gt;View&lt;/strong&gt; user control for your module. In general, a typical View user control will a) inherit from PortalModuleBase, b) implement IActionable, and c) use a Resource File (.resx) in place of hard-coded strings in the UI.&lt;/p&gt; &lt;h2&gt;Inherits PortalModuleBase&lt;/h2&gt; &lt;p&gt;Typically, an ASP.NET user control will inherit from &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.web.ui.usercontrol.aspx&quot; target=&quot;_blank&quot;&gt;System.Web.UI.UserControl&lt;/a&gt;. This is fine when creating user controls for an ordinary website. Because the DotNetNuke framework is much more than an ordinary website, a module’s user controls will typically inherit from a class called &lt;strong&gt;PortalModuleBase&lt;/strong&gt; (which is in the DotNetNuke.Entities.Modules namespace).&lt;/p&gt; &lt;p&gt;To create your view control, simply follow these steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Right-click on your module’s folder and select “Add New Item…”. &lt;br&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;137&quot; height=&quot;54&quot; title=&quot;Add New Item (click for a larger image)&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Add New Item&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the Add New Item dialog, select the Web User Control template and give it a name. For example, if your module manages Reservations, you could call it “ViewReservations.ascx”.&amp;nbsp; &lt;br&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML22904d.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;93&quot; height=&quot;54&quot; title=&quot;Add New Item - ViewReservations.ascx (click for a larger image)&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Add New Item - ViewReservations.ascx&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML22904d_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the control’s code-behind, replace the UserControl base class with PortalModuleBase. (Don’t forget to include the DotNetNuke.Entities.Modules namespace.) &lt;br&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;Partial &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; ViewReservations&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Inherits&lt;/span&gt; DotNetNuke.Entities.Modules.PortalModuleBase &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; System.Web.UI.UserControl&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Class&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;&lt;img width=&quot;253&quot; height=&quot;734&quot; title=&quot;image&quot; align=&quot;right&quot; style=&quot;margin: 0px 0px 5px 5px; border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;image&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;PortalModuleBase has over 25 properties and a few methods. These properties provide information about the portal in which your module resides. This includes information about the page (or Tab) into which the module has been loaded, the portal instance that holds the page, and the user who has made the page request. Because your View control inherits from PortalModuleBase, all this information is readily accessible as you develop your module, and that greatly simplifies your efforts.&lt;/p&gt; &lt;p&gt;For example, if part of your View module needs the DisplayName of the user, you can get it by simply calling UserInfo.DisplayName in your code.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;ReservationName.Text = UserInfo.DisplayName&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Here’s a short list of some notable properties you get from PortalModuleBase.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;EditMode&lt;/strong&gt; – (ReadOnly) This boolean value is set to true if the current user is an administrator of the page (and therefore has Edit permissions on the module).  &lt;li&gt;&lt;strong&gt;IsEditable&lt;/strong&gt; – (ReadOnly) This boolean property checks to see if the page can be edited. DotNetNuke uses this to determine whether or not to show the Action menu when rendering the module on the page. To be editable, the page must be rendered in Edit or Layout mode and the user must have Edit rights to the module.  &lt;li&gt;&lt;strong&gt;LocalResourceFile&lt;/strong&gt; – This is the complete path to the resource file (.resx) for the user control.  &lt;li&gt;&lt;strong&gt;ModuleId&lt;/strong&gt; – This is the ID of this particular instance of the module. (Remember, any module extension may be added several times to a portal; each new instance is given a unique ModuleId.)  &lt;li&gt;&lt;strong&gt;PortalId&lt;/strong&gt; – This ID represents the particular portal (website) instance inside the DotNetNuke web application. (DotNetNuke supports the concept of hosting multiple web sites in a single installation.)  &lt;li&gt;&lt;strong&gt;Settings&lt;/strong&gt; – This is a Hashtable (key-value) collection of module settings that are specific to your module. It includes both the ModuleSettings and TabModuleSettings.  &lt;li&gt;&lt;strong&gt;TabId&lt;/strong&gt; – This is the ID of the tab (page) on which the module resides.  &lt;li&gt;&lt;strong&gt;TabModuleId&lt;/strong&gt; – The TabModuleId differs from the ModuleId in that the TabModuleId is unique for modules that are “shared” (or “mirrored”) between tabs.  &lt;li&gt;&lt;strong&gt;UserId&lt;/strong&gt; – This is the ID of the logged-in user currently accessing the module/page.  &lt;li&gt;&lt;strong&gt;UserInfo&lt;/strong&gt; – This object contains all the information about the logged in user, such as their UserId, UserName, and DisplayName. It also includes an array of the names of roles to which the user belongs as well as other information on the user’s profile. For performance reasons, some of the information (such as the Profile data) is “lazy-loaded”, meaning that the values are only retrieved when needed. For anonymous users, this object is set to Nothing (null). &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;PortalModuleBase itself ultimately winds up inheriting from System.Web.UI.UserControl (as do all user controls), but it adds to your user control a wealth of information about the DNN framework in which your module resides. There is a lot to this base class (and the UserControlBase that it inherits from), and it would take too much space to discuss all it offers. You can learn more about PortalModuleBase (and UserControlBase) in the links at the end of this article.&lt;/p&gt; &lt;h2&gt;Implements IActionable&lt;/h2&gt; &lt;p&gt;&lt;img width=&quot;298&quot; height=&quot;115&quot; title=&quot;image&quot; align=&quot;right&quot; style=&quot;margin: 0px 0px 5px 5px; border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;image&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;IActionable&lt;/strong&gt; is an optional interface (from the DotNetNuke.Entities.Modules namespace) which defines a single read only property called &lt;strong&gt;ModuleActions&lt;/strong&gt;. This property is called by the DotNetNuke framework in order to get your module’s custom “actions” to display in the Actions menu.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;190&quot; height=&quot;209&quot; title=&quot;Action Menu&quot; align=&quot;left&quot; style=&quot;margin: 5px 10px 5px 0px; border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Action Menu&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;An “action” is simply something that can be performed on or by a module, such as deleting the module or moving it around on the page. These are displayed as links in the module’s Actions menu. The Actions menu is presented whenever the user has Edit permissions on that module. A number of actions are pre-defined by the DNN framework: moving the module on the page, deleting it, or editing its settings. You can add your own module-specific actions to this menu by implementing IActionable on your View user control.&lt;/p&gt; &lt;p&gt;Your module implements this interface by building a &lt;strong&gt;ModuleActionCollection&lt;/strong&gt; for the ModuleActions property. This collection holds information about the action you want to support, such as navigating to other user controls in your module. You can add an item to this collection when you want a link to a user control to appear in the Actions menu. The order in which you add items will affect the order in which they are displayed in the Actions menu (above those pre-defined through the PortalModuleBase base class).&lt;/p&gt; &lt;p&gt;To support IActionable, follow these steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Modify your class definition to state that you are implementing IActionable. (Remember to import the DotNetNuke.Entities.Modules namespace.)&amp;nbsp; &lt;br&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;Partial &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; ViewReservations&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Inherits&lt;/span&gt; DotNetNuke.Entities.Modules.PortalModuleBase&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; DotNetNuke.Entities.Modules.IActionable&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;li&gt;Code a ReadOnly property called ModuleActions.&amp;nbsp; &lt;br&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ModuleActions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; ModuleActionCollection &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; IActionable.ModuleActions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Add ModuleAction objects to a new ModuleActionCollection&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Property&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;li&gt;Add items to the ModuleActionCollection of your property.&amp;nbsp; &lt;br&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ModuleActions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; ModuleActionCollection &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; IActionable.ModuleActions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Actions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; ModuleActionCollection()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        Actions.Add(GetNextActionID(), Localization.GetString(ModuleActionType.AddContent, LocalResourceFile), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    ModuleActionType.AddContent, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, EditUrl(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;, SecurityAccessLevel.Edit, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; Actions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;Items in the ModuleActionCollection are objects of type DotNetNuke.Entities.Modules.Actions.&lt;strong&gt;ModuleAction&lt;/strong&gt;. Each ModuleAction object has the following properties.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt; – A ModuleAction can itself contain a ModuleActionCollection. It’s helpful to think of a ModuleAction as a menu item that may have sub-menu items. Together, these form a hierarchy of menu items.  &lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt; – An Integer that uniquely identifies the ModuleAction and that is used to form the parent/child relationships in the Action Menu hierarchy.  &lt;li&gt;&lt;strong&gt;Visible&lt;/strong&gt; – A Boolean that determines if the action should be displayed in the Action Menu. A value of false means that it’s always hidden. A value of true means that it &lt;em&gt;might&lt;/em&gt; be displayed, as long as the user fits the security access level.  &lt;li&gt;&lt;strong&gt;Secure&lt;/strong&gt; – This is an enumerated value of type DotNetNuke.Security.SecurityAccessLevel. It’s used to identify the level of access rights required to view and use this ModuleAction. These are the possible values: ControlPanel, SkinObject, Anonymous, View, Edit, Admin, and Host.  &lt;li&gt;&lt;strong&gt;CommandName&lt;/strong&gt; – A string that identifies the ModuleAction. When a user chooses a ModuleAction from the Action menu, a “module action event” is generated and all the information about the event is packaged in this ModuleAction object. This event is captured by the DotNetNuke framework, but you can elect to handle the event in your own module. For example, if you wanted to provide sorting in your module, you could use “Sort” as the command name; then you could handle action events and check the CommandName for the value “Sort”.  &lt;li&gt;&lt;strong&gt;CommandArgument&lt;/strong&gt; – A string that holds an optional argument value that can be examined when handling the action event. It works in conjuncture with the CommandName property. For example, if your module supported sorting (where CommandName equals “Sort”), the CommandArgument might have a string indicating the direction (“Ascending” or “Descending”) or the name of some property to sort by (such as “ReservationTime” or “Name” for a ReservationInfo object).  &lt;li&gt;&lt;strong&gt;Title&lt;/strong&gt; – A string value that is shown in the menu when the ModuleAction is displayed to the user.  &lt;li&gt;&lt;strong&gt;Icon&lt;/strong&gt; – The URL of an icon image to show alongside the Title in the action menu.  &lt;li&gt;&lt;strong&gt;Url&lt;/strong&gt; – An address that is used for redirecting the page request when this item is selected from the action menu. If this property has a value, then a Module Action Event is not raised. If no value is supplied for this, then an action event is raised which can then be handled by your module.  &lt;li&gt;&lt;strong&gt;ClientScript&lt;/strong&gt; – This is a string containing Javascript that can be run in the client’s browser when the menu item has been selected. It’s run before the postback, and the client script can cancel the postback event by returning false.  &lt;li&gt;&lt;strong&gt;UseActionEvent&lt;/strong&gt; – This Boolean value indicates whether or not to raise a Menu Action Event when this ModuleAction item is selected by the user. When it is set to true, the action event is raised (even if the Url property is set). If UseActionEvent is false and Url is not empty, then no action event is triggered; if Url is empty, a menu action event is always raised.  &lt;li&gt;&lt;strong&gt;NewWindow&lt;/strong&gt; – This Boolean value indicates whether the action should be performed in or targeted to a new browser window. &lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;Coding the ModuleActions Property&lt;/h3&gt; &lt;p&gt;The ModuleActionCollection.Add() method supports three overloaded versions which you can call to add items to the collection. One version allows you to add a ModuleAction object (which you would create before calling the Add method). The other two versions of Add() allow you to supply values for the individual ModuleAction properties; these versions then internally create a ModuleAction object before including the item in the collection.&lt;/p&gt; &lt;p&gt;A common module action which developers add through the View user control is a link to their user control for creating or editing the module’s data. In its most simple form, this requires values for the ID, Title, CommandName, Url, Secure, and Visible properties of the ModuleAction object. Here is a sample of how it could be done by creating the ModuleAction object.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Actions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; ModuleActionCollection()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; EditAction &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; ModuleAction(GetNextActionID())&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;EditAction.Title = Localization.GetString(ModuleActionType.AddContent, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;EditAction.CmdName = ModuleActionType.AddContent&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;EditAction.Url = EditUrl()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;EditAction.Secure = SecurityAccessLevel.Edit&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;EditAction.Visible = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Visible actually defaults to true, so this line isn&#39;t strictly needed&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;Actions.Add(EditAction)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The following code produces the same results as the sample above, but it uses an overloaded version of the Add method. Notice that a number of “dummy” values are supplied for the parameters that aren’t required for creating the link to the Edit user control.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Actions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; ModuleActionCollection()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;Actions.Add(GetNextActionID(), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            Localization.GetString(ModuleActionType.AddContent, LocalResourceFile), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            ModuleActionType.AddContent, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            EditUrl(), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            SecurityAccessLevel.Edit, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Notice how the code samples above make use the DNN framework to supply the values for the ModuleAction object.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The ModuleAction’s &lt;strong&gt;ID&lt;/strong&gt; is generated by calling the GetNextActionID() method of the View control (this method is defined in PortalModuleBase).  &lt;li&gt;The &lt;strong&gt;Title&lt;/strong&gt; is pulled from the View’s resource file (.resx) through the GetString() method of the DotNetNuke.Services.Localization class. GetString() requires two values for it’s parameter list; again, the DNN framework is used to help supply the values.  &lt;ul&gt; &lt;li&gt;The first value is a string that acts as a key to look up the desired text in the resource file. DotNetNuke provides constants for common keys related to actions; these are in the ModuleActionType class, located in the DotNetNuke.Entities.Modules.Actions namespace. The value for the ModuleActionType.AddContent constant is “AddContent.Action”.  &lt;li&gt;The second parameter’s value is a string that provides the path to the resource file. This path is generated through the View’s LocalResourceFile property (as defined in PortalModuleBase). &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;The &lt;strong&gt;CommandName&lt;/strong&gt; value also uses the constant ModuleActionType.AddContent.  &lt;li&gt;The &lt;strong&gt;Url&lt;/strong&gt; is generated by calling the EditUrl() method from PortalModuleBase. This method is overloaded (you can read more about it in the article on PortalModuleBase), and the version used above assumes that your Edit user control is registered in the DNN portal under the key “Edit”. It also assumes that your Edit user control does not expect any query string parameters.  &lt;li&gt;The &lt;strong&gt;Secure&lt;/strong&gt; property is set to SecurityAccessLevel.Edit which requires the user to have Edit rights in order to view the ModuleAction. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;There are many more ways to create and use ModuleAction objects in your modules. For more information on those, see the links at the end of this article for the IActionable interface.&lt;/p&gt; &lt;h2&gt;View Resource Files (.resx)&lt;/h2&gt; &lt;p&gt;Because most user controls involve some literal text that is shown to the user, it’s a common practice to include a Resource File (with the extension .resx) in your module. A resource file is simply an XML document that is used to store your user control’s literal text; the text is managed as a type of dictionary with key/value pairs. Resource files make it easier for website owners to support your module in languages other than English, because DotNetNuke supports modifying or adding resource files (individually or as “language packs”) from within the browser.&lt;/p&gt; &lt;p&gt;Typically, each individual user control will have a resource file. This file will have the same name as the user control, but with an added “.resx” extension; therefore, if your View is called “ViewReservations.ascx”, the resource file will be called “ViewReservations.ascx.resx”. These are stored in a folder called App_LocalResources.&lt;/p&gt; &lt;p&gt;If you don’t already have a resource file in your module’s folder, follow these steps to create one.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;In Visual Studio’s Solution Explorer, right-click on your module’s folder and select “App_LocalResources” under “Add ASP.NET Folder”.&amp;nbsp; &lt;br&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;136&quot; height=&quot;54&quot; title=&quot;Add ASP.NET Folder (click for larger image)&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Add ASP.NET Folder&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Right-click the App_LocalResources folder and select “Add New Item…”.&amp;nbsp; &lt;br&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;109&quot; height=&quot;54&quot; title=&quot;Add New Item (click for larger image)&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Add New Item&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the Add New Item dialog, select the Resource File template and give it a name that matches your corresponding user control.&amp;nbsp; &lt;br&gt;&lt;a href=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML470770.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img width=&quot;93&quot; height=&quot;54&quot; title=&quot;Add New Items - ViewReservations.ascx.resx (click for a larger image)&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Add New Items - ViewReservations.ascx.resx&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML470770_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;When you open your resource file in Visual Studio, you will see a three-column table representing the strings in the file. The first column is the key that is used to reference the literal string (which is in the second column). The last column is for comments, in case you want to make some notes about how and where the literal string is used in your module.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;575&quot; height=&quot;257&quot; title=&quot;Resource File&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Resource File&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML4a0139.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;DotNetNuke uses some common conventions in the naming of resource file keys. Each key is expected to end with an extension, to help identify its purpose. If you supply a key name without an extension, then DotNetNuke will append the “.Text” extension to you key prior to searching the resource file.&lt;/p&gt; &lt;p&gt;DotNetNuke uses the following key extensions, which you can also incorporate in your module. They loosely follow some common property names for ASP.Net server controls.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;Keyname&lt;/em&gt;.&lt;strong&gt;Text&lt;/strong&gt; – Represents a string used for a common purpose, such as the  &lt;li&gt;&lt;em&gt;Keyname&lt;/em&gt;.&lt;strong&gt;Help&lt;/strong&gt; – Used mostly in conjuncture with the DNN:Label control, which supplies a help icon (&lt;img width=&quot;12&quot; height=&quot;12&quot; title=&quot;Help icon&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Help icon&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/help.gif&quot; border=&quot;0&quot;&gt;) and tooltip.  &lt;li&gt;&lt;em&gt;Keyname&lt;/em&gt;.&lt;strong&gt;Tooltip&lt;/strong&gt; – Used for a control’s Tooltip property.  &lt;li&gt;&lt;em&gt;Keyname&lt;/em&gt;.&lt;strong&gt;Action&lt;/strong&gt; – Used to represent the Title property of a ModuleAction item shown in an actions menu.  &lt;li&gt;&lt;em&gt;Keyname&lt;/em&gt;.&lt;strong&gt;Confirm&lt;/strong&gt; – Text that is displayed in a Javascript’s confirmation dialog (such as a dialog to confirm deleting a module).&lt;!--EndFragment--&gt;  &lt;li&gt;&lt;em&gt;Keyname&lt;/em&gt;.&lt;strong&gt;Error&lt;/strong&gt; – Text that is displayed as an error message. This might be for a label or, more commonly, for one of the ASP.NET validation controls.  &lt;li&gt;&lt;em&gt;Keyname&lt;/em&gt;.&lt;strong&gt;Detail&lt;/strong&gt; – Text that gives more detail about an error message. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;It’s helpful to note that these extensions aren’t rigidly tied to any type of functionality; your module will not “break” if you, for example, use a key with the “.Help” extension for a control’s Tooltip property. You can also use or make up extension names that are not in this list. These are more like guidelines or indicators, similar to how programmers (in the old days) used to prefix integer variables with a lower-case “n” or use “db” to prefix Double variables names (see &lt;a href=&quot;http://en.wikipedia.org/wiki/Hungarian_notation&quot; target=&quot;_blank&quot;&gt;Hungarian Notation&lt;/a&gt; in Wikipedia).&lt;/p&gt; &lt;p&gt;To edit or add items in the resource file, simply type in the name of the key (without spaces) in the first column of a row and then enter the literal string you want to use for your UI in the second column. (Note: Visual Studio might issue a warning about using the extension as part of the key name; you can safely ignore this warning. See &lt;a href=&quot;http://connect.microsoft.com/VisualStudio/feedback/details/92651/the-resource-name-xxx-yyy-is-not-a-valid-identifier&quot; target=&quot;_blank&quot;&gt;this note for details&lt;/a&gt;.)&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;575&quot; height=&quot;262&quot; title=&quot;Resource File - More Items&quot; style=&quot;border: 0px currentcolor; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;&quot; alt=&quot;Resource File - More Items&quot; src=&quot;http://hot4dnn.dynamicgeneration.com/Portals/57/Users/010/10/10/SNAGHTML5f819f.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;There are a couple of ways to use these resource strings in your module’s user control. First, you can simply add a ResourceKey attribute to the controls in your .ascx file, as in the following example. When DotNetNuke injects your module into a page, it will examine all the server-side controls to see if it has a ResourceKey attribute. If it does, then the DNN framework will search the resource file using that resource key and inject the text that it finds into the Text property of the control.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Headwaiter&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ResourceKey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Headwaiter&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;Note: The ResourceKey value is case-sensitive. It must match the spelling in the Resource File, otherwise DotNetNuke’s Localization components will return an empty string.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Another way is to load the resource string from your user control’s code-behind. DotNetNuke supplies a class named Localization (in the DotNetNuke.Services.Localization namespace) that provides methods to extract the string. The following example gets a string for a label using the Localization.GetString() method.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;Headwaiter.Text = Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Headwaiter.Text&quot;&lt;/span&gt;, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you need more flexibility in your literal strings, you can try using placeholders in the resource file strings. For example, the following code extracts the text “Reservation confirmation for {0}”, where the “{0}” is a placeholder for a person’s last name. After getting the text from the resource file, it can be further processed to provide meaningful output.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;ConfirmationMessage.Text = Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ReservationConfirmation.Text&quot;&lt;/span&gt;, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;ConfirmationMessage.Text = Confirmation.Text.Replace(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;{0}&quot;&lt;/span&gt;, GuestName)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;h1&gt;Summary&lt;/h1&gt; &lt;p&gt;These three pieces – inheriting from &lt;em&gt;PortalModuleBase&lt;/em&gt;, implementing &lt;em&gt;IActionable&lt;/em&gt; and using &lt;em&gt;Resource Files&lt;/em&gt; – are only the starting points to creating &lt;strong&gt;View&lt;/strong&gt; user controls for your DotNetNuke module. The DotNetNuke API is a rich resource of information and tools which can be leveraged in building your module’s functionality.&lt;/p&gt; &lt;p&gt;For more information on DotNetNuke module development basics, take a look at the following links to other articles in this series.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/40/UserControlBase-ndash-Under-the-Hood.aspx&quot;&gt;UserControlBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/41/ModuleSettingsBase-ndash-Under-the-Hood.aspx&quot;&gt;ModuleSettingsBase&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/42/ModuleInstanceContext-ndash-Under-the-Hood.aspx&quot;&gt;ModuleInstanceContext&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/43/Developing-View-User-Controls-for-your-DotNetNuke-Module.aspx&quot;&gt;View Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/44/Developing-Edit-User-Controls-for-your-DotNetNukereg-Module.aspx&quot;&gt;Edit Controls&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/45/Developing-a-Settings-User-Control-for-your-DotNetNukereg-Module.aspx&quot;&gt;Settings Control&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/46/Working-with-Resource-Files-resx-in-your-DotNetNukereg-Module.aspx&quot;&gt;Resource Files (.resx)&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/49/Building-a-Business-Controller-Class.aspx&quot;&gt;Building a Business Controller Class&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/50/CBOs-ndash-Your-Module-Specific-ldquoInfordquo-Classes.aspx&quot;&gt;CBOs – Your Module-Specific “Info” Classes&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/51/Building-Your-Modulersquos-Data-Access-Layer.aspx&quot;&gt;Building Your Module’s Data Access Layer&lt;/a&gt;  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/52/Designing-Database-Tables-for-DNN-Modules.aspx&quot;&gt;Designing Database Tables for DNN Modules&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Under the Hood – Articles on distinct classes in the DotNetNuke framework  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;&lt;a href=&quot;http://www.hot4dnn.com/Articles/tabid/62/articleType/ArticleView/articleId/47/PortalModuleBase-ndash-Under-the-Hood.aspx&quot;&gt;PortalModuleBase&lt;/a&gt;  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;UserInfo  &lt;li&gt;ModuleInfo  &lt;li&gt;PortalSettings &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;","0","8/12/2013 3:38:56 PM"," "," "," "," "
"ModuleInstanceContext – Under the Hood","","","ModuleInstanceContext – Under the Hood","&lt;p&gt;In the DotNetNuke&#174; framework, the &lt;strong&gt;ModuleInstanceContext&lt;/strong&gt; class was introduced in DNN 5.0 to provide information on the context in which a given module resides. The IModuleControl defines a property called ModuleContext whose type is ModuleInstanceContext. This article takes a closer look at the information that &lt;strong&gt;ModuleInstanceContext&lt;/strong&gt; provides to module developers.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;PortalModuleBase  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;View Controls  &lt;li&gt;Edit Controls  &lt;li&gt;Settings Control  &lt;li&gt;Resource Files (.resx) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;BLL – The Controller Class  &lt;li&gt;CBOs – Your Module-Specific “Info” Classes  &lt;li&gt;DAL – Provider-Specific Implementations &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;","0","8/12/2013 3:39:35 PM"," "," "," "," "
"ModuleSettingsBase – Under the Hood","","","ModuleSettingsBase – Under the Hood","&lt;p&gt;In the DotNetNuke&#174; framework, modules developers can leverage a number of classes are available as base classes for their user controls. This article takes a closer look at &lt;strong&gt;ModuleSettingsBase&lt;/strong&gt; which is acts as a base class for the Settings user control in standard module extensions.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;PortalModuleBase  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;View Controls  &lt;li&gt;Edit Controls  &lt;li&gt;Settings Control  &lt;li&gt;Resource Files (.resx) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;BLL – The Controller Class  &lt;li&gt;CBOs – Your Module-Specific “Info” Classes  &lt;li&gt;DAL – Provider-Specific Implementations &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;","0","8/12/2013 3:40:07 PM"," "," "," "," "
"UserControlBase – Under the Hood","","","UserControlBase – Under the Hood","&lt;p&gt;&lt;img width=&quot;152&quot; height=&quot;74&quot; title=&quot;UserControlBase&quot; align=&quot;left&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; margin: 0px 5px 5px 0px; display: inline;&quot; alt=&quot;UserControlBase&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-UserControlBaseUndertheHood_A03-image_3.png&quot; border=&quot;0&quot;&gt;In the DotNetNuke&#174; framework, modules developers can leverage a number of classes are available as base classes for their user controls. This article takes a closer look at &lt;strong&gt;UserControlBase&lt;/strong&gt; which extends the System.Web.UI.UserControl class to provide PortalSettings info to your module.&lt;/p&gt; &lt;p&gt;This article is part of a suite of articles on module development basics.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Module Extensions – Building the UI  &lt;ul&gt; &lt;li&gt;UserControlBase  &lt;li&gt;PortalModuleBase  &lt;li&gt;ModuleSettingsBase  &lt;li&gt;ModuleInstanceContext  &lt;li&gt;View Controls  &lt;li&gt;Edit Controls  &lt;li&gt;Settings Control  &lt;li&gt;Resource Files (.resx) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Module Extensions – Building the Back End  &lt;ul&gt; &lt;li&gt;BLL – The Controller Class  &lt;li&gt;CBOs – Your Module-Specific “Info” Classes  &lt;li&gt;DAL – Provider-Specific Implementations &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt; &lt;br&gt; &lt;p&gt;&lt;strong&gt;UserControlBase&lt;/strong&gt; is at the top of a hierarchy of base classes used by module developers when they create their user controls. It is located in the DotNetNuke.Framework namespace. This class extends the System.Web.UI.UserControl class and is the first part of the hierarchy to bring information about the portal framework to the developer’s UI. Here are the commonly used classes in the UI hierarchy.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;426&quot; height=&quot;523&quot; title=&quot;DotNetNuke UI Base Classes&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;DotNetNuke UI Base Classes&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-UserControlBaseUndertheHood_A03-image_6.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt;&lt;br&gt; &lt;p&gt;UserControlBase contains three read-only properties, one of which is now tagged as obsolete: &lt;strong&gt;IsHostMenu&lt;/strong&gt;, &lt;strong&gt;PortalSettings&lt;/strong&gt; and &lt;strong&gt;IsAdminMenu&lt;/strong&gt; (now obsolete). Although this class adds only a few items to a developer’s user control, the second property (PortalSettings) is extremely rich in information.&lt;/p&gt; &lt;h2&gt;IsHostMenu&lt;/h2&gt; &lt;p&gt;The &lt;strong&gt;IsHostMenu&lt;/strong&gt; property checks the active tab to determine if it is in the Host menu. The Host menu is only accessible by the portal’s Super Users. DotNetNuke’s design extensibilities allow developers to create modules that are strictly host-level. For all other pages in which a module may reside, this property is largely irrelevant.&lt;/p&gt; &lt;h2&gt;PortalSettings&lt;/h2&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;60f28b2f&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-UserControlBaseUndertheHood_A03-image_8.png&quot;&gt;&lt;img width=&quot;56&quot; height=&quot;254&quot; title=&quot;PortalSettings Class Diagram - Properties (Click to enlarge)&quot; align=&quot;right&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px 5px 5px 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;PortalSettings Class Diagram - Properties&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Aug/WLW-UserControlBaseUndertheHood_A03-image_thumb_2.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;This &lt;strong&gt;PortalSettings&lt;/strong&gt; property returns an instance of the DotNetNuke.Entities.Portals.PortalSettings class. The PortalSettings class is full of extremely rich information, containing over 70 properties (almost all read only) as well as a number of (mostly obsolete) methods. PortalSettings exposes to the module developer all of the information they might need about the portal in which the module resides. This gives the developer tremendous opportunity to know the context in which their DotNetNuke extension has to work. For more information on the PortalSettings class, see the related links at the end of this article.&lt;/p&gt; &lt;p&gt;Module developers may be interested in the following properties of the PortalSettings class. This is not an exhaustive list, of course, and you might find other properties more useful for your particular module extension. To learn more about the PortalSettings class, see the related links at the end of this article. Nonetheless, here are a few that stood out for me as a fellow module developer.&lt;/p&gt; &lt;h3&gt;Portal Information&lt;/h3&gt; &lt;p&gt;PortalSettings contains a lot of information on the portal instance. The &lt;/p&gt; &lt;ul&gt; &lt;li&gt;Cacheability – This property is a CacheLevel object that &lt;font style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;???&lt;/font&gt;  &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt; – This String property returns the e-mail address set for the portal’s Administrator account.  &lt;li&gt;&lt;strong&gt;GUID&lt;/strong&gt; – This property is a GUID object that uniquely identifies the portal in the DNN installation. DotNetNuke can host multiple websites with distinct URLs from within a single installation. Each website is called a “portal”, and the Super User can list the portals by navigating to the Host-&amp;gt;Portals page. As the name implies, these GUIDs are “globally unique” identifiers.  &lt;li&gt;&lt;strong&gt;HomeDirectoryMapPath&lt;/strong&gt; – This string returns the server-side path to the portal’s home directory. Portal home directories are located in the “Portals” folder under the webite’s root. This is helpful should your module perform file I/O, such as storing or retrieving images or other documents for the website. In a default installation of DotNetNuke, the first portal has a home directory name of “0”, meaning that the HomeDirectoryMapPath for this would end with “\Portals\0\”.  &lt;li&gt;HostSettings – This property is a Hashtable of &lt;font style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;???&lt;/font&gt;  &lt;li&gt;&lt;strong&gt;HostSpace&lt;/strong&gt; – This Integer property represents the amount of hard drive space (in MB) allocated by the Super User for this portal’s home directory. If this amount of space is filled, then it will not be possible to save any more items to the home directory. If the HomeSpace is set to zero, then there are no limits set by the Super User for the size of the portal’s home directory.  &lt;li&gt;&lt;strong&gt;PortalId&lt;/strong&gt; – This Integer property uniquely identifies this portal (or website) for this DotNetNuke installation. Portal IDs are not unique among separate installations of DotNetNuke; for completely unique IDs, see the PortalSettings.GUID property.  &lt;li&gt;&lt;strong&gt;PortalName&lt;/strong&gt; – This String property is the name supplied for the website.  &lt;li&gt;&lt;strong&gt;SSLEnabled&lt;/strong&gt; – This Boolean property indicates whether an SSL (Secure Sockets Layer) certificate has been installed for this website.  &lt;li&gt;&lt;strong&gt;SSLEnforced&lt;/strong&gt; – This Boolean property indicates whether or not a page can be viewed as SSL if it is not also marked as “Secure” in the Page Settings for the tab. This security feature of DNN prevents pages marked as “Secure” from being accessed as regular pages.  &lt;li&gt;&lt;strong&gt;SSLURL&lt;/strong&gt; – This String property will typically have a value when SSL is enabled and there is no SSL certificate. In these cases, the hosting provider is likely providing an URL for Shared SSL.  &lt;li&gt;&lt;strong&gt;STDURL&lt;/strong&gt; – This String value will be needed whenever there is an SSLURL, so as to allow for unsecured connections to pages or resources (such as images).  &lt;li&gt;&lt;strong&gt;Version&lt;/strong&gt; – This String value is the version of DotNetNuke that is currently running. &lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;Tab (Page) Information&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;ActiveTab – This property presents a TabInfo object …  &lt;li&gt;ContentVisible – This Boolean property …  &lt;li&gt;LoginTabId – This Integer property…  &lt;li&gt;RegisterTabId – This Integer property…  &lt;li&gt;UserTabId – This Integer property… &lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;User Information&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;UserId – This Integer property…  &lt;li&gt;UserInfo – This property presents a UserInfo object that…  &lt;li&gt;UserQuota – This Integer property…  &lt;li&gt;UserRegistration – This Integer property…  &lt;li&gt;Users – This Integer property…  &lt;li&gt;UserTabId – This Integer property… &lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;Localization and Culture Information&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;CultureCode – (New since DNN 5.5.0) This String property…  &lt;li&gt;Currency – This String property …  &lt;li&gt;DefaultLanguage – This String property …  &lt;li&gt;TimeZoneOffset – This Integer property… &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&amp;lt;&amp;lt; &lt;font style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;class diagram&lt;/font&gt; &amp;gt;&amp;gt;&lt;/p&gt; &lt;p&gt;---&amp;gt;&amp;gt; talk about some popular/key properties of PortalSettings; &lt;strong&gt;&lt;u&gt;classify/group them&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;---&amp;gt;&amp;gt; why are most methods now obsolete?&lt;/p&gt; &lt;h2&gt;IsAdminMenu&lt;/h2&gt; &lt;p&gt;This obsolete Boolean property is now set to always return false. Since DNN ??, the concept of administrator-only pages has been removed. &lt;/p&gt; &lt;p&gt;---&amp;gt;&amp;gt; why has this been made obsolete?&lt;/p&gt; &lt;p&gt;---&amp;gt;&amp;gt; what is the concept of an “Admin page” in the new model?&lt;/p&gt; &lt;p&gt;---&amp;gt;&amp;gt; what to do if you want to determine if something is now under the “Admin” menu (the name of the tab itself can now be changed from “Admin” to something else)?&lt;/p&gt; &lt;h1&gt;Summary&lt;/h1&gt;","0","8/12/2013 3:40:34 PM"," "," "," "," "
"The Range of DotNetNuke® Extensions","","","The Range of DotNetNuke® Extensions","&lt;h1&gt;TODO: Add TODO Comments&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Add TODO Comments &lt;/li&gt;&lt;/ul&gt; &lt;h1&gt;The Range of DotNetNuke&#174; Extensions&lt;/h1&gt; &lt;p&gt;In this article, I will walk you through the various kinds of DotNetNuke&#174; Extensions that can be created on the DNN&#174; framework. Today, there are over ten different categories of Extensions you can create for DotNetNuke, each with their own characteristics and targeted functionality within the DotNetNuke framework.&lt;/p&gt; &lt;p&gt;I’ll cover each category of extensions and describe what distinguishes it from the others. At the end of this article, you will find links to tutorials and other resources to help you in developing your own particular add-in for DotNetNuke. Whether you are new to developing for DotNetNuke or have been building on DotNetNuke since the early years, I invite you to explore the range of possibilities open for you on this ever-expanding CMS framework.&lt;/p&gt;  &lt;h1&gt;The Range of DotNetNuke&#174; Extensions&lt;/h1&gt; &lt;p&gt;The world of development for the DotNetNuke&#174; framework has grown by leaps and bounds in the last few years. It used to be that if you created 3&lt;sup&gt;rd&lt;/sup&gt; party add-ons to DotNetNuke, you were either a Module developer or a Skin developer.&lt;/p&gt; &lt;p&gt;Today, there are over ten different kinds of add-ons you can create for DotNetNuke. With the release of DNN&#174; 5, these add-ons have been officially dubbed &lt;b&gt;&lt;i&gt;Extensions&lt;/i&gt;&lt;/b&gt; and new Host and Admin facilities were added to help portal owners and developers manage the range of both core and 3&lt;sup&gt;rd&lt;/sup&gt; party plug-ins.&lt;/p&gt; &lt;p&gt;Before diving in, it would be helpful to cover a few terms that will pop up throughout this article.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Extension – &lt;/b&gt;An “extension” is the same idea as the term “add-in” or “plug-in”. It refers to some kind of functionality or component that can be added to a DotNetNuke installation without the need to modify any part of the existing DotNetNuke framework.  &lt;li&gt;&lt;b&gt;Core – &lt;/b&gt;The term “core” is often used to refer to the DotNetNuke framework itself. It can also be thought of as the API (Application Programming Interface) of the framework. As the heart of the DotNetNuke system, the functionality provided in the core is essential for the overall stability of the web site. From a developer’s perspective, the core is something you frequently &lt;i&gt;use&lt;/i&gt; but never &lt;i&gt;change&lt;/i&gt;. Changing the core means that your web site immediately becomes incompatible with future releases, and maintenance becomes a nightmare. All DotNetNuke extensions make use of the core, but they never change the core to achieve their goals.  &lt;li&gt;&lt;b&gt;Module – &lt;/b&gt;This is a somewhat loaded term in DotNetNuke. In its general usage, it can be almost the same as the term “Extension”. DotNetNuke comes with over 25 built-in modules that bring all sorts of functionality that is commonly expected of a Content Management System (CMS). In its narrowest sense, however, the term “Module” refers to a particular type of extension in DotNetNuke. Whenever you read or hear this term, you will probably need to look at the larger context to get a sense of what is meant.  &lt;li&gt;&lt;b&gt;Skin – &lt;/b&gt;Like the term “Module”, the term “Skin” has both a narrow and broad meaning. In it’s broad meaning, a “Skin” is a set of components whose sole purpose is to provide the “look and feel” of a website. In its narrower sense, a “Skin” is a specific type of extension that is concerned with the layout and design of an individual page. Skins are totally separate from the functionality of the website and can be easily interchanged without ever breaking the site. &lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;Types of DotNetNuke Extensions&lt;/h2&gt; &lt;p&gt;As of this writing, there are eleven categories of extensions for DotNetNuke. Although there are so many different categories of extensions distinguished by DotNetNuke, they still largely fall within three groups: &lt;b&gt;&lt;i&gt;Module-like extensions&lt;/i&gt;&lt;/b&gt; which provide some added functionality, &lt;b&gt;&lt;i&gt;Skin components&lt;/i&gt;&lt;/b&gt; which focus on the visual aspect of a portal, or &lt;b&gt;Language extensions&lt;/b&gt; that deliver Internationalization support for portals.&lt;/p&gt; &lt;p&gt;The “Module-like” group includes the &lt;b&gt;Authentication System&lt;/b&gt;, &lt;b&gt;Dashboard Control&lt;/b&gt;, &lt;b&gt;Library&lt;/b&gt;, (traditional) &lt;b&gt;Module&lt;/b&gt;, and &lt;b&gt;Provider&lt;/b&gt; extensions. Each of these are written to manage content or provide some kind of added functionality to a DotNetNuke portal. To create these, you almost certainly have to be a “coder”. At the programming level, these extensions often integrate heavily with the DotNetNuke core.&lt;/p&gt; &lt;p&gt;Skin components include extensions such as the &lt;b&gt;Container&lt;/b&gt;, &lt;b&gt;Skin&lt;/b&gt;, &lt;b&gt;Skin Object&lt;/b&gt;, and the &lt;b&gt;Widget&lt;/b&gt;. Producing these kinds of extensions often blend artistic skills in website design along with technical skills in HTML/CSS and image-manipulation software like PhotoShop. &lt;b&gt;Widgets&lt;/b&gt; are a fairly new type to DotNetNuke; they act as client-side extensions and enhancements to skins, containers and skin objects. Primarily written in JavaScript, widgets can also be useful additions to the traditional Module as well as other types of DotNetNuke extensions.&lt;/p&gt; &lt;p&gt;Language extensions in DotNetNuke deliver Internationalization support to DotNetNuke portals. Internationalization has to do with rendering the literal (or “hard-coded”) parts of the portal into different languages across the globe. There are two types of language extensions: the &lt;b&gt;Core Language Pack&lt;/b&gt; and the &lt;b&gt;Extension Language Pack&lt;/b&gt;. These extensions are enhancements to existing modules and core elements of DotNetNuke. Creating these extensions does not involve coding expertise; these require expertise in Human languages, as well as familiarity with English (the default language of DotNetNuke) and the intent and phrases used in the various UI components of DotNetNuke and its modules.&lt;/p&gt; &lt;h2&gt;How We Got Here&lt;/h2&gt; &lt;p&gt;The huge increase in the variety of possible DotNetNuke extensions has been made possible by two factors. The first was the desire to create a single, unified approach to dealing with installing and uninstalling extensions. Previously, installing modules was somewhat different from installing skins, and that in turn was also different from installing language packs. These differences brought an extra (and unnecessary) level of complexity to managing a portal. With the growing capabilities (and 3&lt;sup&gt;rd&lt;/sup&gt; party extensions) for DotNetNuke, the time seemed right to develop a unified way of managing extensions.&lt;/p&gt; &lt;p&gt;The second factor was a desire from the community to see DotNetNuke more “pluggable”. Developers wanted the ability to supply alternative ways of doing things without needing to change the “core”. Part of the success of DotNetNuke has been its use of the Provider architecture for various components such as the DAL (you could use MS SQL or Oracle or other providers for the data access layer) and the Rich Text Editor (remember FCKEditor before the days of Telerik’s RADEditor?). In order to make it easier to swap out various components that used to be intertwined more closely with the DNN Core, the developers at DotNetNuke have increased the use of Providers for all sorts of items. In fact, Providers are now a very distinct item in the range of DotNetNuke extensions.&lt;/p&gt; &lt;p&gt;In the following sections, I’ll cover each of these extension categories and describe what distinguishes them from other extensions. At the end of this article, you will find links to tutorials and other articles to guide you in developing particular extensions.&lt;/p&gt; &lt;h2&gt;Authentication System&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Authentication System&lt;/b&gt; extensions are all about validating a user’s access to a DotNetNuke portal. These types of extensions are treated differently from other types of extensions specifically because of their implications for the security of the entire portal.&lt;/p&gt; &lt;p&gt;LiveID and OpenID are two examples of alternate authentication systems. These extensions allow administrators to offer single-sign-on options to their users. That way, a user might choose to use their Google or Yahoo or Microsoft Live account as a simple one-click way to log into the website. It makes it easier when users have only one login id and password to remember when jumping between websites.&lt;/p&gt; &lt;p&gt;There are some essential elements to creating an Authentication System in the eyes of DotNetNuke. An Authentication System must provide a login control, a settings control and an optional logout control. Additional controls may be provided, of course, but these are required for the DotNetNuke core to ensure that any custom Login page set up by an administrator will always have at least one system in place for logging in.&lt;/p&gt; &lt;h2&gt;Container&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Container&lt;/b&gt; extensions are part of the suite of skinning extensions. Containers are a subset of skin extensions. Whereas skin extensions apply to pages, containers apply to modules on a page. They “wrap” modules and give a higher level of granularity to the site administrator in managing the overall look of the site. Containers are independent of skin extensions and can be mixed and matched with skins from the same or different skin packages. They are effectively a “skin within a skin”.&lt;/p&gt; &lt;p&gt;Containers can be developed as either plain HTML designs with token-based placeholders for DNN controls or as straight server-side user controls (with the extension “.ascx”). When developed as an HTML design, the DotNetNuke framework will parse the HTML and produce an ASCX user control, replacing each “token” with the corresponding DNN or 3&lt;sup&gt;rd&lt;/sup&gt; party user control. This token-based approach to converting HTML skin elements into server-side user controls allows the skin designer to focus on the design (look &amp;amp; feel) without having to get hung up on the functionality.&lt;/p&gt; &lt;p&gt;DotNetNuke comes with a number of container-level user controls/tokens that can be inserted by the developer. &lt;font style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&#232;start list of tokens here&lt;/font&gt;&lt;/p&gt; &lt;h2&gt;Core Language Pack&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Core Language Pack&lt;/b&gt; extensions are …&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; If you are creating a Language Pack the Language must already be defined in the Admin/Languages module.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;IMAGE&lt;/p&gt; &lt;h2&gt;Dashboard Control&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Dashboard Control&lt;/b&gt; extensions are a specialty-case module that provides reporting capabilities for the DotNetNuke installation. These are meant to extend the Dashboard page under the Host and Admin menus.&lt;/p&gt; &lt;h2&gt;Extension Language Pack&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Extension Language Pack&lt;/b&gt; extensions are …&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; If you are creating a Language Pack the Language must already be defined in the Admin/Languages module. &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; If you are creating an Extension Language Pack the Extension must already be defined.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;h2&gt;Library&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Library&lt;/b&gt; extensions are a ubiquitous entity in that they can represent items that extend the core or be totally independent and unaware of anything DotNetNuke. They can relate to any or all of the layers of a standard web applications: UI, Business Logic Layer, or Data Access Layer. They can be the basis for web services, desktop integration, or any host of items.&lt;/p&gt; &lt;p&gt;The key concern for a Library is that it provides &lt;i&gt;supporting&lt;/i&gt; functionality for other extensions. Libraries are not useful in-and-of themselves; they exist to serve others. It’s not unusual to imagine a developer who has a whole suite of modules with common functionality that can be wrapped up in a single distinct library. The use of libraries makes it much easier to provide support and maintainability across a range of applications. That’s why they tend to make up the heart of most desktop and web development around the globe.&lt;/p&gt; &lt;p&gt;In the DotNetNuke world, however, library extensions are still quite rare. Since DNN 0#.0#.0#, the core has shipped with a single library extension: Telerik Controls.&lt;/p&gt; &lt;h2&gt;Module&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Module&lt;/b&gt; extensions are representative of perhaps 90% of the (non-skin) 3&lt;sup&gt;rd&lt;/sup&gt; party plug-ins to DotNetNuke.&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;h2&gt;Provider&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Provider&lt;/b&gt; extensions are …&lt;/p&gt; &lt;p&gt;Today, DotNetNuke ships with various providers already installed. There are providers for caching, data, the HTML editor, logging, membership, module caching, navigation, permissions, scheduling, search, and the site map. Each of these are clear opportunities for extending and improving on what DotNetNuke offers out-of-the-box.&lt;/p&gt; &lt;h2&gt;Skin&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Skin&lt;/b&gt; extensions are the top-level piece to the suite of skinning extensions. Skins represent the layout &amp;amp; design of an entire page. Like containers, skins can be designed as HTML files with tokens for DNN controls, or they can be created as ASCX user controls.&lt;/p&gt; &lt;p&gt;DotNetNuke comes with a number of skin-level user controls/tokens that can be inserted by the developer. &lt;font style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&#232;list skin tokens here&#231;&lt;/font&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;h2&gt;Skin Object&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Skin Object&lt;/b&gt; extensions are “min-modules” that provide common functionality in the UI. What makes these unique is that they are designed to supplement skins and containers.&lt;/p&gt; &lt;p&gt;Skin Objects are represented in HTML-designed skins and containers by &lt;b&gt;&lt;i&gt;tokens&lt;/i&gt;&lt;/b&gt;, which are typically upper-case identifiers wrapped in square brackets. For example, there are these tokens which are built into the DotNetNuke framework: LOGO, LOGIN, SEARCH, and MENU. To illustrate, you could place the SEARCH token inside an HTML-designed skin’s table cell as follows.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;[SEARCH]&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Skin objects can also be placed in ASCX-designed skins and containers as ordinary user controls. To do this, you would have to include a @Register directive to import the user control and then place the user control just as you would place any ASP.NET control. This example shows the @Register directive for the SEARCH token, followed by a sample table cell with the DNN Search control.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Register TagPrefix=&quot;dnn&quot; TagName=&quot;SEARCH&quot; Src=&quot;~/Admin/Skins/Search.ascx&quot; %&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:SEARCH&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;dnnSEARCH&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt; &lt;h3&gt;Skin Objects and the Skin Designer&lt;/h3&gt; &lt;p&gt;If you intend on allowing your skin object’s attributes to be edited in the Skin Designer (on the Admin-&amp;gt;Skins page), then you will need to follow a certain set of rigid conventions.&lt;/p&gt; &lt;p&gt;First, you must have an Xml file whose name matches the user control’s (.ascx) name that is registered as the skin object’s Control Source. Thus, if your skin object’s user control is called “UltraHot.ascx”, then you would need to have a file named “UltraHot.xml” with &amp;lt;Setting&amp;gt; tags for each editable property. Here is a sample.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Settings&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;ShowWelcom&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Boolean&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;True to show the welcome message.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;False,True&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;UserNameFormat&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;String&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Format to use when displaying the user’s info.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;UserName,DisplayName,FirstName,LastName &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;WelcomePrefix&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;String&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;The text to place before the User information (UserNameFormat).&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;WelcomeSuffix&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;String&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;The text to place after the User information (UserNameFormat).&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Help&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Setting&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;Settings&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Next, the formatting of the user control’s presence in the skin or container must follow a specific format, based on the token name. The following line shows the pattern. &lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:&lt;em&gt;&lt;u&gt;&lt;strong&gt;TokenName&lt;/strong&gt;&lt;/u&gt;&lt;/em&gt;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;dnn&lt;em&gt;&lt;u&gt;&lt;strong&gt;TokenName&lt;/strong&gt;&lt;/u&gt;&lt;/em&gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt; &lt;p&gt;Note that the order of the runat and id attributes must match the pattern. Also, the values must be enclosed in double quotes (not single quotes) and the spaces and upper/lower case characteristics must match.&lt;/p&gt; &lt;p&gt;So, if the token for the UltraHot.ascx user control is HOTWELCOME, then the @Register directive must set the tag prefix as “dnn” and then the user control must be referenced using “dnn:HOTWELCOME” and given an ID of “dnnHOTWELCOME”. Here are the resulting lines that must be present.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Register src=&quot;~/DesktopModules/HOTDemo/UltraHot.ascx&quot; &lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;             tagname=&quot;HOTWELCOME&quot; tagprefix=&quot;dnn&quot; %&amp;gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:HOTWELCOME&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;dnnHOTWELCOME&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Lastly, the control must end with the short-form closing tag (&quot; /&amp;gt;&quot;). If the particular attribute for the setting being changed in the Skin Designer is present, then that attribute will be removed and replaced with the new value. If the attribute is not present, then it will simply be added with your specified value.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Note that as of DNN 5.4, there are two notable limitations to the Skin Designer.&lt;/p&gt; &lt;p&gt;The first is a limitation on the ability of the Skin Designer in manipulating the skin object’s attributes. The Skin Designer can only be used to add attributes with a non-empty value. So, if you intend site owners to be able to set an attribute to an empty string or to have it removed from the skin object, they won’t be able to do this through the Skin Designer.&lt;/p&gt; &lt;p&gt;The second limitation is that the Skin Designer expects only one instance of the skin object on the page (with a specific control ID).&lt;/p&gt;&lt;/blockquote&gt; &lt;h2&gt;Widget&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Widget&lt;/b&gt; extensions are fairly new to DotNetNuke (as a type of extension). Their primary purpose is to run client-side – sometimes providing integration with server-side components, other times focusing on giving a rich user experience in the browser.&lt;/p&gt;","0","8/12/2013 3:41:08 PM"," "," "," "," "
"Guidelines for Editing","","","Guidelines for Editing","&lt;h1&gt;Guidelines for Editing HOT4DNN Articles&lt;/h1&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE: This is a draft document&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;preamble&lt;/p&gt;  &lt;h1&gt;Guidelines for Editing HOT4DNN Articles&lt;/h1&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE: This is a draft document&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;preamble&lt;/p&gt; &lt;h2&gt;Article Types&lt;/h2&gt; &lt;p&gt;There are four main article types.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Articles&lt;/strong&gt; – [What/Why] This is the general category for articles that do not fall under the other categories. These can be technical write-ups (think “knowledge-base” or “how-to”) or backgrounders (think “The reason for a separate base class for Settings”).  &lt;li&gt;&lt;strong&gt;Tutorials&lt;/strong&gt; – [How] These are walk-through articles that tell the user “how” to build something. It focuses on mechanics and produces a fairly to totally complete example that the reader can create, just be following the instructions. You know you have a tutorial if you find yourself primarily doing a number of step-by-step instructions.  &lt;li&gt;&lt;strong&gt;Commentary&lt;/strong&gt; – []  &lt;li&gt;&lt;strong&gt;External Feeds&lt;/strong&gt; – These are pulled from 3rd party sites and are supplied free (as they are already accessible via those sites).  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;&lt;u&gt;TODO&lt;/u&gt;&lt;/strong&gt;: Need to find a way to incorporate these features of external feeds:  &lt;ul&gt; &lt;li&gt;Filter external feeds, where the actual articles must be “approved” by the Editor  &lt;li&gt;Tag external feeds, to provide additional search characteristics  &lt;li&gt;Attribute external feeds, to provide a clear indication of where they are from and who wrote them (don’t give any false impression that they are written by us!!) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;strong&gt;&lt;u&gt;TODO&lt;/u&gt;&lt;/strong&gt;: Formalize a process (in a way that doesn’t sound “formal” or “legalese”) to get authors permissions to reprint blogs.  &lt;ul&gt; &lt;li&gt;Offer free subscription  &lt;li&gt;Offer ad-based link-back (free vendor status) &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;strong&gt;Author Gudelines&lt;/strong&gt; – Articles intended for authors/editors to give guidelines for contributions &lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;Styling Guides&lt;/h2&gt; &lt;h3&gt;DNN Version Numbers&lt;/h3&gt; &lt;p&gt;Tracking DNN Version numbers is a central aspect of the more technical of the articles. In general, version numbers for DNN should be reference following these guidelines.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;DNN&lt;/strong&gt; – Always preface the version number with “DNN”; do not use “DotNetNuke”.  &lt;li&gt;&lt;strong&gt;Short Number&lt;/strong&gt; – Use short number versions (DNN 5.4.3); avoid long number versions “05.04.03”  &lt;li&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;Aside Comments&lt;/h3&gt; &lt;p&gt;Sometimes, there are comments that are “asides” – a tangential note that is better to be set off from the rest of the content. Asides can signal different things:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Comment&lt;/strong&gt; – This is a general note or reminder; something of which to be aware or that would be of possible interest.  &lt;li&gt;&lt;strong&gt;Tip&lt;/strong&gt; – These are very helpful ideas or considerations to keep in mind; they offer &lt;em&gt;&lt;u&gt;specific&lt;/u&gt;&lt;/em&gt; benefits if employed.  &lt;li&gt;&lt;strong&gt;Warning&lt;/strong&gt; – These asides signal some potential pitfall that is easy to fall into (for the uninitiated and/or experienced)  &lt;li&gt;&lt;strong&gt;Known Bug/Limitation&lt;/strong&gt; – This is some limitation or known bug. Sometimes, this is accompanied by a “workaround” to address the potential problem. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;h3&gt;Database Table Designs&lt;/h3&gt; &lt;p&gt;To create an HTML table to show the design of a database table, use the following sample.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;tb1&quot;&gt;Sample Code&lt;/a&gt; &lt;a href=&quot;tb2&quot;&gt;Resulting Display&lt;/a&gt; &lt;/p&gt; &lt;p&gt;[tb1]&lt;/p&gt; &lt;h3&gt;HTML Code to Use&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;h3&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Draft the Database Table(s)&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;h3&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;A single database table will be used to store the guest book comments that are posted.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DBTableDesign&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;1&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellspacing&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;0&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellpadding&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;3&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;thead&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;colspan&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;2&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;SimpleGuestBook&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Column Name&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Data Type&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;thead&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tbody&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;SimpleGuestBookID&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;int (Primary Key)&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;ModuleID&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;int (Foreign Key to Modules table)&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Comment&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;ntext&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;DisplayName&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;nvarchar(128)&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;DatePosted&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;th&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;datetime&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tbody&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;[/tb1]&lt;/p&gt; &lt;p&gt;[tb2]&lt;/p&gt; &lt;h3&gt;When Viewed in Browser&lt;/h3&gt; &lt;h3&gt;Draft the Database Table(s)&lt;/h3&gt; &lt;p&gt;A single database table will be used to store the guest book comments that are posted.&lt;/p&gt; &lt;table class=&quot;DBTableDesign&quot; style=&quot;color: rgb(0, 0, 0);&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;3&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot; colspan=&quot;2&quot;&gt; &lt;p&gt;&lt;b&gt;SimpleGuestBook&lt;/b&gt;&lt;/p&gt;&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;Column Name&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;Data Type&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;SimpleGuestBookID&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;int (Primary Key)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;ModuleID&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;int (Foreign Key to Modules table)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;Comment&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;ntext&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;DisplayName&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;nvarchar(128)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;DatePosted&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;datetime&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;[/tb2]&lt;/p&gt;","0","8/12/2013 3:41:46 PM"," "," "," "," "
"Simple Guest Book – A Tutorial","","","Simple Guest Book – A Tutorial","&lt;h3&gt;TODO Items:&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Add Summary to posting  &lt;li&gt;Finish articles (see &lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;&lt;strong&gt;highlighted&lt;/strong&gt;&lt;/font&gt; items)  &lt;li&gt;Remove TODO prior to publishing &lt;/li&gt;&lt;/ul&gt; &lt;h1&gt;Simple Guest Book – A Tutorial&lt;/h1&gt; &lt;p&gt;This tutorial walks through the steps for creating an ultra-simple module: one that consists of a single User Control and a single table in the database. These types of modules can be developed directly from within a DotNetNuke website by anyone logged in as the Super User or Host.&lt;/p&gt; &lt;p&gt;At the end of the tutorial, the &lt;b&gt;Discussion Points and Review &lt;/b&gt;section will cover details about design aspects specific to this module.&lt;/p&gt; &lt;h2&gt;Phase 1 – Inception&lt;/h2&gt; &lt;p&gt;The general idea behind the “Simple Guest Book” module is to provide a way for people to leave comments, similar to a “guest book” that people can sign when they visit a church, museum or someone’s home. Here’s the general requirements.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;General features  &lt;ul&gt; &lt;li&gt;Anyone with “View” permissions can post a comment  &lt;li&gt;Automatically logs the user &amp;amp; time that the post was made  &lt;li&gt;Only adds new posts; existing posts cannot be edited  &lt;li&gt;&lt;b&gt;&lt;i&gt;&lt;u&gt;Not&lt;/u&gt;&lt;/i&gt;&lt;/b&gt; rich text – plain text only (no HTML, etc.) &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Features under “Admin” permissions  &lt;ul&gt; &lt;li&gt;Is allowed to remove existing posts  &lt;li&gt;Cannot edit existing posts  &lt;li&gt;One form only!!!  &lt;li&gt;Inline code  &lt;li&gt;No “Settings.ascx” &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;Sketch the Form&lt;/h3&gt; &lt;p&gt;The module will appear slightly different to the user, depending on their permissions. This is how the form will appear to regular users who only have the View permission.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;391&quot; height=&quot;409&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_31.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;If the user has Edit permissions, then the form will show a couple of extra items: the Action Menu and an icon for deleting previous posts. The types of controls on this form will be standard ASP.NET controls: TextBox, Repeater, etc.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;569&quot; height=&quot;413&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_32.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;h2&gt;Phase 2 – Elaboration&lt;/h2&gt; &lt;p&gt;Since this module is, by design, a very simple module with no real editing features or special settings, the entire module will consist of a single user control. As such, the module can be built directly through the DotNetNuke website, without any need for a Visual Studio development environment. That is the general approach that will be used in this tutorial.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Although you don’t need Visual Studio to develop a single user control module for DotNetNuke, it does help – a lot! Visual Studio makes it easier to develop through the use of Database tools (for creating tables &amp;amp; stored procedures) and the Toolbox and Editor window for the web user control.&lt;/p&gt;&lt;/blockquote&gt; &lt;h3&gt;Draft the Database Table(s)&lt;/h3&gt; &lt;p&gt;A single database table will be used to store the guest book comments that are posted.&lt;/p&gt; &lt;table class=&quot;DBTableDesign&quot; style=&quot;color: rgb(0, 0, 0);&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;3&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot; colspan=&quot;2&quot;&gt; &lt;p&gt;&lt;b&gt;SimpleGuestBook&lt;/b&gt;&lt;/p&gt;&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;Column Name&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;Data Type&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;SimpleGuestBookID&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;int (Primary Key)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;ModuleID&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;int (Foreign Key to Modules table)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;Comment&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;ntext&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;DisplayName&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;nvarchar(128)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;DatePosted&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;datetime&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;h2&gt;Phase 3 – Construction&lt;/h2&gt; &lt;p&gt;In this tutorial, the construction phase will have three parts:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;b&gt;Setup the Project Development Environment&lt;/b&gt; – This is typically a one-time event for any given module’s life span. It needs to be done at the start for the first version of the module, but can be re-used when doing version upgrades for your module.  &lt;li&gt;&lt;b&gt;Create the Tables/SPROCS&lt;/b&gt; – The bulk of the work for creating the database tables and stored procedures (SPROCS) happens in the first version of your module (just like getting your development environment setup). Later versions of your module might or might not require changes to your database design; at those times, this part of the Construction phase will have a little bit of work, but it typically won’t be as much as what is done in the very first version of your module.  &lt;li&gt;&lt;b&gt;Code the Module’s User Control(s)&lt;/b&gt; – Here is where the main efforts of your module development lay. This will be true for the first version and subsequent versions of your module. &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;The Construction Phase is the biggest part of this tutorial, even though it’s a fairly simple module. Therefore, the big focus will be on the &lt;i&gt;mechanics&lt;/i&gt; of building the module rather than on explaining how each part works or why a given approach was chosen. For details on these questions, see the &lt;b&gt;Discussion Points and Review &lt;/b&gt;section at the end of the tutorial.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The Construction Phase of any project is, typically, the longest and most challenging part of any project. It’s not unusual to run into snags or problems that throw you back to the Elaboration Phase in order to rethink your design.&lt;/p&gt; &lt;p&gt;This is because (a) it contains the most hands-on work and (b) it involves a lot of details and decision making. It requires knowledge of SQL, VB or C#, and ASP.NET. You have to make choices about the underlying ASP.NET controls for your module. There is the question of how deep to go in the module’s “level of abstraction”, such as choosing full client-server, leveraging LINQ, etc. Lastly, you should expect to spend a good deal of time on testing &amp;amp; debugging (even for experienced developers). In short, plan to spend a lot of time here.&lt;/p&gt;&lt;/blockquote&gt; &lt;h3&gt;Setup the Project Development Environment&lt;/h3&gt; &lt;p&gt;To build this module, you will need Super User rights to a DotNetNuke website on your local machine. You should also have the ability to directly access the DesktopModules folder so as to save the install/uninstall scripts and to get the module’s installation package what will be created in the next phase.&lt;/p&gt; &lt;p&gt;Follow these steps to setup the module for development through a web browser.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Log into the site as the SuperUser. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_6.png&quot;&gt;&lt;img width=&quot;53&quot; height=&quot;54&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_2.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Navigate to the Module Definitions page under the Host menu. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_8.png&quot;&gt;&lt;img width=&quot;58&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_3.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Select Create New Module from the Action menu. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_10.png&quot;&gt;&lt;img width=&quot;98&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_4.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Select “New” in the Create Module From drop-down-list. Then, fill out the form according to the image below. Then click the “Create Module” link. This will create and register the module in the website. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_12.png&quot;&gt;&lt;img width=&quot;67&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_5.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;With the “Add Test Page” CheckBox checked, a new page is added to the site with the newly created module on that page. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_14.png&quot;&gt;&lt;img width=&quot;199&quot; height=&quot;54&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_6.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;The next step is to create the database tables for the module. After that, the module’s user control will be edited to create the Simple Guest Book functionality.&lt;/p&gt; &lt;h3&gt;Create the Table/SPROCS&lt;/h3&gt; &lt;p&gt;The scripts to create the SimpleGuestBook table and its stored procedures can also be installed directly through website. First, however, we must create the scripts and To do so, follow these steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a new text file on your computer and name it “01.00.00.SqlDataProvider”. Make sure the file has the “.SqlDataProvider” file extension (instead of “.txt”). Open it in any text editor and enter the following code. &lt;br&gt;(&lt;a href=&quot;mp1&quot;&gt;&lt;strong&gt;View code&lt;/strong&gt;&lt;/a&gt;)  &lt;li&gt;Create another text file on your computer. Name this one “Uninstall.SqlDataProvider”. Open it in a text editor and enter the following code. &lt;br&gt;(&lt;a href=&quot;mp2&quot;&gt;&lt;strong&gt;View code&lt;/strong&gt;&lt;/a&gt;)  &lt;li&gt;After creating the database scripts, run the scripts in the website to create the table and stored procedures. To do this, navigate to the SQL page under the Host menu. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_16.png&quot;&gt;&lt;img width=&quot;41&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_7.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Using the “Choose File” button, locate and select “01.00.00.SqlDataProvider” as the SQL File to load. Then click the Load link. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_18.png&quot;&gt;&lt;img width=&quot;240&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_8.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;This will place the script in the text box for executing. &lt;br&gt;&amp;nbsp;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_20.png&quot;&gt;&lt;img width=&quot;70&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_9.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Make sure the “Run as Script” CheckBox is checked on. Then click the “Execute” link. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_22.png&quot;&gt;&lt;img width=&quot;206&quot; height=&quot;54&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_10.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;The script should run successfully. If there are any errors in running the install script, then repeat steps (4) to&amp;nbsp; (6) with the “Uninstall.SqlDataProvider” script to remove the table and stored procedures. Check your code for the installation script against the code shown in step 1) and fix any errors. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_24.png&quot;&gt;&lt;img width=&quot;176&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_11.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;With the database tables and stored procedures in place, we can move to the next task of editing the module’s User Control.&lt;/p&gt; &lt;p&gt;[mp1]   &lt;h2&gt;01.00.00.SqlDataProvider&lt;/h2&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/*****              SqlDataProvider                     *****/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/** Create Table **/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;not&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook]&#39;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsTable&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;BEGIN&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            [ModuleID] [&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            [SimpleGuestBookID] [&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;IDENTITY&lt;/span&gt;(1, 1),&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            [Comment] [ntext] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            [DisplayName] [nvarchar](128) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            [DatePosted] [datetime] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        )&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ADD&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [PK_{objectQualifier}HOT4DNN_SimpleGuestBook] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PRIMARY&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;KEY&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CLUSTERED&lt;/span&gt;  ([SimpleGuestBookID])&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NONCLUSTERED&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;INDEX&lt;/span&gt; [IX_{objectQualifier}HOT4DNN_SimpleGuestBook] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ON&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook] ([ModuleID])&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ADD&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [FK_{objectQualifier}HOT4DNN_SimpleGuestBook_{objectQualifier}Modules] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;FOREIGN&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;KEY&lt;/span&gt; ([ModuleID]) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;REFERENCES&lt;/span&gt; {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ON&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DELETE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CASCADE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;FOR&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;REPLICATION&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;END&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/** Drop Existing Stored Procedures **/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}HOT4DNN_GetSimpleGuestBooks]&#39;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}HOT4DNN_GetSimpleGuestBooks&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}HOT4DNN_AddSimpleGuestBook]&#39;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}HOT4DNN_AddSimpleGuestBook&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}HOT4DNN_DeleteSimpleGuestBook]&#39;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}HOT4DNN_DeleteSimpleGuestBook&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/** Create Stored Procedures **/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/*  GetSimpleGuestBooks  */&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}HOT4DNN_GetSimpleGuestBooks&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; SimpleGuestBookID,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;       ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;       Comment,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;       DisplayName,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;       DatePosted&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; {objectQualifier}HOT4DNN_SimpleGuestBook &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;with&lt;/span&gt; (nolock)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt;  ModuleId = @ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/*  AddSimpleGuestBook  */&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}HOT4DNN_AddSimpleGuestBook&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId       &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @Comment        ntext,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @DisplayName    nvarchar(128)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;insert &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;into&lt;/span&gt; {objectQualifier}HOT4DNN_SimpleGuestBook (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    Comment,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    DisplayName,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    DatePosted&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;values&lt;/span&gt; (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @Comment,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @DisplayName,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    getdate()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/*  DeleteSimpleGuestBook  */&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}HOT4DNN_DeleteSimpleGuestBook&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @ModuleId           &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      @SimpleGuestBookID  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;delete&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt;   {objectQualifier}HOT4DNN_SimpleGuestBook&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt;  ModuleId = @ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt;    SimpleGuestBookID = @SimpleGuestBookID&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/*****              SqlDataProvider                     *****/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;[/mp1]&lt;/p&gt;&lt;br&gt; &lt;p&gt;[mp2] &lt;/p&gt; &lt;h2&gt;Uninstall.SqlDataProvider&lt;/h2&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/*****              SqlDataProvider                     *****/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/** Drop Table **/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [FK_{objectQualifier}SimpleGuestBook_{objectQualifier}Modules]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [PK_{objectQualifier}HOT4DNN_SimpleGuestBook]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;INDEX&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook].[IX_{objectQualifier}HOT4DNN_SimpleGuestBook]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_SimpleGuestBook]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/** Drop Stored Procedures **/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_GetSimpleGuestBooks]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_AddSimpleGuestBook]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}HOT4DNN_DeleteSimpleGuestBook]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/*****              SqlDataProvider                     *****/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;/************************************************************/&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; [/mp2]  &lt;h3&gt;Edit the Module’s User Control&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;Navigate to the test page for the module. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_26.png&quot;&gt;&lt;img width=&quot;391&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_12.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;From the Action menu of the module, choose “View Source”. This will open the View Module Control Source form. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_28.png&quot;&gt;&lt;img width=&quot;76&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_13.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the View Module Control Source, select “User Control” from the Select File drop-down-list. This will load the code for the “ViewGuestBook.ascx” user control so that it can be edited directly from the web page. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;462923c3&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_30.png&quot;&gt;&lt;img width=&quot;113&quot; height=&quot;50&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-SimpleGuestBook_48F4-image_thumb_14.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the Module Control Source text box, enter the following code. &lt;br&gt;(&lt;a href=&quot;mp3&quot;&gt;&lt;strong&gt;View code&lt;/strong&gt;&lt;/a&gt;) &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;[mp3]   &lt;h2&gt;ViewGuestBook.ascx&lt;/h2&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Control Language=&quot;VB&quot; ClassName=&quot;HOT4DNN.SimpleGuestBook&quot; &lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    Inherits=&quot;DotNetNuke.Entities.Modules.PortalModuleBase&quot; %&amp;gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;blockquote&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Normal&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;span&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SubHead&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Sign the book by adding a comment:&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;span&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;br&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:RequiredFieldValidator&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NewCommentValidator&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;CssClass&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NormalRed&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ControlToValidate&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NewComment&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ValidationGroup&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NewCommentGroup&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ErrorMessage&lt;/span&gt;=&quot;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Comments&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;are&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;required&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;when&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;signing&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;the&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;guest&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;book&lt;/span&gt;.&amp;amp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;lt&lt;/span&gt;;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;br&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&quot; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;UserFeedback&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:TextBox&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NewComment&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;100%&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;         &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ValidationGroup&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NewCommentGroup&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;TextMode&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;MultiLine&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Rows&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;4&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;style&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;text-align: right;&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:LinkButton&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;AddComment&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Text&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Add Comment&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;             &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ValidationGroup&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NewCommentGroup&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;OnClick&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;AddComment_Click&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;blockquote&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Repeater&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;GuestBookRepeater&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;     &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;OnItemCommand&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;GuestBookRepeater_ItemCommand&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;ItemTemplate&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:ImageButton&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DeleteComment&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;             &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;CommandName&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Delete&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;CommandArgument&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&#39;&amp;lt;%# Eval(&quot;SimpleGuestBookID&quot;) %&amp;gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;             &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ToolTip&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Click to delete the comment.&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;             &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ImageUrl&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;~/images/delete.gif&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;             &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;OnClientClick&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;return confirm(&#39;Are you sure you want to delete this post?&#39;)&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;             &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Visible&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&#39;&amp;lt;%# IsEditable  %&amp;gt;&#39;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Comment&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Text&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&#39;&amp;lt;%# Eval(&quot;Comment&quot;) %&amp;gt;&#39;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;style&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;text-align: right;&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DisplayName&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Text&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&#39;&amp;lt;%# Eval(&quot;DisplayName&quot;) %&amp;gt;&#39;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DatePosted&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Text&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&#39;&amp;lt;%# CType(Eval(&quot;DatePosted&quot;),DateTime).ToLongDateString()  %&amp;gt;&#39;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;ItemTemplate&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Repeater&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;EmptyDataTemplate&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Visible&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;false&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;No comments have been posted to the guest book. Enter yours and be the first!&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;script&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; DataStore() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DotNetNuke.Data.DataProvider&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; DotNetNuke.Data.SqlDataProvider.Instance()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Protected&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Load(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; IsPostBack &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                PopulateRepeater()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; ex &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, ex)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; PopulateRepeater()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        Using reader &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; IDataReader = _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        DataStore.ExecuteReader(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;HOT4DNN_GetSimpleGuestBooks&quot;&lt;/span&gt;, ModuleId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; table &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; DataTable()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            table.Load(reader)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; table.Rows.Count = 0 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt; EmptyDataTemplate.Visible = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            GuestBookRepeater.DataSource = table&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            GuestBookRepeater.DataBind()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Using&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Protected&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; AddComment_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; NewCommentValidator.IsValid &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Comment &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = NewComment.Text&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; DisplayName &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; UserInfo IsNot &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    DisplayName = UserInfo.DisplayName&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    DisplayName = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;[Anonymous]&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                DataStore.ExecuteNonQuery(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;HOT4DNN_AddSimpleGuestBook&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                          ModuleId, Comment, DisplayName)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                PopulateRepeater()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                UserFeedback.Text = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Thank you for signing the guest book!&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; ex &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, ex)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Protected&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; GuestBookRepeater_ItemCommand(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; source &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.Web.UI.WebControls.RepeaterCommandEventArgs)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; e.CommandName.Equals(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Delete&quot;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; GuestBookID &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;.TryParse(e.CommandArgument, GuestBookID) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                DataStore.ExecuteNonQuery(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;HOT4DNN_DeleteSimpleGuestBook&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                          ModuleId, GuestBookID)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                PopulateRepeater()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                UserFeedback.Text = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;The user&#39;s comment has been deleted.&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;[/mp3]&lt;/p&gt;&lt;br&gt;  &lt;h1&gt;Discussion Points and Review&lt;/h1&gt; &lt;h2&gt;The Database Design&lt;/h2&gt; &lt;p&gt;The SimpleGuestBook table is the heart of the module, and the script to create and work with it is the first big item to create. First, take a look at this depiction of the table’s design.&lt;/p&gt; &lt;table class=&quot;DBTableDesign&quot; style=&quot;color: rgb(0, 0, 0);&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;3&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot; colspan=&quot;2&quot;&gt; &lt;p&gt;&lt;b&gt;SimpleGuestBook&lt;/b&gt;&lt;/p&gt;&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;Column Name&lt;/b&gt;&lt;/p&gt;&lt;/td&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;Data Type&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;SimpleGuestBookID&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;int (Primary Key)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;ModuleID&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;int (Foreign Key to Modules table)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;Comment&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;ntext&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;DisplayName&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;nvarchar(128)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;th valign=&quot;top&quot;&gt; &lt;p&gt;&lt;b&gt;DatePosted&lt;/b&gt;&lt;/p&gt;&lt;/th&gt; &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;datetime&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;h3&gt;ModuleID Column&lt;/h3&gt; &lt;p&gt;The purpose for most of the columns for the SimpleGuestBook table are self-explanatory, given the module’s description during the Inception Phase. What might not be as clear is the presence of the ModuleID column.&lt;/p&gt; &lt;p&gt;DotNetNuke modules are commonly designed so that they can be added to different pages (or “Tabs”) on the website. In fact, each page can hold more than one instance of the same module. Typically, each instance of the module will need to distinguish its own data from other instances on the site. That is where the ModuleID column comes in. The ModuleID uniquely identifies each instance of the module throughout the whole DotNetNuke website. Every time a module is added to a page, it is tracked in the database as another row in the Modules table.&lt;/p&gt; &lt;p&gt;A good example of this design is the HTML module. It’s common to find many instances of the HTML module on a website, each with their own distinct content. The HtmlText table includes a ModuleID column to help the module distinguish each instance of the HTML module.&lt;/p&gt; &lt;p&gt;The same is true for the Simple Guest Book module. It can be added to more than one page in the site. Each Guest Book module can contain many comments, but each comment is intended for a specific instance of the Guest Book module. The ModuleID column helps to identify a specific instance of the Guest Book module. It acts as a foreign key to the Modules table.&lt;/p&gt; &lt;h3&gt;Comment and DisplayName Columns&lt;/h3&gt; &lt;p&gt;Beyond the purpose of the columns, a note should be made about the data type of the columns that store text. The Comment column’s data type is ntext, and the DisplayName column is nvarchar. These data types are different from the text and varchar data types. Essentially, the ‘n’ in the ntext and nvarchar types means that the data type supports content from non-English languages, such as French, Hebrew or Mandarin.&lt;/p&gt; &lt;p&gt;Also, note that the DisplayName column stores an actual user’s name as text rather than storing the UserID and acting as a foreign key to the Users table. The reason for this is two-fold. First, if module’s permissions allow people who are not logged in (that is, anonymous users) to make comments, then the DisplayName column can simply record the person with the name “Anonymous”. Secondly, if a user who has made a comment is ever deleted from the web site, then it would be impossible to look up that person’s name if all we stored was the UserID. Storing the person’s name at the time the comment is posted makes the module independent from other changes on the web site.&lt;/p&gt; &lt;h2&gt;The Database Install Script&lt;/h2&gt; &lt;p&gt;While writing the install and uninstall script requires a knowledge of SQL, there’s a bit of additional knowledge you will need to make the script “DotNetNuke friendly”. This review topic will walk through each part of creating these scripts.&lt;/p&gt; &lt;h3&gt;Creating the Table&lt;/h3&gt; &lt;p&gt;The following SQL would create the table.&lt;/p&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; SimpleGuestBook&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;(&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    SimpleGuestBookID &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;IDENTITY&lt;/span&gt;(1, 1),&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    ModuleID &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    Comment ntext &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    DisplayName nvarchar(128) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    DatePosted datetime &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt; &lt;p&gt;After creating the table, the following ALTER statement can be applied. The ALTER statement defines the SimpleGuestBookID as the primary key.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; SimpleGuestBook &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ADD&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; PK_SimpleGuestBook &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PRIMARY&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;KEY&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CLUSTERED&lt;/span&gt;  (SimpleGuestBookID)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The next couple of statements have to do with the ModuleID column, which acts as a foreign key to the Modules table of DotNetNuke. The first statement sets up an index on the ModuleID column, thereby making searches by ModuleID much faster. The next statement establishes the foreign key relationship with the Modules table. Note on this statement that Cascade Delete is set up, so that if the module is deleted from the web site, then all the related Guest Book comments will also be removed.&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NONCLUSTERED&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;INDEX&lt;/span&gt; [IX_SimpleGuestBook] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ON&lt;/span&gt; SimpleGuestBook (ModuleID)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; SimpleGuestBook &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ADD&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; FK_SimpleGuestBook_Modules &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;FOREIGN&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;KEY&lt;/span&gt; (ModuleID) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;REFERENCES&lt;/span&gt; Modules (ModuleID) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ON&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DELETE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CASCADE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;FOR&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;REPLICATION&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3&gt;Creating the Stored Procedures&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;discuss the Drop Sprocs portion&lt;/font&gt;&lt;/em&gt;  &lt;li&gt;&lt;em&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;discuss each stored procedure&lt;/font&gt;&lt;/em&gt; &lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;Making the Script DotNetNuke Compliant&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;discuss the {databaseOwner} and {objectQualifier}&lt;/font&gt;&lt;/em&gt; &lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;The User Control&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;overview of this part of the discussion&lt;/font&gt;  &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;discuss each part of asp.net markup&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;blockquote group for entering comment&lt;/font&gt;  &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;repeater for displaying all comments&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;IsEditable&lt;/font&gt; &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;discuss server-side script&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;is “inline” rather than “code-behind”&lt;/font&gt;  &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;Property (DataStore)&lt;/font&gt;  &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;Page Load&lt;/font&gt;  &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;Populate Repeater&lt;/font&gt;  &lt;ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;ItemCommand&lt;/font&gt; &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;AddComment_Click&lt;/font&gt; &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;Beyond the Ultra-Simple Module&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;discuss the limitations of developing this way&lt;/font&gt;  &lt;li&gt;&lt;font style=&quot;background-color: rgb(0, 255, 0);&quot;&gt;why to go with Visual Studio for larger modules&lt;/font&gt; &lt;/li&gt;&lt;/ul&gt;","0","8/12/2013 3:42:19 PM"," "," "," "," "
"Guidelines for HOT4DNN Articles","","","Guidelines for HOT4DNN Articles","&lt;h1&gt;Guidelines for Authors&lt;/h1&gt; &lt;p&gt;Follow these guidelines when creating/contributing articles for HOT4DNN.&lt;/p&gt; &lt;li&gt;Use image placeholders when possible until final publishing; always get image sizes published properly, or they may need to be replaced in WLW  &lt;li&gt;Show images as full-size when in-line with regular paragraphes  &lt;li&gt;Show images as reduced size with “zooming” click when images support a step in a bullet or a numbered list  &lt;li&gt;Show code blocks in a metaPost footnote, like &lt;a href=&quot;mp999&quot;&gt;this one&lt;/a&gt;  &lt;li&gt;Use &lt;a href=&quot;mp3&quot;&gt;TODO Items&lt;/a&gt; at the start of the article, to track what needs to be done to complete the article.  &lt;li&gt;Use &lt;a href=&quot;mp1&quot;&gt;metaPost Tabs&lt;/a&gt; when you want to show alternate ways of showing things.  &lt;p&gt;[mp3]   &lt;h3&gt;TODO Items:&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Mark missing images with &lt;font style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;placeholder highlights&lt;/font&gt; during your writing  &lt;li&gt;Supply missing &lt;font style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;images&lt;/font&gt;  &lt;li&gt;Fix image sizing according to standards  &lt;li&gt;Remove TODO prior to publishing &lt;/li&gt;&lt;/ul&gt; [/mp3]  &lt;p&gt;[mp999]   &lt;p&gt;This is a sample of the metaPost footnote capability. It’s often used for code samples, list this&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; HOT4DNN.Standards&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; Foo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _fee &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Double&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; Fee() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Double&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _fee&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt;()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            _fee = 120.00&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Fee &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Double&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.Fee = Fee&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; [/mp999] &lt;br&gt; &lt;p&gt;[mp1]   &lt;p&gt;A metaPost Tab is a way of doing tabbed items in your article using “&lt;a href=&quot;mp4&quot;&gt;markup tokens&lt;/a&gt;”.&lt;/p&gt; [/mp1]  &lt;p&gt;[mp4]   &lt;p&gt;&lt;strong&gt;Markup Tokens&lt;/strong&gt; are special characters in square brackets [] entered in Windows Live Writer to indicate that metaPost should do some processing before passing the item to the DotNetNuke module.&lt;/p&gt; [/mp4]  &lt;p&gt;&lt;a href=&quot;tb1&quot;&gt;MetaPost Tabs&lt;/a&gt; &lt;a href=&quot;tb2&quot;&gt;Sample With Photos&lt;/a&gt; &lt;/p&gt; &lt;p&gt;[tb1]&lt;/p&gt; &lt;p&gt;TODO: some info on using metaPost Tabs.&lt;/p&gt; &lt;p&gt;[/tb1]&lt;/p&gt; &lt;p&gt;[tb2]&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Business%20640_2.png&quot;&gt;&lt;img width=&quot;132&quot; height=&quot;192&quot; title=&quot;Business 640&quot; class=&quot;wlDisabledImage&quot; style=&quot;border: 0px currentcolor; display: inline;&quot; alt=&quot;Business 640&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Business%20640_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Cartoon%20Technology%2024_2.png&quot;&gt;&lt;img width=&quot;197&quot; height=&quot;204&quot; title=&quot;Cartoon Technology 24&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;Cartoon Technology 24&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Cartoon%20Technology%2024_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Computer%20Hackers%2032_2.png&quot;&gt;&lt;img width=&quot;204&quot; height=&quot;165&quot; title=&quot;Computer Hackers 32&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;Computer Hackers 32&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Computer%20Hackers%2032_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Education%2050_2.png&quot;&gt;&lt;img width=&quot;204&quot; height=&quot;171&quot; title=&quot;Education 50&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;Education 50&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Education%2050_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-The%20World%20of%20Television%2062_2.png&quot;&gt;&lt;img width=&quot;204&quot; height=&quot;199&quot; title=&quot;The World of Television 62&quot; class=&quot;wlDisabledImage&quot; style=&quot;border: 0px currentcolor; display: inline;&quot; alt=&quot;The World of Television 62&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-The%20World%20of%20Television%2062_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-pen%20and%20paper%200003_2.png&quot;&gt;&lt;img width=&quot;204&quot; height=&quot;137&quot; title=&quot;pen and paper 0003&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;pen and paper 0003&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-pen%20and%20paper%200003_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Person%20writing%20in%20book_2.png&quot;&gt;&lt;img width=&quot;204&quot; height=&quot;137&quot; title=&quot;Person writing in book&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;Person writing in book&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Person%20writing%20in%20book_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Smiling%20little%20girl%20reading%20red%20book%201_2.png&quot;&gt;&lt;img width=&quot;204&quot; height=&quot;137&quot; title=&quot;Smiling little girl reading red book 1&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;Smiling little girl reading red book 1&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Smiling%20little%20girl%20reading%20red%20book%201_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;4c0f37c2&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Paint%20Cans%20&amp;amp;%20Brush%20BE%201%5B3%5D.png&quot;&gt;&lt;img width=&quot;128&quot; height=&quot;105&quot; title=&quot;Paint Cans &amp;amp; Brush BE 1[3]&quot; class=&quot;wlDisabledImage&quot; style=&quot;border: 0px currentcolor; display: inline;&quot; alt=&quot;Paint Cans &amp;amp; Brush BE 1[3]&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-GuidelinesforHOT4DNNArticles_D7CD-Paint%20Cans%20&amp;amp;%20Brush%20BE%201%5B3%5D_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;[/tb2]&lt;/p&gt; &lt;/li&gt;","0","8/12/2013 3:43:01 PM"," "," "," "," "
"DotNetNuke® Dynamic Module Template – Journal Module","","","DotNetNuke® Dynamic Module Template – Journal Module","&lt;h1&gt;DotNetNuke&#174; Dynamic Module Template – Journal Module&lt;/h1&gt; &lt;p&gt;&lt;img width=&quot;171&quot; height=&quot;133&quot; title=&quot;clip_image001&quot; align=&quot;right&quot; style=&quot;border-width: 0px; margin: 0px 0px 5px 3px; display: inline;&quot; alt=&quot;clip_image001&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-clip_image001_3.gif&quot; border=&quot;0&quot; hspace=&quot;12&quot;&gt;Many module developers use the DotNetNuke&#174; Dynamic Module template as their starting point. The Dynamic Module template contains the end-to-end pieces found in most modules:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;View, Edit and Settings controls  &lt;li&gt;Resource files (.resx) for language independence (internationalization)  &lt;li&gt;CBO, BLL and DAL classes  &lt;li&gt;Database Install/Uninstall scripts  &lt;li&gt;DotNetNuke manifest (.dnn) for creating installation packages &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;This template, however, is much more than a simple starting point for module development. It’s actually a fully-functional module, designed to manage and display a particular form of content.&lt;/p&gt; &lt;p&gt;In this tutorial, I’ll direct you through the steps to create and use this module as-is. The design of this template is ideal for creating a simple Journal module that a group or individual can use to keep a running set of HTML content. At the end of the tutorial, I’ll delve deeper into its design and integration into the DotNetNuke pluggable architecture.&lt;/p&gt;  &lt;h1&gt;DotNetNuke&#174; Dynamic Module Template – Journal Module&lt;/h1&gt; &lt;p&gt;&lt;img width=&quot;171&quot; height=&quot;133&quot; title=&quot;clip_image001&quot; align=&quot;right&quot; style=&quot;border-width: 0px; margin: 0px 0px 5px 3px; display: inline;&quot; alt=&quot;clip_image001&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-clip_image001_3.gif&quot; border=&quot;0&quot; hspace=&quot;12&quot;&gt;Many module developers use the DotNetNuke&#174; Dynamic Module template as their starting point. The Dynamic Module template contains the end-to-end pieces found in most modules:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;View, Edit and Settings controls  &lt;li&gt;Resource files (.resx) for language independence (internationalization)  &lt;li&gt;CBO, BLL and DAL classes  &lt;li&gt;Database Install/Uninstall scripts  &lt;li&gt;DotNetNuke manifest (.dnn) for creating installation packages &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;This template, however, is much more than a simple starting point for module development. It’s actually a fully-functional module, designed to manage and display a particular form of content.&lt;/p&gt; &lt;p&gt;In this tutorial, I’ll direct you through the steps to create and use this module as-is. The design of this template is ideal for creating a simple Journal module that a group or individual can use to keep a running set of HTML content. At the end of the tutorial, I’ll delve deeper into its design and integration into the DotNetNuke pluggable architecture.&lt;/p&gt; &lt;h2&gt;Journal Module&lt;/h2&gt; &lt;p&gt;The idea behind the Journal Module is to provide a single user or a group of users with the ability to create a series of “posts” or entries on a single page. The user would write the post in the Rich Text Editor of DotNetNuke, allowing them to include images, do font styling, etc.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;5cfee8dd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image7.png&quot;&gt;&lt;img width=&quot;703&quot; height=&quot;404&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image7_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The supporting database table consists of five columns. The main column is named “Content” and it holds the HTML/text of the user’s journal entry. The users’ ID and the date that the entry was created is also stored in the table. Each journal entry can be identified by the ItemID column (the table’s Primary Key). Lastly, a column named “ModuleID” acts as a foreign key column to the Modules table in the DotNetNuke framework.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;5cfee8dd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image4.png&quot;&gt;&lt;img width=&quot;396&quot; height=&quot;147&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image4_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Another key feature of the module is the ability to lay out the information in a flexible format. All of the data from the table could (conceivable) be shown for each Journal entry. To achieve this, a “template” approach will be taken to render the content. The template is a simple string with “placeholders” that mark what content is to go where. A placeholder would simply be the property name of the custom business object (equivalent to the column name from the database) surrounded by square brackets, such as [CONTENT] or [CREATEDDATE].&lt;/p&gt; &lt;p&gt;For example, consider the following data for a journal entry.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Content – “Today, I just &amp;lt;i&amp;gt;had&amp;lt;/i&amp;gt; to jot down what I learned. I &amp;lt;b&amp;gt;finally&amp;lt;/b&amp;gt; understand the Dynamic Module template!”  &lt;li&gt;CreatedDate – 06/13/2010 3:15  &lt;li&gt;ItemID – 5 &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;A template for rendering the content could be generated that incorporates HTML to control the display.&lt;/p&gt; &lt;p&gt;“&amp;lt;div&amp;gt;[CONTENT]&amp;lt;/div&amp;gt;&amp;lt;div style=“text-align:right;”&amp;gt;Entry # [ITEMID] – [CREATEDDATE]&amp;lt;/div&amp;gt;&amp;lt;hr /&amp;gt;”&lt;/p&gt; &lt;p&gt;When the journal entry is displayed to the user, it would appear like this (in HTML).&lt;/p&gt; &lt;p&gt;“&amp;lt;div&amp;gt; Today, I just &amp;lt;i&amp;gt;had&amp;lt;/i&amp;gt; to jot down what I learned. I &amp;lt;b&amp;gt;finally&amp;lt;/b&amp;gt; understand the Dynamic Module template!&amp;lt;/div&amp;gt;&amp;lt;div style=“text-align:right;”&amp;gt;Entry # 5 – 06/13/2010 3:15:48 PM&amp;lt;/div&amp;gt;&amp;lt;hr /&amp;gt;”&lt;/p&gt; &lt;h3&gt;Constructing the Journal Module&lt;/h3&gt; &lt;p&gt;There are four parts to making the Journal module&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create the module from the template  &lt;li&gt;Rename the module’s folders  &lt;li&gt;Run the script to install the database tables  &lt;li&gt;Register the module in the DotNetNuke Web Application Framework &lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;Part 1 – Create the Module&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;Open Visual Studio and create a new website using the DotNetNuke Web Application Framework template. Place the website in some location on your computer (I’ve placed mine in a folder on my I:\ drive). &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcc9ea13.png&quot;&gt;&lt;img width=&quot;88&quot; height=&quot;54&quot; title=&quot;Add New Web Site Dialog&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Add New Web Site Dialog&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcc9ea13_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the Solution Explorer, right-click the website and select “Add New Item…”&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_58.png&quot;&gt;&lt;img width=&quot;84&quot; height=&quot;54&quot; title=&quot;Add New Item&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Add New Item&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_27.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the Add New Item dialog box, select the DotNetNuke Dynamic Module template and give the module the name “Journal”. Then click the Add button.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_60.png&quot;&gt;&lt;img width=&quot;88&quot; height=&quot;54&quot; title=&quot;Add Dynamic Module&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Add Dynamic Module&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_28.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;At this stage, a number of files and folders have been created.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Inside the DesktopModules folder, a folder called “ModuleName” has been created. It contains the UI-related controls for the module (EditJournal, Settings, and ViewJournal) along with resource files, introductory documentation, a DNN manifest (Journal.dnn), and a couple of database install/uninstall scripts (01.00.00.SqlDataProvider and Uninstall.SqlDataProvider).&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_62.png&quot;&gt;&lt;img width=&quot;54&quot; height=&quot;54&quot; title=&quot;Template items in DesktopModules&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Template items in DesktopModules&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_29.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Inside the App_Code folder, a folder called “ModuleName” has been created. It contains classes for the module’s Custom Business Object (CBO), Business Logic Layer (BLL) and Data Access Layer (DAL).&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_64.png&quot;&gt;&lt;img width=&quot;88&quot; height=&quot;54&quot; title=&quot;Templte items in App_Code&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Template items in App_Code&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_30.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; &lt;h1&gt;Part 2 – Rename the “ModuleName” Folders&lt;/h1&gt; &lt;p&gt;Besides creating the files and folders, a Documentation.html file will be opened in the Editor window with instructions to rename the “ModuleName” folders to the name you gave the module in the Add New Item dialog.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;970&quot; height=&quot;457&quot; title=&quot;&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Documentation.html&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image23_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;Walking through this part, you would perform the following steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;In the Solution Explorer, expand the App_Code folder until you see a folder called “ModuleName”. Right-click the “ModuleName” folder and choose “Rename” from the menu; then give it the new name of “YourCompany.Journal”.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_66.png&quot;&gt;&lt;img width=&quot;86&quot; height=&quot;54&quot; title=&quot;Rename ModuleName folder&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Rename ModuleName folder&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_31.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Expand the DesktopModules folder until you see another folder called “ModuleName”. Right-click the “ModuleName” folder and give it the name “YourCompany.Journal”.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_68.png&quot;&gt;&lt;img width=&quot;68&quot; height=&quot;54&quot; title=&quot;Rename ModuleName folder&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Rename ModuleName folder&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_32.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;At this point, we have done all that is needed inside Visual Studio to create the module. Remember, we’re using the built-in functionality of the Dynamic Module template to provide all of the desired functionality of our Journal module, so no coding is required for this project. The remaining steps for setting up the module will happen inside the browser as we view the DotNetNuke web application.&lt;/p&gt; &lt;h1&gt;Part 3 – Create the Database Tables&lt;/h1&gt; &lt;p&gt;The Dynamic Module template comes with a file named “01.00.00.SqlDataProvider”. This file has the DNN-ready scripts to create the database tables and stored procedures for the module. Because the scripts are “DNN-ready”, they can be executed in the browser by the Super User. Follow these steps to install the database items.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Press [CTRL] + [F5] in Visual Studio to launch the website in a browser. Visual Studio will build (or compile) the website, so this step may take a few minutes, depending on your computer’s processing power.  &lt;li&gt;If this is the first time you’ve run the website in your browser, you will get the DotNetNuke Installation Wizard. This wizard guides you through the setup of your DotNetNuke website.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_70.png&quot;&gt;&lt;img width=&quot;106&quot; height=&quot;54&quot; title=&quot;DotNetNuke Installation Wizard&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;DotNetNuke Installation Wizard&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_33.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;ol&gt; &lt;li&gt;For this tutorial, select the “Auto” option and click “Next”. This sets up the website to use an SQL Express database in the website’s App_Data folder. All of the other options for the website are already configured in the web.config file.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_72.png&quot;&gt;&lt;img width=&quot;168&quot; height=&quot;54&quot; title=&quot;Auto Installation&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Auto Installation&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_34.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;The installation process will take a few seconds. Once it is complete, click the link at the bottom of the page to access the website.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_74.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;47&quot; title=&quot;Access Your Portal&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Click Here to Access Your Portal&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_35.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;li&gt;On the website, log on as the Super User. In the auto-installation, the username and password for the “Host” Super User account are displayed on the default home page. Once logged in, you will have full access to the website, which is required in order to install modules. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_76.png&quot;&gt;&lt;img width=&quot;175&quot; height=&quot;54&quot; title=&quot;Host Login&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Host Login&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_36.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;li&gt;From the Host menu, select SQL. This will open a page where you can run database scripts and execute any SQL on the portal’s database.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_78.png&quot;&gt;&lt;img width=&quot;41&quot; height=&quot;50&quot; title=&quot;Menu: Host-&amp;gt;SQL&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Menu: Host-&amp;gt;SQL&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_37.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Click the “Choose File” button and browse to the folder that holds your module. Select the “01.00.00.SqlDataProvider” file to upload. Then click the “Load” link on the page.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_80.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;49&quot; title=&quot;Choose File&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;SQL - Choose File&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_38.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;br&gt;This will load the file’s contents into the text box for running against the database.  &lt;li&gt;Make sure the “Run as Script” checkbox is selected and click the “Execute” link.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_82.png&quot;&gt;&lt;img width=&quot;206&quot; height=&quot;54&quot; title=&quot;Run as Script&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Run as Script&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_39.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;The page should refresh with a message “The Query completed successfully!”&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_84.png&quot;&gt;&lt;img width=&quot;176&quot; height=&quot;50&quot; title=&quot;Query Successful&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Query Successful&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_40.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;h1&gt;Part 4 – Register the Module&lt;/h1&gt; &lt;p&gt;With the database table and stored procedures installed, we can now proceed with registering the new module in the DotNetNuke website.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;From the Host menu, select Module Definitions. This opens a page that lists all the installed modules. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcd2f7c9.png&quot;&gt;&lt;img width=&quot;62&quot; height=&quot;50&quot; title=&quot;Menu: Host-&amp;gt;Module Definitions&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Menu: Host-&amp;gt;Module Definitions&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcd2f7c9_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;From the Module Definitions action menu, select “Create New Module”.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_86.png&quot;&gt;&lt;img width=&quot;48&quot; height=&quot;54&quot; title=&quot;Action Menu: Create New Module&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Action Menu: Create New Module&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_41.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;In the Create New Module form, select “Manifest” from the drop-down-list to create the module from the Journal.dnn installation manifest.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_88.png&quot;&gt;&lt;img width=&quot;155&quot; height=&quot;54&quot; title=&quot;Create Module From Manifest&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Create Module From Manifest&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_42.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Select “YourCompany.Journal” as the Module Folder and “Journal.dnn” as the Resource. Check the “Add Test Page” checkbox and then click the “Create Module” link.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_90.png&quot;&gt;&lt;img width=&quot;91&quot; height=&quot;54&quot; title=&quot;Create New Module Form&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Create New Module Form&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_43.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;On the Test Page, you should see an instance of the Journal module. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;5cfee8dd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image65.png&quot;&gt;&lt;img width=&quot;204&quot; height=&quot;45&quot; title=&quot;Module Test Page&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Module Test Page&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image65_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;h1&gt;Using the Module&lt;/h1&gt; &lt;p&gt;The Journal module adds a default entry when it is first placed on a page. A user with Edit rights to the module can&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Edit existing content&lt;/b&gt; by clicking the pencil icon beside a specific entry,  &lt;li&gt;&lt;b&gt;Add new content&lt;/b&gt; by clicking the “Add Content” link or choosing “Add Content” from the Action menu, and  &lt;li&gt;&lt;b&gt;Modify the layout&lt;/b&gt; of journal entries through the module’s settings. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;img width=&quot;574&quot; height=&quot;120&quot; title=&quot;Journal Module&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Journal Module&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image68_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;h2&gt;A) Editing and Adding Content&lt;/h2&gt; &lt;p&gt;Editing existing journal entries is easy. Simply follow these steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Click the pencil icon beside the journal entry you wish to edit. This will open the entry in a new control (EditJournal.ascx) to allow editing. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_2.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;53&quot; title=&quot;Journal Module&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Journal Module&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;The Edit page for the module sports a Rich Text Editor with the existing content already loaded. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_4.png&quot;&gt;&lt;img width=&quot;141&quot; height=&quot;54&quot; title=&quot;Edit Journal Page&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Edit Journal Page&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_1.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Click inside the Rich Text Editor to begin changing the content to whatever you like. With the full features of the Rich Text Editor, you can apply text formatting, insert images, and much more! &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_6.png&quot;&gt;&lt;img width=&quot;138&quot; height=&quot;54&quot; title=&quot;Edit Journal - Rich Text Editor&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Edit Journal - Rich Text Editor&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_2.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;When you are finished, click “Update” to save your changes and return to the regular view of your module. &lt;br&gt;&lt;img width=&quot;167&quot; height=&quot;23&quot; title=&quot;Update Cancel Delete Buttons&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Update Cancel Delete Buttons&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_9.png&quot; border=&quot;0&quot;&gt;  &lt;li&gt;Journal entries can be edited at any time. They can also be deleted. To delete a Journal entry, click the Delete button in the Edit Journal control. Please remember that once deleted, the entry cannot be retrieved.&amp;nbsp; &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcdc2e43.png&quot;&gt;&lt;img width=&quot;153&quot; height=&quot;54&quot; title=&quot;Delete Confirmation Box&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Delete Confirmation Box&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcdc2e43_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;Adding new journal entries is as easy as editing existing ones. In the background, it uses the exact same user control – EditJournal.ascx.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Click the “Add Content” link below the existing content or select “Add Content” from the module’s action menu. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_11.png&quot;&gt;&lt;img width=&quot;139&quot; height=&quot;29&quot; title=&quot;Add Content Link&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Add Content Link&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_4.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcdf2474.png&quot;&gt;&lt;img width=&quot;83&quot; height=&quot;50&quot; title=&quot;Action Menu: Add Content&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Action Menu: Add Content&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLcdf2474_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;The Edit page now shows the Rich Text Editor without any content. Enter whatever content you wish in the editor, then click “Update” to save the entry. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_13.png&quot;&gt;&lt;img width=&quot;153&quot; height=&quot;54&quot; title=&quot;Edit Journal - Add Content&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Edit Journal - Add Content&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_5.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;h1&gt;B) Modifying the Layout&lt;/h1&gt; &lt;p&gt;By default, the Journal module displays the content of each journal entry without any formatting.&lt;/p&gt; &lt;p&gt;There is more information stored than just the content, however. Each journal entry records the ID of the user who wrote it and the date that it was entered. There is also the unique ID that each entry contains in the database table, along with the ID of the module to which it belongs. All of these pieces of information can be displayed in the module by simply modifying the template that controls the layout.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Click the Settings icon (&lt;img width=&quot;14&quot; height=&quot;16&quot; title=&quot;Settings Icon&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Settings Icon&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-SNAGHTMLce58558_1.png&quot; border=&quot;0&quot;&gt;) or select “Settings” from the module’s action menu. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_15.png&quot;&gt;&lt;img width=&quot;34&quot; height=&quot;54&quot; title=&quot;Action Menu: Settings&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Action Menu: Settings&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_6.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Expand the Journal Settings section at the bottom of the page. In the Template text box, enter whatever HTML you wish to use in creating the layout for the content. You can use placeholders to represent the specific information you want to use from the journal entry. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_17.png&quot;&gt;&lt;img width=&quot;162&quot; height=&quot;54&quot; title=&quot;Journal Settings&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Journal Settings&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_7.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Click “Update” to save the module settings. &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;The Journal module supports the following placeholders. These should be entered in upper-case in the template.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;[CONTENT]&lt;/b&gt; – This is the content that was entered through the Rich Text Editor when adding/editing entries. As “rich text”, it contains HTML tags for formatting, styling, images, etc.  &lt;li&gt;&lt;b&gt;[CREATEDDATE]&lt;/b&gt; – The date that the entry was first created.  &lt;li&gt;&lt;b&gt;[CREATEDBYUSER]&lt;/b&gt; – The ID of the user who created the entry.  &lt;li&gt;&lt;b&gt;[ITEMID]&lt;/b&gt; – An ID that uniquely identifies the entry in the database table. It is auto-generated whenever a new entry is created.  &lt;li&gt;&lt;b&gt;[MODULEID]&lt;/b&gt; – The ID of the module instance on the website. Each time a Journal module is added to a page, it is given its own unique Module ID to distinguish it from other instances of the module. &lt;/li&gt;&lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; The help text for the Template states that one of the placeholders is [CREATEDBYUSERNAME], but that is not actually supported in the default functionality of the Dynamic Module template. All placeholders are actually the property names of the “info” class for the module. See the section “Understanding the Module” for more details.&lt;/p&gt;&lt;/blockquote&gt;Creating this first version of the Journal module has been pretty easy. No coding was required because the functionality was already built into the DotNetNuke Dynamic Module template. It can be used as journal for one person or for a group of people, simply by applying the right Edit permissions in the module’s settings. &lt;br&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;5cfee8dd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image71.png&quot;&gt;&lt;img width=&quot;350&quot; height=&quot;198&quot; title=&quot;Sample Journal Module&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Sample Journal Module&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image71_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With a fully-functional module in place, we have a basis from which to begin exploring how modules are built and how they interact with the DotNetNuke framework. In the next section we will dive into the code for the module to see how it all works.&lt;/p&gt; &lt;h1&gt;Understanding the Module&lt;/h1&gt; &lt;p&gt;DotNetNuke modules have traditionally been modeled using a layered architecture (like Client-Server). The functionality is broken into distinct layers, each with their own responsibility.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_21.png&quot;&gt;&lt;img width=&quot;250&quot; height=&quot;146&quot; title=&quot;DotNetNuke Module Architecture&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;DotNetNuke Module Architecture&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_9.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Database&lt;/b&gt; – The database will hold the table, which stores the module’s information, and stored procedures, which are used to access the table.  &lt;li&gt;&lt;b&gt;CBOs&lt;/b&gt; – A Custom Business Object (CBO) is essentially a class that represents a single row of data from the database table.  &lt;li&gt;&lt;b&gt;DAL&lt;/b&gt; – The Data Access Layer (or DAL) is the part of the module that is responsible for communicating with the database.  &lt;li&gt;&lt;b&gt;BLL&lt;/b&gt; – The Business Logic Layer (BLL) embodies the data and services of the module; through it, the user interface (and the DotNetNuke framework) gain access to the module’s data.  &lt;li&gt;&lt;b&gt;UI&lt;/b&gt; – The User Interface (UI) layer is a set of User Controls which allow people to View and Edit the module’s content as well as manage its unique Settings. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;From a coding perspective (and possibly a design perspective), it works well to create the module from the back end (database) to the front end (user interface). Likewise, we’ll examine the Journal module starting with the database scripts.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Those new to programming will usually code their modules from the back end to the front end, since it is easier to take advantage of Visual Studio’s Intellisense. It’s not a hard and fast rule, however. Developers who take Test-Driven Design (TDD) or Behaviour Driven Design (BDD) approaches will likely start elsewhere.&lt;/p&gt;&lt;/blockquote&gt; &lt;h1&gt;In Depth Part 1 – The Database Scripts&lt;/h1&gt; &lt;p&gt;The Journal module has two database scripts. One is for installing the tables and stored procedures. The other is for uninstalling these items. They are named “01.00.00.SqlDataProvider” and “Uninstall.SqlDataProvider”, respectively. All of the database scripts that are processed by DotNetNuke should have the “.SqlDataProvider” file extension.&lt;/p&gt; &lt;p&gt;For the most part, these scripts use standard SQL syntax. The only unique aspect to these scripts is the inclusion of two placeholders which DotNetNuke uses to tailor these scripts to the active database environment. These placeholders are enclosed in curly braces to make it easy for the DotNetNuke framework to perform a search and replace on the scripts before running them on the database server.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;{databaseOwner}&lt;/b&gt; – For security purposes, some databases use a custom account name for the database owner (DBO) other than the default name of “dbo”. The decision to use a specific account as the DBO will be made outside of the DotNetNuke environment (typically by a DBA), yet the DotNetNuke framework needs to be aware of that name in order to properly access . During a typical or custom installation, the DotNetNuke Install Wizard provides opportunity to enter this account name.  &lt;li&gt;&lt;b&gt;{objectQualifier}&lt;/b&gt; – It is actually possible (though highly unusual) to have more than one set of DotNetNuke database objects in the same physical database. This is done by adding a prefix to the tables, stored procedures, etc. This prefix is called an “Object Qualifier”. Each set of database objects is completely distinct from each other. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Every module’s database scripts should make use of these two placeholders when identifying objects in the database, such as table and stored procedure names. Failure to do so will cause your module’s installation to crash in those rare cases where the Database Administrator (DBA) has made requirements for these in their database server environments.&lt;/p&gt; &lt;h2&gt;01.00.00.SqlDataProvider&lt;/h2&gt; &lt;p&gt;Notice the unique name given to this script. The first part of the file name is the module’s version number. The file extension of “.SqlDataProvider” tells DotNetNuke that this is a database script. When creating new versions of your module, you can add new scripts for modifying the module’s database objects; simply add new files using the module’s version number as the main name along with the .SqlDataProvider extension. Thus, the next major version of your module would have the name “02.00.00.SqlDataProvider”.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The following scripts preface the name of every table, stored procedure, constraint and index with the name “YourCompany_”. This is a standard practice to ensure that two module developers with similar table names won’t over-write each other’s work. Keeping it in mind will save your clients from potential problems and yourself from a bad reputation!&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Nested inside an if statement that checks if the module’s table has already been created, the first part of the script simply creates the table and sets primary key and foreign key indexes. (&lt;a href=&quot;mp1&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp1]   &lt;h3&gt;Create Table Script&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;not&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}YourCompany_Journal]&#39;&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsTable&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;BEGIN&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            [ModuleID] [&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            [ItemID] [&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;IDENTITY&lt;/span&gt;(1, 1),&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            [Content] [ntext] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            [CreatedByUser] [&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            [CreatedDate] [datetime] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NULL&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        )&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal] &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ADD&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [PK_{objectQualifier}YourCompany_Journal] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PRIMARY&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;KEY&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CLUSTERED&lt;/span&gt;  ([ItemID])&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NONCLUSTERED&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;INDEX&lt;/span&gt; [IX_{objectQualifier}YourCompany_Journal] &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ON&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal] ([ModuleID])&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;WITH&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOCHECK&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ADD&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [FK_{objectQualifier}YourCompany_Journal_{objectQualifier}Modules] &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;FOREIGN&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;KEY&lt;/span&gt; ([ModuleID]) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;REFERENCES&lt;/span&gt; {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ON&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DELETE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CASCADE&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;FOR&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;REPLICATION&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;END&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp1]  &lt;p&gt;Following the table creation, another series of if statements check for the module’s stored procedures, dropping each stored procedure that already exists in the database. (&lt;a href=&quot;mp2&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp2]   &lt;h3&gt;Drop Stored Procedures&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}YourCompany_GetJournals]&#39;&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_GetJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}YourCompany_GetJournal]&#39;&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_GetJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}YourCompany_AddJournal]&#39;&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_AddJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}YourCompany_UpdateJournal]&#39;&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_UpdateJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;exists&lt;/span&gt; (&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; * &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; dbo.sysobjects &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt; id = object_id(N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;{databaseOwner}[{objectQualifier}YourCompany_DeleteJournal]&#39;&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; OBJECTPROPERTY(id, N&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&#39;IsProcedure&#39;&lt;/span&gt;) = 1)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;drop&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_DeleteJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp2]  &lt;p&gt;At first glance, these if statements may seem unnecessary for the first version of the module. However, if there are problems with the installation of the module, during either production or development, these if statements come in handy for re-running the installation. They give an opportunity to clean up any lingering items while ensuring that the rest of the script has a chance to run. Without them, re-running the script could fail because of pre-existing items.&lt;/p&gt; &lt;p&gt;The last portion of the installation script creates the stored procedures. For this module, there are five stored procedures.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;GetJournals&lt;/b&gt; – Returns all the journal entries for a specific module.  &lt;li&gt;&lt;b&gt;GetJournal &lt;/b&gt;– Returns a single, specific journal entry for a specific module.  &lt;li&gt;&lt;b&gt;AddJournal &lt;/b&gt;– Creates a new row in the table for a new journal entry.  &lt;li&gt;&lt;b&gt;UpdateJournal &lt;/b&gt;– Used for editing an existing journal entry with updated information.  &lt;li&gt;&lt;b&gt;DeleteJournal &lt;/b&gt;– Permanently removes a row from the table for a specific journal entry. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;In their entirety, here are the &lt;a href=&quot;mp3&quot;&gt;&lt;strong&gt;five stored procedures&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;[mp3]   &lt;h3&gt;Stored Procedures Scripts&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_GetJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;       ItemId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;       Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;       CreatedByUser,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;       {objectQualifier}YourCompany_Journal.CreatedDate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; {objectQualifier}YourCompany_Journal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;with&lt;/span&gt; (nolock)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;left&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;outer&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;join&lt;/span&gt; {objectQualifier}Users &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;on&lt;/span&gt; {objectQualifier}YourCompany_Journal.CreatedByUser = {objectQualifier}Users.UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt;  ModuleId = @ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_GetJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        @ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;select&lt;/span&gt; ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;       ItemId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;       Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;       CreatedByUser,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;       {objectQualifier}YourCompany_Journal.CreatedDate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt; {objectQualifier}YourCompany_Journal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;with&lt;/span&gt; (nolock)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;left&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;outer&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;join&lt;/span&gt; {objectQualifier}Users &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;on&lt;/span&gt; {objectQualifier}YourCompany_Journal.CreatedByUser = {objectQualifier}Users.UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt;  ModuleId = @ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt; ItemId = @ItemId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_AddJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @ModuleId       &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @Content        ntext,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @UserID         &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;insert &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;into&lt;/span&gt; {objectQualifier}YourCompany_Journal (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    CreatedByUser,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    CreatedDate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;values&lt;/span&gt; (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @UserID,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    getdate()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_UpdateJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId       &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      @ItemId         &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @Content        ntext,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @UserID         &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;update&lt;/span&gt; {objectQualifier}YourCompany_Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;set&lt;/span&gt;    Content       = @Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;       CreatedByUser = @UserID,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;       CreatedDate   = getdate()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt;  ModuleId = @ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt;    ItemId = @ItemId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_DeleteJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId       &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        @ItemId         &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;delete&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;from&lt;/span&gt;   {objectQualifier}YourCompany_Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;where&lt;/span&gt;  ModuleId = @ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;and&lt;/span&gt;    ItemId = @ItemId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt;[/mp3]  &lt;h2&gt;Uninstall.SqlDataProvider&lt;/h2&gt; &lt;p&gt;Because modules are “plug-ins” to a DotNetNuke website, it is important to make it easy for website owners to “un-plug” the module. The “Uninstall.SqlDataProvider” script ensures the clean removal of all the database objects related to the module.&lt;/p&gt; &lt;p&gt;This script begins by clearing all the table constraints and indexes. These have to be cleared before the database table can be removed. Next, the table itself is removed. The last part of this script removes all the stored procedures for the module. (&lt;a href=&quot;mp4&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp4]   &lt;h3&gt;Alter Table Script&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [FK_{objectQualifier}Journal_{objectQualifier}Modules]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ALTER&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal] &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CONSTRAINT&lt;/span&gt; [PK_{objectQualifier}YourCompany_Journal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;INDEX&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal].[IX_{objectQualifier}YourCompany_Journal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;TABLE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_Journal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_GetJournals]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_GetJournal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_AddJournal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_UpdateJournal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GO&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;DROP&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;PROCEDURE&lt;/span&gt; {databaseOwner}[{objectQualifier}YourCompany_DeleteJournal]&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt;[/mp4]  &lt;p&gt;It’s a good idea to always perform a test of the un-install script, followed by a re-running of the installation script. This can highlight any errors or omissions that could cause problems on someone’s DotNetNuke website.&lt;/p&gt; &lt;h1&gt;In Depth Part 2 – The Custom Business Object&lt;/h1&gt; &lt;p&gt;The database is separate from the web application. Because of this, the web application needs a way to hold any data it wants to retrieve from or send to the database. One of the ways this is done is with Custom Business Objects (CBOs). A CBO (sometimes called a “Business Entity”) is simply a class whose design or structure matches the database table.&lt;/p&gt; &lt;p&gt;In this module, there is a single database table, named “YourCompany_Journal”. There is a corresponding class in the web application named JournalInfo which has public properties, one for each column in the database table. In essence, each instance of the JournalInfo class will represent a single row of data from the database table.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;9b8f15bd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_18.png&quot;&gt;&lt;img width=&quot;227&quot; height=&quot;350&quot; title=&quot;JournalInfo Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border: 0px currentcolor; display: inline;&quot; alt=&quot;JournalInfo Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_3.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The class is designed as a simple POCO (Plain Old CLR Object). There are private fields with public properties, but no methods. Its sole purpose is to store data about a single journal entry. The real value of the class comes into play when it is used in the rest of the web application to package, transport and manipulate this data. (&lt;a href=&quot;mp5&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp5]   &lt;h3&gt;JournalInfo Class&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Configuration&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Data&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; YourCompany.Modules.Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; local property declarations&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _CreatedByUser &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _CreatedDate &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DateTime&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; initialization&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt;()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; public properties&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ModuleId() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Value &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                _ModuleId = Value&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ItemId() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _ItemId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Value &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                _ItemId = Value&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; Content() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _Content&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Value &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                _Content = Value&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; CreatedByUser() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _CreatedByUser&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Value &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                _CreatedByUser = Value&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; CreatedDate() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DateTime&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _CreatedDate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Value &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DateTime)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                _CreatedDate = Value&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Set&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp5]  &lt;h1&gt;In Depth Part 3 – The Data Access Layer&lt;/h1&gt; &lt;p&gt;The Data Access Layer (DAL) is where information is exchanged between the web application and the database.&lt;/p&gt; &lt;p&gt;Since DotNetNuke is a web application that can have different types of databases in the back end, such as Microsoft SQL Server or Oracle, it is a common practice to build a bit of database abstraction into the DAL portion of the module. For this module, there are two classes that make up the DAL.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;5cfee8dd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image3.png&quot;&gt;&lt;img width=&quot;156&quot; height=&quot;173&quot; title=&quot;DAL Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;DAL Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image3_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At first, it might seem strange to need two classes for the DAL. Strictly speaking, both classes are not needed for this sample module. However, part of the idea behind the Dynamic Module template is to provide a good example of common “best practices” for module developers. One of those best practices is the idea of designing with the idea of allowing for different database engines backing the DotNetNuke website. Hence the two classes.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;DataProvider&lt;/b&gt; – This is an abstract class that specifies the specific methods for database CRUD actions (Create, Read, Update and Delete).  &lt;li&gt;&lt;b&gt;SqlDataProvider&lt;/b&gt; – This is a concrete class that inherits from DataProvider. It implements all of the abstract methods of the base class to provide the specific code required to perform the CRUD actions on a particular database. Since Microsoft’s SQL Server is used by default in most DNN modules, this class is written to do the CRUD for that database. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Each of these classes fulfill an important role in the DAL, and together they set the basis for creating flexible modules in the DotNetNuke ecosystem.&lt;/p&gt; &lt;h2&gt;DataProvider.vb&lt;/h2&gt; &lt;p&gt;The following class diagram lays out the base class for the module’s DAL. The methods in &lt;i&gt;italics&lt;/i&gt; are abstract methods which the concrete classes (such as SqlDataProvider) will have to override to provide the specific code to run when the methods are called.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;5cfee8dd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image6.png&quot;&gt;&lt;img width=&quot;564&quot; height=&quot;289&quot; title=&quot;DataProvider Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;DataProvider Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image6_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For the CRUD actions, the following abstract methods are defined. Not surprisingly, each of these method names mirror the stored procedure name which will eventually be called by the concrete DAL class.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;GetJournals&lt;/b&gt; – This takes the ID of the module instance on the page and returns all of the Journal entries for that module.  &lt;li&gt;&lt;b&gt;GetJournal &lt;/b&gt;– This gets an individual Journal entry.  &lt;li&gt;&lt;b&gt;AddJournal &lt;/b&gt;– This method takes the bare-bones data needed to add a new Journal entry to the database.  &lt;li&gt;&lt;b&gt;UpdateJournal &lt;/b&gt;– This method also takes the minimal amount of information needed to modify a Journal entry in the database.  &lt;li&gt;&lt;b&gt;DeleteJournal &lt;/b&gt;– This method takes the ID of the module instance and the specific Journal entry that is to be removed from the database. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;The class also defines the following static (shared in VB) items.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A private field, &lt;b&gt;&lt;i&gt;objProvider&lt;/i&gt;&lt;/b&gt;, that holds a reference to a concrete DataProvider object.  &lt;li&gt;A shared constructor (and private shared subroutine &lt;b&gt;&lt;i&gt;CreateProvider&lt;/i&gt;&lt;/b&gt;) that sets the &lt;i&gt;&lt;strong&gt;objProvider&lt;/strong&gt;.&lt;/i&gt;  &lt;li&gt;A public method &lt;b&gt;&lt;i&gt;Instance&lt;/i&gt;&lt;/b&gt; that returns the &lt;b&gt;&lt;i&gt;objProvider&lt;/i&gt;&lt;/b&gt;. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Together, these static (shared) items embody a Singleton Pattern that ensures a single instance of the DAL class for use by the Business Logic Layer.&lt;/p&gt; &lt;p&gt;One of the interesting methods is the &lt;b&gt;&lt;i&gt;CreateProvider&lt;/i&gt;&lt;/b&gt; method. It works by calling the CreateObject method of the Reflection class in the DotNetNuke.Framework namespace. (&lt;a href=&quot;mp6&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp6]   &lt;h3&gt;DataProvider.CreateProvider&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Shared&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; CreateProvider()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            objProvider = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(Framework.Reflection.CreateObject(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;data&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;YourCompany.Modules.Journal&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;), DataProvider)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp6]  &lt;p&gt;Essentially, the CreateObject method checks the configuration file (web.config) for the name of the concrete class to use as the DataProvider instance. By default, the &amp;lt;data&amp;gt; element of the &amp;lt;dotnetnuke&amp;gt; section of the configuration file defines a default class name to look for: &lt;b&gt;&lt;i&gt;SqlDataProvider&lt;/i&gt;&lt;/b&gt;. The CreateObject method combines this name with the supplied namespace (&quot;YourCompany.Modules.Journal&quot;) to get the specific concrete object to create for your module’s data provider (&quot;YourCompany.Modules.Journal.SqlDataProvider&quot;). Here is the relevant portion of the web.config that names the provider. (&lt;a href=&quot;mp7&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp7]   &lt;h3&gt;SqlDataProvider in Web.Config&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;data&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;defaultProvider&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SqlDataProvider&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;providers&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;clear&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;add&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SqlDataProvider&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DotNetNuke.Data.SqlDataProvider, DotNetNuke.SqlDataProvider&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                     &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;connectionStringName&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SiteSqlServer&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;upgradeConnectionString&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                     &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;providerPath&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;~\Providers\DataProviders\SqlDataProvider\&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                     &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;objectQualifier&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;databaseOwner&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;dbo&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;providers&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp7]  &lt;p&gt;The following link is to the complete code for the module’s DataProvider class. (&lt;a href=&quot;mp8&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp8]   &lt;h3&gt;DataProvider Class&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; YourCompany.Modules.Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MustInherit&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; DataProvider&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Shared/Static Methods&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; singleton reference to the instantiated object &lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Shared&lt;/span&gt; objProvider &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DataProvider = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; constructor&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Shared&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt;()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            CreateProvider()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; dynamically create provider&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Shared&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; CreateProvider()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            objProvider = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(Framework.Reflection.CreateObject(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;data&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;YourCompany.Modules.Journal&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;), DataProvider)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; return the provider&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Shared&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Shadows&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; Instance() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DataProvider&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; objProvider&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Abstract methods&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MustOverride&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournals(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; IDataReader&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MustOverride&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; IDataReader&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MustOverride&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; AddJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MustOverride&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; UpdateJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                              &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MustOverride&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; DeleteJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;,&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp8]  &lt;h2&gt;SqlDataProvider.vb&lt;/h2&gt; &lt;p&gt;The SqlDataProvider class is a “concrete” class that inherits from the DataProvider class. By “concrete” I mean that this class is the one that does the actual work of the generic DataProvider class. All of the abstract methods of DataProvider are overridden with specific code that will execute when those methods are called.&lt;/p&gt; &lt;p&gt;Besides having code for the abstract methods of its base class, the SqlDataProvider has a number of other fields, properties and methods which provide background support to these overridden methods. The following class diagram shows the complete design of the SqlDataProvider class for the Journal module.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;5cfee8dd&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image9.png&quot;&gt;&lt;img width=&quot;563&quot; height=&quot;606&quot; title=&quot;SqlDataProvider Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;SqlDataProvider Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image9_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Part of the key to understanding the purpose of these behind-the-scenes fields and properties is to look at the database script and review how one of the stored procedures was written. (&lt;a href=&quot;mp9&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp9]   &lt;h3&gt;AddJournal Stored Procedure&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; {databaseOwner}{objectQualifier}YourCompany_AddJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId       &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @Content        ntext,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @UserID         &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;insert &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;into&lt;/span&gt; {objectQualifier}YourCompany_Journal (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    CreatedByUser,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    CreatedDate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;values&lt;/span&gt; (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @UserID,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    getdate()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp9]  &lt;p&gt;Note that all the object names begin with “YourCompany_”. This name is supplied as a constant in the SqlDataProvider class, so as to make managing the name easier.&lt;/p&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Const&lt;/span&gt; ModuleQualifier &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;YourCompany_&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt; &lt;p&gt;Another item to note from the database script are the placeholders {databaseOwner} and {objectQualifier}. These parts get supplied by the DotNetNuke framework when the scripts are run to create the database objects. Once created on the database, the stored procedure might look like this. (&lt;a href=&quot;mp10&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp10]   &lt;h3&gt;AddJournal Stored Procedure – After Processing&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;create&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;procedure&lt;/span&gt; dbo.HOT4DNN_YourCompany_AddJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId       &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @Content        ntext,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @UserID         &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;int&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;as&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;insert &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;into&lt;/span&gt; HOT4DNN_YourCompany_Journal (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    CreatedByUser,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    CreatedDate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;values&lt;/span&gt; (&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @ModuleId,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    @Content,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    @UserID,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    getdate()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp10]  &lt;p&gt;Since DotNetNuke knew to use “dbo.” for the database owner and “HOT4DNN_” as the object qualifier, they have become a physical part of the names for the stored procedures and databases of the module. In order to call these stored procedures from the DAL, the SqlDataProvider needs to know their names. That’s why there are two properties in the class which are named DatabaseOwner and ObjectQualifier.&lt;/p&gt; &lt;p&gt;To see how these properties are used, consider the following code from SqlDataProvider which calls the AddJournal stored procedure. (&lt;a href=&quot;mp11&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;) Note that the basic name of the stored procedure (&quot;AddJournal&quot;) is passed into a method called GetFullyQualifiedName. This method is part of the SqlDataProvider class. It puts the DatabaseOwner, ObjectQualifier and ModuleQualifier strings in front of the stored procedure’s name. (&lt;a href=&quot;mp12&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;) Thus, the final stored procedure name is used when calling the database: &lt;strong&gt;&quot;dbo.HOT4DNN_YourCompany_AddJournal&quot;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;[mp11]   &lt;h3&gt;SqlDataProvider.AddJournal&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; AddJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            SqlHelper.ExecuteNonQuery(ConnectionString,&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                      GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;AddJournal&quot;&lt;/span&gt;),&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                      ModuleId, Content, UserId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp11]  &lt;p&gt;[mp12]   &lt;h3&gt;SqlDataProvider.GetFullyQualifiedName&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; name &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; DatabaseOwner &amp;amp; ObjectQualifier &amp;amp; ModuleQualifier &amp;amp; name&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Function&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp12]  &lt;p&gt;The values for the DatabaseOwner and ObjectQualifier properties of SqlDataProvider are set in that class’ constructor (&lt;a href=&quot;mp13&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;). It pulls the information from the web.config file and establishes a pattern that is expected for object qualifier and database owner text.&lt;/p&gt; &lt;p&gt;If present, the objectQualifier should end with an underscore (_). The underscore is merely a matter of “convention” or common practice among DNN modules – its presence helps to separate the objectQualifier from the other part of the database object names to make it more “human readable”. The objectQualifier acts as a “prefix” to the database object, but that is only in terms of human readability; the objectQualifier actually becomes a part of the object name (“YourCompany_AddJournal”, for example, is a stored procedure name).&lt;/p&gt; &lt;p&gt;In a similar vein, if the databaseOwner is present, then it should end with a period (.). The period is not mere convention, however. It is required as part of the syntax of SQL, because it formally separates the “schema”&amp;nbsp; name (databaseOwner) from the database object name (which might be a table, stored precedure, etc).&lt;/p&gt; &lt;p&gt;[mp13]   &lt;h3&gt;Part of SqlDataProvider Constructor&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            _objectQualifier = objProvider.Attributes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;objectQualifier&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; _objectQualifier &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;And&lt;/span&gt; _objectQualifier.EndsWith(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;_&quot;&lt;/span&gt;) = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                _objectQualifier += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;_&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            _databaseOwner = objProvider.Attributes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;databaseOwner&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; _databaseOwner &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;And&lt;/span&gt; _databaseOwner.EndsWith(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;.&quot;&lt;/span&gt;) = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                _databaseOwner += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; If&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp13]  &lt;p&gt;This information is pulled from the DotNetNuke framework (which, in turn, was retrieved from the web.config file) and stored in the SqlDataProvider object. You can examine the web.config file to see this information in the &amp;lt;data&amp;gt; element under the &amp;lt;dotnetnuke&amp;gt; section. (&lt;a href=&quot;mp14&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;) Based on the default settings for an auto-installed DNN portal, the full stored procedure name for AddJournal would be as follows.&lt;/p&gt; &lt;p&gt;&quot;dbo.YourCompany_AddJournal&quot;&lt;/p&gt; &lt;p&gt;[mp14]   &lt;h3&gt;&amp;lt;data&amp;gt; in Web.Config&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;data&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;defaultProvider&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SqlDataProvider&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;providers&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;clear&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;add&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SqlDataProvider&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;DotNetNuke.Data.SqlDataProvider, DotNetNuke.SqlDataProvider&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                     &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;connectionStringName&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SiteSqlServer&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;upgradeConnectionString&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                     &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;providerPath&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;~\Providers\DataProviders\SqlDataProvider\&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                     &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;objectQualifier&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;databaseOwner&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;dbo&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;providers&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp14]  &lt;h3&gt;SqlHelper&lt;/h3&gt; &lt;p&gt;The template’s code also leverages Microsoft’s Data Access Application Blocks (DAAB) for performing SQL Server-specific actions. The DAAB was introduced into DotNetNuke since its earliest inception because the DAAB provided clean and easy to use code for working with MS SQL Server. Central to DotNetNuke’s usage of the DAAB, the SqlHelper class has a number of methods for executing stored procedures on the database (two of which are used in this sample module). Let’s examine the first of these, ExecuteNonQuery, in the context of the AddJournal method of SqlDataProvider. (&lt;a href=&quot;mp15&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp15]   &lt;h3&gt;SqlDataProvider.AddJournal&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; AddJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            SqlHelper.ExecuteNonQuery(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                      GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;AddJournal&quot;&lt;/span&gt;), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                      ModuleId, Content, UserId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Sub&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp15]  &lt;p&gt;The ExecuteNonQuery method runs the stored procedure and returns the number of rows that were affected by the command (though, in the case of this sample, the return value is simply ignored). The version that is called has three parameters. The first is a string that represents the connection string. A connection string is basically the key information for connecting to the database. It identifies the server name and location, the logon credentials, etc. You can find these details in the web.config under the default connection string name of &quot;SiteSqlServer&quot;. (&lt;a href=&quot;mp16&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp16]   &lt;h3&gt;&amp;lt;connectionStrings&amp;gt; in Web.Config&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;add&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SiteSqlServer&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;connectionString&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Data Source=.\SQLExpress;Integrated Security=True;User Instance=True;AttachDBFilename=|DataDirectory|Database.mdf;&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;providerName&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;System.Data.SqlClient&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp16]  &lt;p&gt;The second parameter of ExecuteNonQuery is the name of the stored procedure (which we’ve already looked at in detail). The last parameter is actually defined as a ParamArray, meaning that it can be called with zero or more values of mixed types. These values must match up with the expected items in the stored procedure’s parameters (order and data type will matter). Thus, since the stored procedure expects the ModuleId (an &lt;strong&gt;int&lt;/strong&gt;), the Content (a &lt;strong&gt;ntext&lt;/strong&gt;) and the UserId (another &lt;strong&gt;int&lt;/strong&gt;), the call to SqlHelper provides these items in the same order, immediately after the stored procedure’s name.&lt;/p&gt; &lt;p&gt;The Update and Delete methods of SqlDataProvider also call ExecuteNonQuery, and you can see the patterns repeating themselves. (&lt;a href=&quot;mp17&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp17]   &lt;h3&gt;SqlDataProvider.UpdateJournal and SqlDataProvider.DeleteJournal&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; UpdateJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            SqlHelper.ExecuteNonQuery(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                      GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;UpdateJournal&quot;&lt;/span&gt;), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                      ModuleId, ItemId, Content, UserId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; DeleteJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            SqlHelper.ExecuteNonQuery(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                      GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DeleteJournal&quot;&lt;/span&gt;), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                      ModuleId, ItemId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Sub&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp17]  &lt;p&gt;The other SqlHelper method that comes into play happens with the Read actions of the SqlDataProvider class: GetJournals and GetJournal. That method’s name is ExecuteReader. It takes the exact same types of parameters as the ExecuteNonQuery, but it returns an SqlDataReader object. Here are the two methods, GetJournals and GetJournal, making use of this DAAB method. (&lt;a href=&quot;mp18&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp18]   &lt;h3&gt;SqlDataProvider.GetJournals and SqlDataProvider.GetJournal&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournals(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; IDataReader&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(SqlHelper.ExecuteReader(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                                 GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;GetJournals&quot;&lt;/span&gt;), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                                 ModuleId), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                         IDataReader)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; IDataReader&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(SqlHelper.ExecuteReader(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                                 GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;GetJournal&quot;&lt;/span&gt;), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                                 ModuleId, ItemId), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                         IDataReader)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Function&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp18]  &lt;p&gt;One thing to note is that the SqlDataReader that is returned from ExecuteReader is cast (through the CType function) to an IDataReader data type. The SqlDataReader implements the IDataReader interface, so the cast is completely valid. IDataReader is an interface supported by all databases accessible through the .NET framework. The base class defined the GetJournals and GetJournal methods to return this generic interface, so the conversion in our concrete SqlDataReader class is meant to comply with that pattern. Again, this is a code-reuse and maintainability characteristic that makes the DAL much easier to use from the Business Logic Layer (BLL).&lt;/p&gt; &lt;p&gt;That pretty much summarizes the SqlDataProvider class. Here is the complete code for that class. (&lt;a href=&quot;mp19&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp19]   &lt;h3&gt;SqlDataProvider Class&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Data&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Data.SqlClient&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; Microsoft.ApplicationBlocks.Data&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke.Common.Utilities&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; YourCompany.Modules.Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; SqlDataProvider&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Inherits&lt;/span&gt; DataProvider&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Private Members&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Const&lt;/span&gt; ProviderType &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Const&lt;/span&gt; ModuleQualifier &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;YourCompany_&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _providerConfiguration &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Framework.Providers.ProviderConfiguration = _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                Framework.Providers.ProviderConfiguration.GetProviderConfiguration(ProviderType)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _connectionString &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _providerPath &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _objectQualifier &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; _databaseOwner &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Constructors&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt;()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Read the configuration specific information for this provider&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objProvider &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Framework.Providers.Provider = _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(_providerConfiguration.Providers(_providerConfiguration.DefaultProvider), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                      Framework.Providers.Provider)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Read the attributes for this provider&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Get Connection string from web.config&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            _connectionString = Config.GetConnectionString()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; _connectionString = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Use connection string specified in provider&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                _connectionString = objProvider.Attributes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;connectionString&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            _providerPath = objProvider.Attributes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;providerPath&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            _objectQualifier = objProvider.Attributes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;objectQualifier&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; _objectQualifier &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;And&lt;/span&gt; _objectQualifier.EndsWith(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;_&quot;&lt;/span&gt;) = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                _objectQualifier += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;_&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            _databaseOwner = objProvider.Attributes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;databaseOwner&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; _databaseOwner &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;And&lt;/span&gt; _databaseOwner.EndsWith(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;.&quot;&lt;/span&gt;) = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                _databaseOwner += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Properties&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ConnectionString() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _connectionString&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ProviderPath() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _providerPath&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ObjectQualifier() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _objectQualifier&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; DatabaseOwner() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; _databaseOwner&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Private Methods&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; name &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; DatabaseOwner &amp;amp; ObjectQualifier &amp;amp; ModuleQualifier &amp;amp; name&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetNull(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Field &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; DotNetNuke.Common.Utilities.Null.GetNull(Field, DBNull.Value)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Public Methods&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournals(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; IDataReader&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(SqlHelper.ExecuteReader(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;GetJournals&quot;&lt;/span&gt;), ModuleId), IDataReader)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                             &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; IDataReader&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(SqlHelper.ExecuteReader(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;GetJournal&quot;&lt;/span&gt;), ModuleId, ItemId), IDataReader)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; AddJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            SqlHelper.ExecuteNonQuery(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;AddJournal&quot;&lt;/span&gt;), ModuleId, Content, UserId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; UpdateJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                           &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                           &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                           &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            SqlHelper.ExecuteNonQuery(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;UpdateJournal&quot;&lt;/span&gt;), ModuleId, ItemId, Content, UserId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; DeleteJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                           &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            SqlHelper.ExecuteNonQuery(ConnectionString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                GetFullyQualifiedName(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DeleteJournal&quot;&lt;/span&gt;), ModuleId, ItemId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Namespace&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp19]  &lt;p&gt;From the code we’ve looked at so far, one thing should be pretty evident. The DotNetNuke Dynamic Module template has a high degree of code re-use, which is critically important when it comes to maintaining your module.&lt;/p&gt; &lt;p&gt;From the CBO and DAL, we can now move on to the Business Logic Layer.&lt;/p&gt; &lt;h1&gt;In Depth Part 4 – The Business Logic Layer&lt;/h1&gt; &lt;p&gt;The Business Logic Layer (BLL) for the Dynamic Module Template is made up of a single class, often referred to as the module’s Controller class. This class acts as a “gateway” for the User Interface (and DotNetNuke) to access your module’s system.&lt;/p&gt; &lt;p&gt;As the name implies, the BLL is the place where the “business logic” of a module is placed. It is here that business rules are applied along with any other business or “workflow” type of processing. It is also a major point at which the DotNetNuke framework can hook into your module. In the Journal Module, there isn’t any significant business processing for the module itself; just simple data-in, data-out CRUD actions. However, as a plug-in point for the DotNetNuke framework, there is a bit of processing that it can perform in response to calls from DotNetNuke.&lt;/p&gt; &lt;p&gt;As a Content Management System (CMS), the DotNetNuke framework has facilities to search content as well as import and export content as XML. These facilities are aspects that any module can support, thereby allowing DotNetNuke to interface with the unique characteristics of that module. To make this possible, the DotNetNuke API defines specific Interfaces which modules can implement. All a module has to do is implement these interfaces and tell DotNetNuke the name of the class that supports these interfaces. Telling DotNetNuke the name of the class is done when the module is “registered” (during the module’s installation). We can see in the following screen shot of the website’s Module Definitions for the Journal module the fully-qualified name of the controller class.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_92.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;110&quot; title=&quot;Extension Settings&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Extension Settings&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_44.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The two interfaces that modules will often support are ISearchable and IPortable. DotNetNuke will check the module’s controller class to see if they support those interfaces. If they do, then DotNetNuke will be able to make calls to your controller class to perform searches or import/export requests.&lt;/p&gt; &lt;p&gt;Here are the class diagrams that describe ISearchable and IPortable.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;444&quot; height=&quot;117&quot; title=&quot;ISearchable Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;ISearchable Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_101.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;564&quot; height=&quot;135&quot; title=&quot;IPortable Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;IPortable Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_104.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;When a class implements an interface, it must supply the actual code for all of the methods and properties of the interface. The JournalController class implements these interfaces and provides the logic for searching and importing/exporting journal entries.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;564&quot; height=&quot;289&quot; title=&quot;JournalController Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;JournalController Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_107.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;To support an interface, a class must do two things. First, it must declare that it intends to implement the interface. (&lt;a href=&quot;mp20&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp20]   &lt;h3&gt;JournalController Class Declaration&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; Entities.Modules.ISearchable&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; Entities.Modules.IPortable&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp20]  &lt;p&gt;Second, the class must supply the code for the interfaces’ members. Here is the code which the JournalController supplies for the ISearchable interface. (&lt;a href=&quot;mp21&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp21]   &lt;h3&gt;JournalController.GetSearchItems&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetSearchItems(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModInfo &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Entities.Modules.ModuleInfo) _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;               &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DotNetNuke.Services.Search.SearchItemInfoCollection _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;               &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; DotNetNuke.Entities.Modules.ISearchable.GetSearchItems&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; SearchItemCollection &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; SearchItemInfoCollection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; colJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; List(Of JournalInfo) = GetJournals(ModInfo.ModuleID)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Each&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;In&lt;/span&gt; colJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; SearchItem &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; SearchItemInfo = _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; SearchItemInfo(ModInfo.ModuleTitle, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                                     objJournal.Content, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                                     objJournal.CreatedByUser, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                                     objJournal.CreatedDate, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                                     ModInfo.ModuleID, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                                     objJournal.ItemId.ToString, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                                     objJournal.Content, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                                     &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ItemId=&quot;&lt;/span&gt; &amp;amp; _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                                     objJournal.ItemId.ToString)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                SearchItemCollection.Add(SearchItem)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; SearchItemCollection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Function&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp21]  &lt;p&gt;The GetSearchItems method calls the JournalController’s GetJournals method to get all of the journal entries for the specific module instance. Then it loops through that list of entries, adding each one to the collection of search items. Lastly, it returns that search item collection to the DotNetNuke framework.&lt;/p&gt; &lt;p&gt;For the IPortable interface, the JournalController must implement the ExportModule and ImportModule methods. These methods will be called by the DotNetNuke framework when the user selects either Export or Import from the module’s action menu.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;144&quot; height=&quot;153&quot; title=&quot;Journal Module Action Menu&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Journal Module Action Menu&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_95.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;ExportModule generates an XML file with the content for each journal entry. When DotNetNuke calls this method, it will return this XML data as a simple string, which DotNetNuke will then embed in an XML file that will be saved to a file on the website. (&lt;a href=&quot;mp22&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp22]   &lt;h3&gt;JournalModule.ExportModule&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; ExportModule(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleID &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; DotNetNuke.Entities.Modules.IPortable.ExportModule&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; strXML &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; colJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; List(Of JournalInfo) = GetJournals(ModuleID)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; colJournals.Count &amp;lt;&amp;gt; 0 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;Journals&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Each&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;In&lt;/span&gt; colJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;Journal&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;content&amp;gt;&quot;&lt;/span&gt; &amp;amp; XMLEncode(objJournal.Content) &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;/content&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;/Journal&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;/Journals&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; strXML&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Function&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp22]  &lt;p&gt;The ImportModule works in much the same way, only reversing the process. DotNetNuke sends in the XML file as a string (the Content parameter) which the ImportModule method will walk through to find and extract the content for each journal entry. It will then add each entry as a new item in the database. (&lt;a href=&quot;mp23&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp23]   &lt;h3&gt;JournalModule.ImportModule&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; ImportModule(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleID &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Version &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                   &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; DotNetNuke.Entities.Modules.IPortable.ImportModule&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; xmlJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; XmlNode&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; xmlJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; XmlNode = GetContent(Content, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Journals&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Each&lt;/span&gt; xmlJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;In&lt;/span&gt; xmlJournals.SelectNodes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Journal&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objJournal.ModuleId = ModuleID&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objJournal.Content = xmlJournal.SelectSingleNode(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;content&quot;&lt;/span&gt;).InnerText&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objJournal.CreatedByUser = UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                AddJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp23]  &lt;p&gt;The remaining methods of the JournalController class perform the add, update, delete, and read actions, and they simply call the DAL to perform the actions. Here is the complete code for the JournalController. (&lt;a href=&quot;mp24&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp24]   &lt;h3&gt;JournalController Class&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Configuration&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Data&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.XML&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Web&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Collections.Generic&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke.Services.Search&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke.Common.Utilities.XmlUtils&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; YourCompany.Modules.Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; Entities.Modules.ISearchable&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; Entities.Modules.IPortable&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Public Methods&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournals(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; List(Of JournalInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; CBO.FillCollection(Of JournalInfo)(DataProvider.Instance().GetJournals(ModuleId))&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(CBO.FillObject(DataProvider.Instance().GetJournal(ModuleId,ItemId), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GetType&lt;/span&gt;(JournalInfo)), JournalInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; AddJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; objJournal.Content.Trim &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        DataProvider.Instance().AddJournal(objJournal.ModuleId, objJournal.Content, objJournal.CreatedByUser)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; UpdateJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; objJournal.Content.Trim &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                DataProvider.Instance().UpdateJournal(objJournal.ModuleId, objJournal.ItemId, objJournal.Content, objJournal.CreatedByUser)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; DeleteJournal(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            DataProvider.Instance().DeleteJournal(ModuleId, ItemId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Optional Interfaces&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; GetSearchItems(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModInfo &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Entities.Modules.ModuleInfo) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; DotNetNuke.Services.Search.SearchItemInfoCollection &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; DotNetNuke.Entities.Modules.ISearchable.GetSearchItems&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; SearchItemCollection &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; SearchItemInfoCollection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; colJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; List(Of JournalInfo) = GetJournals(ModInfo.ModuleID)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Each&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;In&lt;/span&gt; colJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; SearchItem &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; SearchItemInfo = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; SearchItemInfo(ModInfo.ModuleTitle, objJournal.Content, objJournal.CreatedByUser, objJournal.CreatedDate, ModInfo.ModuleID, objJournal.ItemId.ToString, objJournal.Content, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ItemId=&quot;&lt;/span&gt; &amp;amp; objJournal.ItemId.ToString)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                SearchItemCollection.Add(SearchItem)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; SearchItemCollection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt; ExportModule(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleID &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; DotNetNuke.Entities.Modules.IPortable.ExportModule&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; strXML &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; colJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; List(Of JournalInfo) = GetJournals(ModuleID)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; colJournals.Count &amp;lt;&amp;gt; 0 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;Journals&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Each&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;In&lt;/span&gt; colJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;Journal&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;content&amp;gt;&quot;&lt;/span&gt; &amp;amp; XMLEncode(objJournal.Content) &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;/content&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;/Journal&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                strXML += &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&amp;lt;/Journals&amp;gt;&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; strXML&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Function&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; ImportModule(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; ModuleID &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Content &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; Version &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; UserId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; DotNetNuke.Entities.Modules.IPortable.ImportModule&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; xmlJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; XmlNode&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; xmlJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; XmlNode = GetContent(Content, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Journals&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Each&lt;/span&gt; xmlJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;In&lt;/span&gt; xmlJournals.SelectNodes(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Journal&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objJournal.ModuleId = ModuleID&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objJournal.Content = xmlJournal.SelectSingleNode(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;content&quot;&lt;/span&gt;).InnerText&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objJournal.CreatedByUser = UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                AddJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Namespace&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;[/mp24]&lt;/p&gt;  &lt;h1&gt;In Depth Part 5 – The User Interface&lt;/h1&gt; &lt;p&gt;In a DotNetNuke module, the user interface elements are written as User Controls (.ascx). If you are familiar with developing standard user controls in ASP.NET, you will find the techniques for developing user controls in DotNetNuke to be very similar.&lt;/p&gt; &lt;p&gt;While standard user controls in ASP.NET inherit from the System.Web.UI.UserControl class, DotNetNuke provides other classes as the user control’s base class. In fact, DotNetNuke provides as its UI core three classes and two interfaces to support a module’s user interface. All of the classes inherit from the standard UserControl class, but each of them bring additional functionality so that the module developer can have information about the DotNetNuke application readily available in their UI.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;430&quot; height=&quot;527&quot; title=&quot;DotNetNuke UI Base Classes&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;DotNetNuke UI Base Classes&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_98.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;The Dynamic Module template has three user controls based on these DotNetNuke classes.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;A View Control&lt;/b&gt; – (Inherits from &lt;b&gt;PortalModuleBase&lt;/b&gt;) This control simply renders the module’s content on the page.  &lt;li&gt;&lt;b&gt;An Edit Control &lt;/b&gt;– (Inherits from &lt;b&gt;PortalModuleBase&lt;/b&gt;) This control provides a user with the ability to edit the content of the module.  &lt;li&gt;&lt;b&gt;A Settings Control &lt;/b&gt;– (Inherits from &lt;b&gt;ModuleSettingsBase&lt;/b&gt;) This control combines with the module settings to provide the user with a way to manage settings that are specific to the developer’s module. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;These three controls are a standard fare for most DotNetNuke modules, but your own module can have as few as one control (which would be the View) to as many as are needed for your module’s functionality. What they will all have in common is the tendency to be based on the PortalModuleBase (or ModuleSettingsBase, for the Settings control).&lt;/p&gt; &lt;h2&gt;View Control&lt;/h2&gt; &lt;p&gt;The view control for the Journal module is named ViewJournal.ascx. It consists of a DataList control whose item template generates a single table for each journal entry. A HyperLink control is used to provide a link to the Edit control for each journal entry, and a simple label acts as the container for the journal entry’s content. (&lt;a href=&quot;mp25&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp25]   &lt;h3&gt;ViewJournal.ascx&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Control language=&quot;vb&quot; Inherits=&quot;YourCompany.Modules.Journal.ViewJournal&quot; CodeFile=&quot;ViewJournal.ascx.vb&quot; AutoEventWireup=&quot;false&quot; Explicit=&quot;True&quot; %&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Register TagPrefix=&quot;dnn&quot; TagName=&quot;Audit&quot; Src=&quot;~/controls/ModuleAuditControl.ascx&quot; %&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:datalist&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lstContent&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;datakeyfield&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;ItemID&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellpadding&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;4&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;itemtemplate&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellpadding&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;4&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;100%&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;100%&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;align&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;left&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;          &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:HyperLink&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;HyperLink1&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;NavigateUrl&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&#39;&amp;lt;%# EditURL(&quot;ItemID&quot;,DataBinder.Eval(Container.DataItem,&quot;ItemID&quot;)) %&amp;gt;&#39;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Visible&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;&amp;lt;%# IsEditable %&amp;gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Image&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Image1&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Runat&lt;/span&gt;=&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;server&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ImageUrl&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;~/images/edit.gif&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;AlternateText&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Edit&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Visible&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;&amp;lt;%#IsEditable%&amp;gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;resourcekey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Edit&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:hyperlink&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;          &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:Label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblContent&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;CssClass&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Normal&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;      &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;  &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;itemtemplate&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:datalist&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp25]  &lt;p&gt;The DataList control is populated through the Page_Load event handler in the form’s code-behind. This method gets the module’s template setting (for formatting the journal entry’s content) and then accesses the JournalControl to get a list of JournalInfo objects. Lastly, this list is bound to the DataList control. (&lt;a href=&quot;mp26&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp26]   &lt;h3&gt;ViewJournal.Page_Load&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Load(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.Load&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; Page.IsPostBack &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(Settings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;template&quot;&lt;/span&gt;), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;) &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        strTemplate = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(Settings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;template&quot;&lt;/span&gt;), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        strTemplate = Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Template.Text&quot;&lt;/span&gt;, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; colJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; List(Of JournalInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; get the content from the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    colJournals = objJournals.GetJournals(ModuleId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; colJournals.Count = 0 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DefaultContent&quot;&lt;/span&gt;, LocalResourceFile) &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; add the content to the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            objJournal.ModuleId = ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            objJournal.Content = Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DefaultContent&quot;&lt;/span&gt;, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            objJournal.CreatedByUser = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            objJournals.AddJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; get the content from the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            colJournals = objJournals.GetJournals(ModuleId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; bind the content to the repeater&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    lstContent.DataSource = colJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    lstContent.DataBind()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Sub&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp26]  &lt;p&gt;You might notice the presence of objects named ModuleId, UserId, Settings and Localization. These are a few of the DotNetNuke specific properties that are available through the PortalModuleBase. Of particular note are the calls to the Localization’s GetString method. The Localization object allows your module to be customized for different languages. All of this information is stored in a resource control (.resx) under the App_LocalResources folder of your module.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;210&quot; height=&quot;100&quot; title=&quot;App_LocalResources Folder&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;App_LocalResources Folder&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_119.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;When you open the ViewJournal.ascx.resx file, you will see default values for the &quot;Template.Text&quot; and &quot;DefaultContent&quot; strings.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_121.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;49&quot; title=&quot;ViewJournal.ascx.resx&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;ViewJournal.ascx.resx&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_54.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &quot;DefaultContent&quot; value is what gets added to the journal if there is no other content entered by the user. The &quot;Template.Text&quot; value defines a template with a single placeholder – &lt;strong&gt;[CONTENT]&lt;/strong&gt; – which is applied for formatting each JournalInfo object. This formatting takes place during the call to the DataBind method of the DataList.&lt;/p&gt; &lt;p&gt;Once the DataBind method is called for the DataList, another method in the code-behind handles the DataList.ItemDataBound event for each JournalInfo object in the list. This method injects the data from each JounalInfo object into its appropriate place in the template string. Then it takes the resulting string and places it in the Label control inside the DataList’s item template. (&lt;a href=&quot;mp27&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp27]   &lt;h3&gt;ViewJournal.lstContent_ItemDataBound&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Protected&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; lstContent_ItemDataBound(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.Web.UI.WebControls.DataListItemEventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; lstContent.ItemDataBound&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; strContent &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = strTemplate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; strValue &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; add content to template&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objProperties &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; ArrayList = Common.Utilities.CBO.GetPropertyInfo(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GetType&lt;/span&gt;(JournalInfo))&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; intProperty &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objPropertyInfo &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; PropertyInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; intProperty = 0 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;To&lt;/span&gt; objProperties.Count - 1&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objPropertyInfo = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(objProperties(intProperty), PropertyInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; strContent.IndexOf(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;[&quot;&lt;/span&gt; &amp;amp; objPropertyInfo.Name.ToUpper &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;]&quot;&lt;/span&gt;) &amp;lt;&amp;gt; -1 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    strValue = Server.HtmlDecode(DataBinder.Eval(e.Item.DataItem, objPropertyInfo.Name).ToString())&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    strContent = strContent.Replace(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;[&quot;&lt;/span&gt; &amp;amp; objPropertyInfo.Name.ToUpper &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;]&quot;&lt;/span&gt;, strValue)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt; intProperty&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; assign the content&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; lblContent &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Label = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(e.Item.FindControl(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;lblContent&quot;&lt;/span&gt;), Label)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            lblContent.Text = strContent&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Sub&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp27]  &lt;p&gt;There is only one other item in the ViewJournal class: the ModuleActions property. This property is present because the ViewJournal class implements the DotNetNuke.Entities.Modules.IActionable interface. This interface is used to allow DotNetNuke to obtain any navigational items to other user controls in the module, such as the Edit control. Links to these controls are placed in the module’s action menu. Or, as noted in the comments above the method, it “Registers the module actions required for interfacing with the portal framework”. (&lt;a href=&quot;mp28&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;144&quot; height=&quot;153&quot; title=&quot;Journal Module Action Menu&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Journal Module Action Menu&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_124.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p id=&quot;codeSnippetWrapper&quot;&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;[mp28]   &lt;h3&gt;ViewJournal.ModuleActions&lt;/h3&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ModuleActions() _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                              &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Entities.Modules.Actions.ModuleActionCollection _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                              &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; Entities.Modules.IActionable.ModuleActions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Actions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; Entities.Modules.Actions.ModuleActionCollection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                Actions.Add(GetNextActionID, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            Localization.GetString( _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                  Entities.Modules.Actions.ModuleActionType.AddContent, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                  LocalResourceFile), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            Entities.Modules.Actions.ModuleActionType.AddContent, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            EditUrl(),_&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            Security.SecurityAccessLevel.Edit, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; Actions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp28]  &lt;p&gt;Here is the complete code-behind file for the ViewJournal.ascx control. (&lt;a href=&quot;mp29&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp29]   &lt;h3&gt;ViewJournal Class&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Web.UI&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Collections.Generic&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Reflection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; YourCompany.Modules.Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    Partial &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; ViewJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Inherits&lt;/span&gt; Entities.Modules.PortalModuleBase&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; Entities.Modules.IActionable&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Private Members&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; strTemplate &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Event Handlers&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Load(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.Load&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; Page.IsPostBack &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(Settings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;template&quot;&lt;/span&gt;), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;) &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        strTemplate = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(Settings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;template&quot;&lt;/span&gt;), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        strTemplate = Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Template.Text&quot;&lt;/span&gt;, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; colJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; List(Of JournalInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; get the content from the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    colJournals = objJournals.GetJournals(ModuleId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; colJournals.Count = 0 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DefaultContent&quot;&lt;/span&gt;, LocalResourceFile) &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; add the content to the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            objJournal.ModuleId = ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            objJournal.Content = Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DefaultContent&quot;&lt;/span&gt;, LocalResourceFile)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            objJournal.CreatedByUser = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            objJournals.AddJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; get the content from the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            colJournals = objJournals.GetJournals(ModuleId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; bind the content to the repeater&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    lstContent.DataSource = colJournals&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    lstContent.DataBind()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Protected&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; lstContent_ItemDataBound(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                               &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.Web.UI.WebControls.DataListItemEventArgs) _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                               &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; lstContent.ItemDataBound&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; strContent &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt; = strTemplate&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; strValue &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; add content to template&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objProperties &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; ArrayList = Common.Utilities.CBO.GetPropertyInfo(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;GetType&lt;/span&gt;(JournalInfo))&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; intProperty &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objPropertyInfo &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; PropertyInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;For&lt;/span&gt; intProperty = 0 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;To&lt;/span&gt; objProperties.Count - 1&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objPropertyInfo = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(objProperties(intProperty), PropertyInfo)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; strContent.IndexOf(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;[&quot;&lt;/span&gt; &amp;amp; objPropertyInfo.Name.ToUpper &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;]&quot;&lt;/span&gt;) &amp;lt;&amp;gt; -1 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    strValue = Server.HtmlDecode(DataBinder.Eval(e.Item.DataItem, objPropertyInfo.Name).ToString())&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    strContent = strContent.Replace(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;[&quot;&lt;/span&gt; &amp;amp; objPropertyInfo.Name.ToUpper &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;]&quot;&lt;/span&gt;, strValue)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Next&lt;/span&gt; intProperty&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; assign the content&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; lblContent &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Label = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(e.Item.FindControl(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;lblContent&quot;&lt;/span&gt;), Label)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            lblContent.Text = strContent&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Optional Interfaces&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ReadOnly&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt; ModuleActions() &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Entities.Modules.Actions.ModuleActionCollection _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                                 &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Implements&lt;/span&gt; Entities.Modules.IActionable.ModuleActions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; Actions &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; Entities.Modules.Actions.ModuleActionCollection&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                Actions.Add(GetNextActionID, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            Localization.GetString(Entities.Modules.Actions.ModuleActionType.AddContent, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                                                   LocalResourceFile), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            Entities.Modules.Actions.ModuleActionType.AddContent, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            EditUrl(), _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            Security.SecurityAccessLevel.Edit, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;, _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Return&lt;/span&gt; Actions&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Get&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Property&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp29]  &lt;h2&gt;Edit Control&lt;/h2&gt; &lt;p&gt;The Edit control for the Journal module is very similar to the View control. It also inherits from PortalModuleBase, but it does not implement IActionable. This control is used for both adding new Journal entries and for updating existing journal entries.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_126.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;157&quot; title=&quot;Edit Journal Page&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Edit Journal Page&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_56.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In the markup for the EditJournal.ascx control, there are a few references to user controls in the DotNetNuke framework. Specifically, there are the DotNetNuke LabelControl, TextEditor and ModuleAuditControl. (&lt;a href=&quot;mp30&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp30]   &lt;h3&gt;EditJournal.ascx&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Control language=&quot;vb&quot; Inherits=&quot;YourCompany.Modules.Journal.EditJournal&quot; &lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    CodeFile=&quot;EditJournal.ascx.vb&quot; AutoEventWireup=&quot;false&quot; Explicit=&quot;True&quot; %&amp;gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Register TagPrefix=&quot;dnn&quot; TagName=&quot;Label&quot; Src=&quot;~/controls/LabelControl.ascx&quot; %&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Register TagPrefix=&quot;dnn&quot; TagName=&quot;TextEditor&quot; Src=&quot;~/controls/TextEditor.ascx&quot;%&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Register TagPrefix=&quot;dnn&quot; TagName=&quot;Audit&quot; Src=&quot;~/controls/ModuleAuditControl.ascx&quot; %&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;650&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellspacing&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;0&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellpadding&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;0&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;0&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;summary&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Edit Table&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;top&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SubHead&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;125&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblContent&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;controlname&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblContent&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;suffix&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;:&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:label&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:texteditor&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;txtContent&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;height&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;200&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;500&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:RequiredFieldValidator&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ID&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;valContent&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;resourcekey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;valContent.ErrorMessage&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ControlToValidate&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;txtContent&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;CssClass&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NormalRed&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Display&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Dynamic&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ErrorMessage&lt;/span&gt;=&quot;&amp;amp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;amp&lt;/span&gt;;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;lt&lt;/span&gt;;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;br&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;Content is required&quot; Runat=&quot;server&quot; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:linkbutton&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cssclass&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;CommandButton&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;cmdUpdate&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;resourcekey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;cmdUpdate&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;         &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;borderstyle&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;none&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Update&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:linkbutton&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:linkbutton&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cssclass&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;CommandButton&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;cmdCancel&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;resourcekey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;cmdCancel&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;         &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;borderstyle&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;none&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Cancel&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;causesvalidation&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;False&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:linkbutton&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:linkbutton&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cssclass&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;CommandButton&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;cmdDelete&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;resourcekey&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;cmdDelete&quot;&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;         &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;borderstyle&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;none&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Delete&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;causesvalidation&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;False&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:linkbutton&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:audit&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;ctlAudit&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp30]  &lt;p&gt;The DotNetNuke LabelControl provides functionality similar to the ASP.NET Label control, but with all of the benefits of Localization and the presence of a help icon (&lt;img width=&quot;12&quot; height=&quot;13&quot; title=&quot;Help Icon&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Help Icon&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_110.png&quot; border=&quot;0&quot;&gt;) that provides a “tool tip”. This LabelControl is typically used for each data entry item on the form. In the case of this module, the LabelControl gives guidance for entering a Journal entry using the Rich Text Editor.&lt;/p&gt; &lt;p&gt;The Rich Text Editor is embodied by the DotNetNuke TextEditor control. With it, the user can write their journal entry as formatted text, complete with images if desired, all without needing to hand-generate the HTML. The TextEditor deals with all of the nitty-gritty details of representing the user’s input as HTML.&lt;/p&gt; &lt;p&gt;The final DotNetNuke control in the EditJournal is the ModuleAuditControl. This displays and records information about the last person to edit the content for the module, and is only visible when using the EditJournal.ascx to perform an update.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;424&quot; height=&quot;62&quot; title=&quot;ModuleAuditControl&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;ModuleAuditControl&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_129.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;The code-behind for the EditJournal control has four event handlers. The first is for when the page loads. It checks the query string for the ItemId of the journal entry. If no ID is present, then it assumes that the user is adding a new journal entry. If there is an ItemId, then it uses this to look up the specific journal entry and place its content into the rich text editor. (&lt;a href=&quot;mp31&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp31]   &lt;h3&gt;EditJournal.Page_Load&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Load(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.Load&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Determine ItemId of Journal to Update&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; (Request.QueryString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ItemId&quot;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Is&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    ItemId = Int32.Parse(Request.QueryString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ItemId&quot;&lt;/span&gt;))&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; If this is the first visit to the page, bind the data to the datalist&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Page.IsPostBack = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    cmdDelete.Attributes.Add(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;onClick&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;javascript:return confirm(&#39;&quot;&lt;/span&gt; &amp;amp; Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DeleteItem&quot;&lt;/span&gt;) &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&#39;);&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; Common.Utilities.Null.IsNull(ItemId) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; get content&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo = objJournals.GetJournal(ModuleId,ItemId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Is&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            txtContent.Text = objJournal.Content&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            ctlAudit.CreatedByUser = objJournal.CreatedByUser.ToString&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            ctlAudit.CreatedDate = objJournal.CreatedDate.ToString&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt; &lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; security violation attempt to access item not &lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; related to this Module&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        cmdDelete.Visible = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        ctlAudit.Visible = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; Sub&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp31]  &lt;p&gt;The other three event handler methods deal with the button click events of the Update and Delete buttons. The Cancel button will result in a re-direct back to the page with View control. It gets the address for this page using DotNetNuke’s NavigateURL method. (&lt;a href=&quot;mp32&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp32]   &lt;h3&gt;EditJournal.cmdCancel_Click&lt;/h3&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; cmdCancel_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; EventArgs) _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; cmdCancel.Click&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp32]  &lt;p&gt;The method handling the Update button simply takes the user’s input and calls either AddJournal or UpdateJournal on the JournalController class. (&lt;a href=&quot;mp33&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp33]   &lt;h3&gt;EditJournal.cmdUpdate_Click&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; cmdUpdate_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; cmdUpdate.Click&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objJournal.ModuleId = ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objJournal.ItemId = ItemId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objJournal.Content = txtContent.Text&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objJournal.CreatedByUser = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Common.Utilities.Null.IsNull(ItemId) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; add the content within the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    objJournals.AddJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; update the content within the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    objJournals.UpdateJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; refresh cache&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                SynchronizeModule()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Redirect back to the portal home page&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp33]  &lt;p&gt;The method for the Delete button also uses the JournalController class, this time to call the DeleteJournal method. (&lt;a href=&quot;mp34&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp34]   &lt;h3&gt;EditJournal.cmdDelete_Click&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; cmdDelete_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; EventArgs) _&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; cmdDelete.Click&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Only attempt to delete the item if it exists already&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; Common.Utilities.Null.IsNull(ItemId) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    objJournals.DeleteJournal(ModuleId,ItemId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; refresh cache&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    SynchronizeModule()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Redirect back to the portal home page&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp34]  &lt;p&gt;The following is the complete code for the EditJournal’s code-behind file. (&lt;a href=&quot;mp35&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp35]   &lt;h3&gt;EditJournal Class&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; YourCompany.Modules.Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    Partial &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; EditJournal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Inherits&lt;/span&gt; Entities.Modules.PortalModuleBase&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Private Members&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; ItemId &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Integer&lt;/span&gt; = Common.Utilities.Null.NullInteger&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Event Handlers&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; Page_Load(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; System.EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;MyBase&lt;/span&gt;.Load&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Determine ItemId of Journal to Update&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; (Request.QueryString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ItemId&quot;&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Is&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    ItemId = Int32.Parse(Request.QueryString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;ItemId&quot;&lt;/span&gt;))&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; If this is the first visit to the page, bind the role data to the datalist&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Page.IsPostBack = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    cmdDelete.Attributes.Add(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;onClick&quot;&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;javascript:return confirm(&#39;&quot;&lt;/span&gt; &amp;amp; Localization.GetString(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;DeleteItem&quot;&lt;/span&gt;) &amp;amp; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&#39;);&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; Common.Utilities.Null.IsNull(ItemId) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; get content&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo = objJournals.GetJournal(ModuleId,ItemId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Is&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Nothing&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            txtContent.Text = objJournal.Content&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                            ctlAudit.CreatedByUser = objJournal.CreatedByUser.ToString&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            ctlAudit.CreatedDate = objJournal.CreatedDate.ToString&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; security violation attempt to access item not related to this Module&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                            Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        cmdDelete.Visible = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                        ctlAudit.Visible = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; cmdCancel_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; cmdCancel.Click&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; cmdUpdate_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; cmdUpdate.Click&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournal &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; JournalInfo = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalInfo&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objJournal.ModuleId = ModuleId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objJournal.ItemId = ItemId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objJournal.Content = txtContent.Text&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                objJournal.CreatedByUser = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;.UserId&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; Common.Utilities.Null.IsNull(ItemId) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; add the content within the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    objJournals.AddJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Else&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; update the content within the Journal table&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    objJournals.UpdateJournal(objJournal)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; refresh cache&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                SynchronizeModule()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Redirect back to the portal home page&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Private&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; cmdDelete_Click(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; sender &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Object&lt;/span&gt;, &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;ByVal&lt;/span&gt; e &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; EventArgs) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Handles&lt;/span&gt; cmdDelete.Click&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Only attempt to delete the item if it exists already&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Not&lt;/span&gt; Common.Utilities.Null.IsNull(ItemId) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objJournals &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; JournalController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    objJournals.DeleteJournal(ModuleId,ItemId)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; refresh cache&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                    SynchronizeModule()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; Redirect back to the portal home page&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                Response.Redirect(NavigateURL(), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception    &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp35]  &lt;h2&gt;Settings Control&lt;/h2&gt; &lt;p&gt;The purpose of the Settings user control in a module is different from the other user controls. The Settings user control is displayed as a custom part of the overall module settings. There is no need to add any navigation to display this control, as it is automatically injected into the page that is used to manage other module-related settings, such as the module permissions and custom display settings.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_131.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;142&quot; title=&quot;Journal Module Settings Page&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Journal Module Settings Page&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_58.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To view the module settings, a user with Edit Module permissions would simply select Settings from the module’s action menu.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;146&quot; height=&quot;246&quot; title=&quot;Journal Module Action Menu&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Journal Module Action Menu&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_134.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;If you think of your module as being a pluggable item meant to manage a particular type of content in a particular way, then the View and Edit controls would be seen as dealing directly with your content. The Settings control, however, would be used to deal with &lt;i&gt;meta-data&lt;/i&gt; about your content. This can include items such as values for certain constants used by your module to affect the way information is displayed, managed, or manipulated.&lt;/p&gt; &lt;p&gt;In the case of the Journal module, the Settings control allows the user to set the template to be used when viewing the Journal entries. The mark-up for this user control is pretty straight forward. A DotNetNuke LabelControl supplies the “Template” label for a TextBox control. The user enters their template as plain text which can include HTML and placeholders for properties of the CBO class (JournalInfo). (&lt;a href=&quot;mp36&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp36]   &lt;h3&gt;Settings.ascx&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Control Language=&quot;vb&quot; AutoEventWireup=&quot;false&quot; CodeFile=&quot;Settings.ascx.vb&quot; Inherits=&quot;YourCompany.Modules.Journal.Settings&quot; %&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 0);&quot;&gt;&amp;lt;%@ Register TagPrefix=&quot;dnn&quot; TagName=&quot;Label&quot; Src=&quot;~/controls/LabelControl.ascx&quot; %&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellspacing&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;0&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cellpadding&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;2&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;border&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;0&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;summary&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;Journal Settings Design Table&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;SubHead&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;150&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:label&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;lblTemplate&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;controlname&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;txtTemplate&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;suffix&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;:&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;dnn:label&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;valign&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;bottom&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;asp:textbox&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;txtTemplate&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;cssclass&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;NormalTextBox&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;width&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;390&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;columns&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;30&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;textmode&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;MultiLine&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;rows&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;10&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;maxlength&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;2000&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;runat&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;=&quot;server&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;td&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;tr&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 0, 0);&quot;&gt;table&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp36]  &lt;p&gt;Like the View and Edit controls, the Settings control has a resource file (Settings.ascx.resx) to allow website owners to support other languages and to customize various parts of the text around the control.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;7ce52e88&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_136.png&quot;&gt;&lt;img width=&quot;254&quot; height=&quot;60&quot; title=&quot;Settings.ascx.resx&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;Settings.ascx.resx&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_thumb_60.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In the code-behind of the Settings control, one of the first items to note is that this control inherits from ModuleSettingsBase (not PortalModuleBase, which is used for the View and Edit controls). ModuleSettingsBase introduces a couple of additional items used by the DotNetNuke framework when it displays the control along with the general module settings.&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;275&quot; height=&quot;269&quot; title=&quot;ModuleSettingsBase Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;ModuleSettingsBase Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_113.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;img width=&quot;155&quot; height=&quot;146&quot; title=&quot;ISettingsControl Class Diagram&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;ISettingsControl Class Diagram&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-DotNetNukeDynamicModuleTemplate_E372-image_116.png&quot; border=&quot;0&quot;&gt;&lt;/p&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    Partial &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; Settings&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Inherits&lt;/span&gt; Entities.Modules.ModuleSettingsBase&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;A brief word should be mentioned here about the ModuleSettings and TabModuleSettings properties of the base class. Both of these properties are name/value pairs that relate to the meta-data you intend to use in your module. What is different is that the data stored in TabModuleSettings will be unique for a specific instance of your module on a specific page; TabModuleSettings data allows for a very “fine granularity” of settings for your module. The data stored in ModuleSettings, however, is more generic and will be shared by all instances of your module throughout the specific DotNetNuke portal.&lt;/p&gt; &lt;p&gt;In both ModuleSettings and TabModuleSettings, however, the data stored is specific to your module. This is different from the Settings property which contains general meta-data that applies to the active DotNetNuke portal or website.&lt;/p&gt; &lt;p&gt;One of the frequent questions developers ask is whether they should use ModuleSettings or TabModuleSettings. The answer will depend on whether or not the values should be unique to each instance of your module (in which case, you should use TabModuleSettings). If you are in doubt, a good rule-of-thumb is to use TabModuleSettings, because they will allow the end-user the greatest degree of customization when using your module.&lt;/p&gt; &lt;p&gt;The rest of the code-behind for the Settings module consists of two simple methods: LoadSettings and UpdateSettings. These methods are where you, as the module developer, can save the user’s input for your module’s meta-data. You can even mix and match the use of TabModuleSettings and ModuleSettings. In the case of the Journal module, the Dynamic Module template’s code stores the module’s &quot;template&quot; meta-data into the TabModuleSettings collection.&lt;/p&gt; &lt;p&gt;Here is the complete code for Settings.ascx.vb. (&lt;a href=&quot;mp37&quot;&gt;&lt;strong&gt;view code&lt;/strong&gt;&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;[mp37]   &lt;h3&gt;Settings Class&lt;/h3&gt; &lt;div id=&quot;codeSnippetWrapper&quot;&gt; &lt;div id=&quot;codeSnippet&quot; style=&quot;padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; DotNetNuke&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Imports&lt;/span&gt; System.Web.UI&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt; YourCompany.Modules.Journal&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    Partial &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt; Settings&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Inherits&lt;/span&gt; Entities.Modules.ModuleSettingsBase&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#Region&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;Base Method Implementations&quot;&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; LoadSettings()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; (Page.IsPostBack = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;False&lt;/span&gt;) &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(TabModuleSettings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;template&quot;&lt;/span&gt;), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;) &amp;lt;&amp;gt; &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Then&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                        txtTemplate.Text = &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;CType&lt;/span&gt;(TabModuleSettings(&lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;template&quot;&lt;/span&gt;), &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;String&lt;/span&gt;)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;If&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception           &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Public&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Overrides&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt; UpdateSettings()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Dim&lt;/span&gt; objModules &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;New&lt;/span&gt; Entities.Modules.ModuleController&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                objModules.UpdateTabModuleSetting(TabModuleId, &lt;span style=&quot;color: rgb(0, 96, 128);&quot;&gt;&quot;template&quot;&lt;/span&gt;, txtTemplate.Text)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;                &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39; refresh cache&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                SynchronizeModule()&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Catch&lt;/span&gt; exc &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;As&lt;/span&gt; Exception           &lt;span style=&quot;color: rgb(0, 128, 0);&quot;&gt;&#39;Module failed to load&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;                ProcessModuleLoadException(&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Me&lt;/span&gt;, exc)&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;            &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Try&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;        &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Sub&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;&lt;span style=&quot;color: rgb(204, 102, 51);&quot;&gt;#End Region&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&amp;nbsp;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: white;&quot;&gt;    &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Class&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;pre style=&quot;margin: 0em; padding: 0px; width: 100%; text-align: left; color: black; line-height: 12pt; overflow: visible; font-family: &amp;quot;Courier New&amp;quot;, courier, monospace; font-size: 8pt; direction: ltr; background-color: rgb(244, 244, 244);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;End&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;Namespace&lt;/span&gt;&lt;/pre&gt;&lt;!--CRLF--&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;[/mp37]  &lt;h1&gt;Beyond This Template&lt;/h1&gt; &lt;p&gt;In this tutorial, I discussed the basics of module development using the DotNetNuke Dynamic Module template. This template is more than a simple starting point for module developers. It is a fully-functional module that demonstrates common practices in writing plug-ins for DotNetNuke.&lt;/p&gt; &lt;p&gt;It doesn’t stop here, however. The DotNetNuke framework has a very rich API that developers can leverage in all sorts of ways. Whether you are interested in using the API to speed your development efforts or to enhance the integration of your module with DotNetNuke or other modules on the site, you are sure to find endless opportunities in the technologies employed within DotNetNuke.&lt;/p&gt;","0","8/12/2013 3:45:50 PM"," "," "," "," "
"DNN® Development Essentials – A Methodology and More","","","DNN® Development Essentials – A Methodology and More","&lt;h1&gt;Developing DotNetNuke&#174; Extensions – Towards a Solid Methodology&lt;/h1&gt; &lt;p&gt;&lt;img width=&quot;137&quot; height=&quot;204&quot; title=&quot;Developing DotNetNuke Extensions - Towards a Solid Methodology&quot; align=&quot;left&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px 25px 3px 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;Developing DotNetNuke Extensions - Towards a Solid Methodology&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-19f312112a56_FFB5-Businessman%20using%20gray%20laptop%20computer_3.jpg&quot; border=&quot;0&quot;&gt;DotNetNuke module development can take on many forms. There is no “one right way” to do it; your preferred approach will depend on many factors.&lt;/p&gt; &lt;p&gt;But there are some common points that most well-executed module development projects tend to follow. These strategies can be expressed in many ways, but one popular way is known as the &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://en.wikipedia.org/wiki/Unified_Process&quot;&gt;&lt;strong&gt;Unified Process&lt;/strong&gt;&lt;/a&gt;. This process identifies distinct phases in the software development cycle, and these phases offer a solid framework for almost any level of DotNetNuke module development. Understanding the Unified Process can help programmers take a more decisive approach in their development.&lt;/p&gt; &lt;p&gt;This article will briefly describe:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A way to apply the &lt;strong&gt;Unified Process&lt;/strong&gt; to DotNetNuke module development.  &lt;li&gt;Things to consider for those “solo developers” of DotNetNuke extensions.  &lt;li&gt;Key benefits of Agile Programming. &lt;/li&gt;&lt;/ul&gt;  &lt;h1&gt;Developing DotNetNuke&#174; Extensions – Towards a Solid Methodology&lt;/h1&gt; &lt;p&gt;DotNetNuke module development can take on many forms. There is no “one right way” to do it; your preferred approach will depend on many factors.&lt;/p&gt; &lt;p&gt;But there are some common points that most well-executed module development projects tend to follow. These strategies can be expressed in many ways, but one popular way is known as the &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://en.wikipedia.org/wiki/Unified_Process&quot;&gt;&lt;strong&gt;Unified Process&lt;/strong&gt;&lt;/a&gt;. This process identifies distinct phases in the software development cycle, and these phases offer a solid framework for almost any level of DotNetNuke module development. Understanding the Unified Process can help programmers take a more decisive approach in their development.&lt;/p&gt; &lt;p&gt;Beyond the Unified Process, however, there are other considerations that vie for the developer’s attention. One of the first is that there are several ways to physically construct a DotNetNuke module. DotNetNuke comes with many templates to choose from in the Starter Kit: Dynamic Module, Simple Module, and the Web Application Project, to name a few. Within each of these are many other choices. Should you use LINQ or the traditional DAL+ approach for data access? Is it worthwhile to attempt Dependency Injection (DI) and Inversion of Control (IoC)? Should you use data-bound controls or opt for writing event handlers in the form’s code-behind? Is it better to use code generators, such as CodeSmith or MyGeneration, or should one hand-generate as much as possible? All of these questions and decisions can leave a new developer with a sense of uncertainty, for there is no “silver-bullet” approach. Each has their advantages and their trade-offs.&lt;/p&gt; &lt;p&gt;What developers can do to beyond addressing these mechanical considerations in their projects is to begin formulating a solid methodology for tackling their projects. Even the best tools and techniques, if not properly implemented, will eat up time, energy and resources both in the short term and for the long haul. A methodology addresses the process that the developer takes, not the tools and techniques of construction. With a solid and proven process, and the practiced execution of that process, programmers will find increased productivity and greater long-term viability in their development efforts.&lt;/p&gt; &lt;p&gt;The following section will briefly outline the four phases of the Unified Process and describe how they can be applied to building DotNetNuke extensions.&lt;/p&gt; &lt;h2&gt;Development Phases&lt;/h2&gt; &lt;p&gt;The Unified Process consists of four phases: Inception, Elaboration, Construction, and Transition. When applied to designing a DotNetNuke module, these phases can take the following concrete forms.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Phase 1 – Inception&lt;/b&gt; &lt;br&gt;In this phase, the objective is to formulate the idea and express the need, purpose or goal of the software project.  &lt;ul&gt; &lt;li&gt;&lt;b&gt;&lt;i&gt;Express the idea&lt;/i&gt;&lt;/b&gt; – Put the idea for the project into words. Answer these questions: “What will [&lt;u&gt;project name&lt;/u&gt;] do? How would I describe the idea behind the [&lt;u&gt;project name&lt;/u&gt;]?”  &lt;li&gt;&lt;b&gt;&lt;i&gt;Identify the reasons&lt;/i&gt;&lt;/b&gt; – List the benefits of the project. Answer these questions: “Why is this project a good idea? What are the benefits of this project?”  &lt;li&gt;&lt;b&gt;&lt;i&gt;Sketch the idea&lt;/i&gt;&lt;/b&gt; – Make a visual of the main parts of the user interface (even if it’s just a preliminary one). The visual doesn’t have to be fancy; hand-drawn sketches are usually the best. &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;b&gt;Phase 2 – Elaboration&lt;/b&gt; &lt;br&gt;In this phase, the objective is to flesh out more of the details behind the idea and gather enough requirements to begin the Construction phase.  &lt;ul&gt; &lt;li&gt;&lt;b&gt;&lt;i&gt;Model the data&lt;/i&gt;&lt;/b&gt; – Write out the database tables and/or business objects that represent the data that the module will manage or present. Also list the stored procedures (if required) for accessing/managing the tables.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Sketch View and Edit forms&lt;/i&gt;&lt;/b&gt; – Refine the sketches from the Inception phase. Aim for at least two primary forms: one for viewing the data, and one for editing the data. The form for viewing the data may have two versions: the form as it is viewed by ordinary users, and the form as it is viewed by someone with the rights to edit the data.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Identify common settings&lt;/i&gt;&lt;/b&gt; – Sometimes there are background settings that will affect the presentation, structure or other aspect of the form and/or data. For example, there may be constants or other settings that are not the &lt;i&gt;main&lt;/i&gt; content behind the project, but that will potentially affect that content in some way.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Prioritize the work&lt;/i&gt;&lt;/b&gt; – Before moving to the Construction phase, identify what parts of the project are the most important to complete right away. Aim for the greatest functionality in the shortest period of time. &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;b&gt;Phase 3 – Construction&lt;/b&gt; &lt;br&gt;In this phase, the objective is to begin building the project.  &lt;ul&gt; &lt;li&gt;&lt;b&gt;&lt;i&gt;Set up the project&lt;/i&gt;&lt;/b&gt; – Begin by creating a DotNetNuke website using the starter kit for Visual Studio. Run the solution – [CTRL] + [F5] – and walk through the DotNetNuke Installation wizard.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Create the database items&lt;/i&gt;&lt;/b&gt; – Create the tables and the stored procedures for the database. You may even want to enter some sample data, to simplify testing early on.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Create and Register the module&lt;/i&gt;&lt;/b&gt; – Create the initial module for the project. The forms do not have to be functional at this point. The objective is to create a “shell” or starting point for your module so that it can be “registered” (added) in the Module Definitions of the DotNetNuke website.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Develop the module&lt;/i&gt;&lt;/b&gt; – Focus on the form(s) that hold the most value for the current iteration of the Construction phase. Build the CBOs, DAL, and BLL that will support the form’s functionality; then code the actual forms themselves.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Test the module&lt;/i&gt;&lt;/b&gt; – Check that the form(s) work correctly in the DotNetNuke website. &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;&lt;b&gt;Phase 4 – Transition&lt;/b&gt; &lt;br&gt;In this phase, the objective is to create an installation package for the module and plan for the features to be developed in the next version.  &lt;ul&gt; &lt;li&gt;&lt;b&gt;&lt;i&gt;Finalize the Database Install/Uninstall scripts&lt;/i&gt;&lt;/b&gt; – Create the .SqlDataProvider script that will create the tables and stored procedures for a fresh installation of your module. Also create the script that will remove the tables and stored procedures whenever the module is uninstalled from a DotNetNuke website.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Complete the module’s description&lt;/i&gt;&lt;/b&gt; – Update the module definition in the website to complete the module’s description (including the version, author, copyright, terms, and other details).  &lt;li&gt;&lt;b&gt;&lt;i&gt;Create and test the install package&lt;/i&gt;&lt;/b&gt; – Create the installation package, which will include the .dnn manifest, database scripts, forms, etc. Ensure that the installation package is complete and functional by installing it in a new DotNetNuke website.  &lt;li&gt;&lt;b&gt;&lt;i&gt;Plan for the next version&lt;/i&gt;&lt;/b&gt; – Create a list of known bugs and future enhancements for the module. These items become the seed for entering the Inception phase in the next version. &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;The Perils of Solo Development&lt;/h2&gt; &lt;p&gt;Remember &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://en.wikipedia.org/wiki/File:HanSolo.jpg&quot;&gt;Han Solo&lt;/a&gt;, from the movie “Star Wars”? He was a guy who liked to depend on no-one but himself. But by getting involved with others and taking on tasks greater than himself, he was able to play a huge part in bringing about freedom from the “evil empire”. The same is true for software developers. Many of the people who create DotNetNuke extensions are “Solo Developers”, sometimes out of necessity and sometimes out of a desire for independence and personal achievement. But the truth of the matter is that most developers benefit from working together. In fact, Han Solo’s story almost looks like the story of DotNetNuke. Because a community of people worked together and contributed to the development and refinement of the DotNetNuke framework, it has produced a thriving ecosystem full of opportunities.&lt;/p&gt; &lt;p&gt;Even so, many people still strive to do their work as solo-developers. And that’s not necessarily a bad thing (I’m a solo developer in many of my projects, mostly out of necessity). But it’s not usually the best thing, and when projects start getting bigger and bigger, it’s definitely time to join forces with others. Until that time, you can mitigate the perils of solo development by practicing the Unified Process outlined above and learning from others. (BTW, always learn from others mistakes; you won’t live long enough to make them all yourself.)&lt;/p&gt; &lt;p&gt;Here’s a few tips to consider when trying to make it as a solo developer (tailored in part for the DotNetNuke developer). These are pretty general, but they will lead you into a wider range of resources than I could list all by myself.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Look to the DNN Community &lt;br&gt;&lt;/strong&gt;The DotNetNuke community is huge (almost 800,000 at the time of this article), and many people are willing to help &amp;amp; share their knowledge. A good place to start is the &lt;a href=&quot;http://www.dotnetnuke.com/tabid/795/default.aspx&quot; target=&quot;_blank&quot;&gt;Forum pages&lt;/a&gt;, particularly the &lt;a href=&quot;http://www.dotnetnuke.com/Community/Forums/tabid/795/GroupID/92/Default.aspx&quot; target=&quot;_blank&quot;&gt;Developer Forums&lt;/a&gt;, where you can find others who have had the same questions. You can post your own questions as well, but often a simple search there will produce a quicker result than waiting for someone with the answer you’re looking for to come along and reply to your post.  &lt;li&gt;&lt;strong&gt;Read the &lt;/strong&gt;&lt;strong&gt;DNN Blogs&lt;/strong&gt; &lt;br&gt;I actually have the &lt;a href=&quot;http://www.dotnetnuke.com/tabid/825/Default.aspx&quot; target=&quot;_blank&quot;&gt;DNN Blog page&lt;/a&gt; as my main shortcut to the DotNetNuke site. These blogs are written by people close to the various development activities on the DotNetNuke platform, and their depth of knowledge and insight is amazing.  &lt;li&gt;&lt;strong&gt;Make use of Google &amp;amp; DotNetNuke &lt;br&gt;&lt;/strong&gt;There is a lot of solid information in the DotNetNuke forums, and there are many people willing to help. But it can also be daunting to find what you’re looking for by just using the forum’s search facility. I tend to use Google for most technical questions I have, and when I want Google’s take on where my answer is in DotNetNuke, I just append the text “site:DotNetNuke.com” to my search (without the quotes). To make sure I get the latest information (and not some outdated advice), I often narrow the date range to the past month or year (see the options at the left of your Google search results). By the way: Bing is just (about) as good as Google. I’m just more used to Google.  &lt;li&gt;&lt;strong&gt;Check out &lt;/strong&gt;&lt;a href=&quot;http://msdn.microsoft.com&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;MSDN&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;, &lt;/strong&gt;&lt;a href=&quot;http://www.asp.net&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;ASP.NET&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;, and &lt;/strong&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/dotnetnuke&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;StackOverFlow&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;br&gt;&lt;/strong&gt;Most of my questions on DNN development actually have little to do with the DNN framework itself. The bulk of the technical knowledge &amp;amp; skills I leverage have to do with learning the ins-and-outs of my programming language and the .NET Framework. A lot of the answers I seek are already well documented in these three places.  &lt;li&gt;&lt;strong&gt;Read about Solo Development&lt;/strong&gt; &lt;br&gt;StackOverFlow has a few good resources to check out. Browse the tag &lt;a href=&quot;http://stackoverflow.com/questions/tagged/solo-developer&quot; target=&quot;_blank&quot;&gt;“Solo-Developer”&lt;/a&gt; and see what you can learn. Top of the list (at this point) is the question &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://stackoverflow.com/questions/59561/what-tools-techniques-can-benefit-a-solo-developer&quot;&gt;“What tools/techniques can benefit a solo developer?”&lt;/a&gt; where I found out about a cool little note-taker called &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.tiddlywiki.com/&quot;&gt;TiddlyWiki&lt;/a&gt;.  &lt;li&gt;&lt;strong&gt;Weigh the pros and cons of Solo Development &lt;br&gt;&lt;/strong&gt;There are a few good articles and blogs on solo development vs. team development. John Cook &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.johndcook.com/blog/2009/07/16/solo-software-development/&quot;&gt;blogs about two trends&lt;/a&gt; he sees affecting the challenges and opportunities facing the solo developer. Other writers argue about &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.codesqueeze.com/software-teams-vs-superheroes-why-the-solo-developer-is-dead/&quot;&gt;“Why the Solo Developer is Dead”&lt;/a&gt;.  &lt;li&gt;&lt;strong&gt;Learn Version Control &lt;br&gt;&lt;/strong&gt;There are countless &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.cimgf.com/2009/11/07/why-version-control-is-important-for-solo-developers/&quot;&gt;recommendations&lt;/a&gt; for solo developers to get into using version control for their projects. A good place to start learning is by trying it out on CodePlex. Create a simple project that you feel you can open-source, and learn the tools. &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://subversion.apache.org/&quot;&gt;Subversion&lt;/a&gt; (I use &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://tortoisesvn.tigris.org/&quot;&gt;TortoiseSVN&lt;/a&gt; as my main tool) has been a big tool over the years, but &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; (and &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://tortoisehg.bitbucket.org/&quot;&gt;TortoiseHg&lt;/a&gt;) is one that also deserves a good consideration. When you’re feeling comfortable with version control, go the next step and explore Continuous Integration (CI). Jon Henning has a &lt;a href=&quot;http://www.dotnetnuke.com/Community/Blogs/tabid/825/EntryId/2158/Getting-Continuous-Integration-Working-With-CodePlex-Part-I.aspx&quot; target=&quot;_blank&quot;&gt;three&lt;/a&gt; &lt;a href=&quot;http://www.dotnetnuke.com/Community/Blogs/tabid/825/EntryId/2159/Getting-Continuous-Integration-Working-With-CodePlex-Part-II.aspx&quot; target=&quot;_blank&quot;&gt;part&lt;/a&gt; &lt;a href=&quot;http://www.dotnetnuke.com/Community/Blogs/tabid/825/EntryId/2175/Getting-Continuous-Integration-Working-With-CodePlex-Part-III.aspx&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt; on using CI with CodePlex.  &lt;li&gt;&lt;strong&gt;Look for chances to contribute &lt;br&gt;&lt;/strong&gt;You will really benefit if you can help someone out with their project (such as volunteering for a &lt;a href=&quot;http://www.dotnetnuke.com/Community/Teams/tabid/1400/Default.aspx&quot; target=&quot;_blank&quot;&gt;project at DotNetNuke&lt;/a&gt; or making connections around an open-source project on &lt;a href=&quot;http://www.codeplex.com/site/search/openings&quot; target=&quot;_blank&quot;&gt;CodePlex&lt;/a&gt;). It will also give you the opportunity to test the waters of team development and collaboration. Not all opportunities are equal, however. Spend some time learning more about the project and the people involved. Then look for ways you can help out.  &lt;li&gt;&lt;strong&gt;Learn to be agile&lt;/strong&gt; &lt;br&gt;A lot of articles on Agile programming (also known as “Extreme Programming”) address team strategies and management issues. Shelley Doll points out that &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.builderau.com.au/strategy/projectmanagement/soa/Agile-programming-works-for-the-solo-developer/0,339028292,320267171,00.htm&quot;&gt;solo developers can leverage Agile techniques&lt;/a&gt; as well. In fact, Shelley suggests that solo developers are probably already using agile programming concepts without realizing it. But the more you understand agile development, the more you can intentionally leverage it for your needs.  &lt;li&gt;&lt;strong&gt;Read HOT4DNN&lt;/strong&gt; &lt;br&gt;Yes, this is a shameless plug. But the whole dream of &lt;a href=&quot;&quot;&gt;HOT4DNN&lt;/a&gt; is to create a place where current and high-quality articles on DotNetNuke development can be found in a single place. I know that’s lofty, and that there’s a lot of good stuff elsewhere (even my blog, where I wrote once about leveraging &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://kb.gilleland.info/Home/tabid/808/ctl/ArticleView/mid/1674/articleId/159/PageID/187/Comments-and-Tasks-in-Visual-Studio.aspx#axzz0tjNEGSMq&quot; target=&quot;_blank&quot;&gt;Comments and Tasks in Visual Studio&lt;/a&gt;). I don’t have all the answers, but at least HOT4DNN gives me a place to share what I have learned about DotNetNuke development over the years.  &lt;li&gt;&lt;strong&gt;Read DNN Creative Magazine&lt;/strong&gt; &lt;br&gt;I’m not affiliated with &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.dnncreative.com/Default.aspx&quot;&gt;DNN Creative Magazine&lt;/a&gt;, but Lee Sykes has done a great job building a resource of information mostly for DotNetNuke administrators and super users. If you want to get the most out of just &lt;em&gt;using&lt;/em&gt; DotNetNuke, then this is definitely worth the subscription. The more you learn about how DotNetNuke works, the better positioned you are to build well-integrated modules that will meet people’s needs. &lt;/li&gt;&lt;/ul&gt; &lt;h2&gt;Going Agile&lt;/h2&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://en.wikipedia.org/wiki/Agile_software_development&quot;&gt;&lt;strong&gt;Agile Programming&lt;/strong&gt;&lt;/a&gt; (also called &#39;”eXtreme Programming” or XP) is all about applying an adaptive approach that is resilient to change and speeds production. It focuses primarily on frequent iterations and releases in your project. The Unified Process supports Agile practices in several ways. In fact, there is an adaptation of this process specifically designed for Agile development. It is called the &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://en.wikipedia.org/wiki/Agile_Unified_Process&quot;&gt;&lt;strong&gt;Agile Unified Process&lt;/strong&gt;&lt;/a&gt;. The key characteristics of all Agile practices are: Smaller units of work, tracking progress, and having frequent iterations.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Smaller Units of Work&lt;/strong&gt; &lt;br&gt;The Elaboration phase is all about gathering requirements, fleshing out design details, and breaking those items into small tasks that can be measured in hours. It’s important not to dwell too long in this phase; you can come back to it at any point. Just get enough to enter the first iteration of construction and have the bigger picture of the next iteration sketched out.  &lt;li&gt;&lt;strong&gt;Tracking Progress &lt;br&gt;&lt;/strong&gt;Again, the Elaboration phase helps, because the gathered requirements and smaller units of work lend themselves to creating checklists to help track progress. As checklists with time estimations, the small units of work can be represented in a “&lt;strong&gt;burn down chart&lt;/strong&gt;” that is refreshed every day to show the progress to each release. Burn down charts are part of a type of agile variation known as Scrum. (You can learn more about Scrum from &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.scrum.org&quot;&gt;Scrum.org&lt;/a&gt; and &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;http://www.scrumalliance.org/&quot;&gt;ScrumAlliance.org&lt;/a&gt;.)  &lt;li&gt;&lt;strong&gt;Frequent Iterations &lt;br&gt;&lt;/strong&gt;Because tasks are measurable in hours, iterations can be measured in days and weeks rather than months. That shorter time frame toward actual working versions of the product allows for richer feedback from the client and better bug catching for developers. &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Agile practices are much more than what I’ve outlined here, and there are many rich resources &lt;a href=&quot;http://www.google.ca/search?aq=f&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&amp;amp;q=Agile+programming&quot; target=&quot;_blank&quot;&gt;on the web&lt;/a&gt; to learn about &lt;a href=&quot;http://agileprogramming.org/&quot; target=&quot;_blank&quot;&gt;Agile&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Producing high quality modules and other extensions for DotNetNuke on a consistent basis is an ongoing challenge. Thinking carefully about the methodology you use behind your efforts is a good place to start improving them. Hopefully, the ideas expressed here can contribute to your development efforts and overall success.&lt;/p&gt;","0","8/12/2013 3:46:50 PM"," "," "," "," "
"Preserving metaPost Goodness","","","Preserving metaPost Goodness","&lt;p&gt;If you post via WLW through metaPost to your DNN blog/news articles/etc, then you’ve probably noticed that any edits via the browser will cause the metaPost script goodness to be stripped out. This is by design (not metaPost’s, but the Rich Text Editor) because it’s not a good idea to allow scripts in the browser for rich-text-editing.&lt;/p&gt; &lt;p&gt;There may be a fix coming for that, though. For those who need a quick “hack”, just include the following script in WLW when re-publishing and you’ll (hopefully) get that nice goodness back again. It’s not a guarantee, of course. This page is actually having troubles showing the tabs. Again, the script it getting stripped, and it’s causing a few problems.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;tb3&quot;&gt;What the Script Does&lt;/a&gt; &lt;a href=&quot;tb4&quot;&gt;How it Does It Work?&lt;/a&gt; &lt;/p&gt; &lt;p&gt;[tb3]&lt;/p&gt;It allows cool things like tabs &amp;amp; pictures &amp;amp; stuff. This is a tab, BTW. And this is a picture of what the stuff looks like in WLW when editing.  &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;f714fa87&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-PreservingmetaPostGoodness_F8CA-SNAGHTMLc988d2.png&quot;&gt;&lt;img width=&quot;277&quot; height=&quot;331&quot; title=&quot;SNAGHTMLc988d2&quot; style=&quot;border: 0px solid currentcolor; display: inline;&quot; alt=&quot;SNAGHTMLc988d2&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-PreservingmetaPostGoodness_F8CA-SNAGHTMLc988d2_thumb.png&quot;&gt;&lt;/a&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;f714fa87&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-PreservingmetaPostGoodness_F8CA-SNAGHTMLcb0226.png&quot;&gt;&lt;img width=&quot;277&quot; height=&quot;331&quot; title=&quot;SNAGHTMLcb0226&quot; style=&quot;border: 0px solid currentcolor; display: inline;&quot; alt=&quot;SNAGHTMLcb0226&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-PreservingmetaPostGoodness_F8CA-SNAGHTMLcb0226_thumb.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;[/tb3]&lt;/p&gt; &lt;p&gt;[tb4]&lt;/p&gt;It’s all made possible by a little script added by metaPost. Here’s the script tag:  &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://www.hot4dnn.com/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/p&gt; &lt;p&gt;You can add certain parameters to this script. Notice the “hs=1”? That’s for the image stuff. If you want tabs, you can put “tabs=1”. Here’s another sample.&lt;/p&gt; &lt;p&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://www.hot4dnn.com/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?tabs=1&amp;amp;amp;hs=0&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/p&gt; &lt;p&gt;And here’s a &lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.htmlExpand(this, { objectType: &#39;iframe&#39;,width:1024,height:768 } )&quot; href=&quot;/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot; target=&quot;_blank&quot;&gt;link to the Javascript itself&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;[/tb4]&lt;/p&gt; &lt;p&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://www.hot4dnn.com/DesktopModules/itcMetaPost/js/ca0c21fbdc85f6a1597417732d450607.ashx?hs=1&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/p&gt;","0","8/12/2013 3:47:57 PM"," "," "," "," "
"Reviewing Drafts in Ventrian’s News Articles Module","","","Reviewing Drafts in Ventrian’s News Articles Module","&lt;p&gt;Whether you are interested in personal blogging or having a small online newspaper, you should definitely try out Ventrian’s News Articles Module.&lt;/p&gt; &lt;p&gt;One of the great features of this DotNetNuke&#174; module is its support of a publishing workflow. Authors can create drafts of articles and can submit articles for publishing. Editors can review submitted articles as well as drafts and then approve them as published works. In this article, I will walk through the steps that an Editor can take in reviewing draft or submitted articles.&lt;/p&gt;  &lt;hr&gt; To begin, the Editor would sign onto the website and navigate to the page with the News Articles module. From there, clicking on the “My Articles” link will bring up a page where a list of published, draft and submitted articles can be viewed.  &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8eeaff3b&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-ReviewingNewsArticles_BEDD-image_2.png&quot;&gt;&lt;img width=&quot;550&quot; height=&quot;54&quot; class=&quot;wlDisabledImage&quot; style=&quot;border: 0px currentcolor; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-ReviewingNewsArticles_BEDD-image_thumb.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8eeaff3b&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-ReviewingNewsArticles_BEDD-image_4.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;61&quot; class=&quot;wlDisabledImage&quot; style=&quot;border: 0px currentcolor; float: left; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-ReviewingNewsArticles_BEDD-image_thumb_1.png&quot;&gt;&lt;/a&gt;The page shows a drop-down with the three types of articles as options. Editors get an extra item that ordinary authors don’t see when viewing this page: a check-box to show all articles form all authors. All the Editor needs to do is select the check-box and choose whether to view submissions, drafts or published articles, and a list of those articles will be shown below.&lt;/p&gt; &lt;p&gt;Clicking on the article’s title will open that article so that it can previewed. Clicking on the pencil icon () will open the page in edit mode.&lt;/p&gt; &lt;p&gt;When listing unapproved articles, there is at the right of the article a check-box for approving the article. All the Editor needs to do is select the articles she wished to approve and click the “Approve Selected Articles” link. Alternatively, the Editor can click the “Approve All Articles” link. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8eeaff3b&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-ReviewingNewsArticles_BEDD-image_8.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;52&quot; class=&quot;wlDisabledImage&quot; style=&quot;margin: 0px; border: 0px currentcolor; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-ReviewingNewsArticles_BEDD-image_thumb_3.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;","0","8/12/2013 3:49:14 PM"," "," "," "," "
"DotNetNuke® Starter Kit Templates","","","DotNetNuke® Starter Kit Templates","&lt;h1&gt;About DotNetNuke&#174; Starter Kit Templates&lt;/h1&gt; &lt;p&gt;The DotNetNuke Starter Kit templates allow module and skin developers to quickly get started with building their DNN&#174; extension. They are especially helpful for those new to creating extensions on the DotNetNuke platform.&lt;/p&gt; &lt;p&gt;The Starter Kit comes with a template for creating a fresh DotNetNuke Web Site, another for creating a Skin package, and several templates for developing DotNetNuke modules. This article will offer a tour of each of these templates and give a description of what they are all about.&lt;/p&gt;  &lt;h1&gt;About DotNetNuke&#174; Starter Kit Templates&lt;/h1&gt; &lt;p&gt;The DotNetNuke Starter Kit templates allow module and skin developers to quickly get started with building their DNN&#174; extension. They are especially helpful for those new to creating extensions on the DotNetNuke platform.&lt;/p&gt; &lt;p&gt;The Starter Kit comes with a template for creating a fresh DotNetNuke Web Site, another for creating a Skin package, and several templates for developing DotNetNuke modules. This article will offer a tour of each of these templates and give a description of what they are all about.&lt;/p&gt; &lt;h2&gt;DotNetNuke Web Application Framework&lt;/h2&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-SNAGHTML28bb82.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;147&quot; title=&quot;SNAGHTML28bb82&quot; align=&quot;left&quot; style=&quot;border-width: 0px; margin: 0px 5px 5px 0px; display: inline;&quot; alt=&quot;SNAGHTML28bb82&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-SNAGHTML28bb82_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;The &lt;strong&gt;DotNetNuke Web Application Framework&lt;/strong&gt; template is available when you create a New Web Site. It is the starting point for all your DNN extension development, as it creates a fresh installation of the DotNetNuke web application on your local machine as a Visual Studio Web Site project.&lt;/p&gt; &lt;p&gt;To use this template, select “New Web Site…” from the File menu in Visual Studio. This will open a dialog box with all of the available web site templates. If you have installed the DNN Starter Kit, then you should see the template under “My Templates”. If you don’t see it (and know that you have installed the Starter Kit), then check that you have selected “Visual Basic” as the language. DotNetNuke is written entirely in VB.NET (although a recent parallel version in C# has come about).&lt;/p&gt; &lt;p&gt;If you still don’t see the template, then make sure that you didn’t accidentally choose “New Project…” from the File menu; choosing to start with a “New Project” is quite different than starting a “New Website”. The distinction between these two approaches becomes even more critical when you start building your own module extensions for DotNetNuke.&lt;/p&gt; &lt;h3&gt;Some History&lt;/h3&gt; &lt;p&gt;This is a good time to highlight the difference between creating a &lt;strong&gt;Web Site Project&lt;/strong&gt; (WSP) and a &lt;strong&gt;Web Application Project&lt;/strong&gt; (WAP) in Visual Studio. These two types of projects are complementary, but not entirely interchangeable in a “cut &amp;amp; paste” sort of way. In short, the big difference in the WSP and WAP lay in the way that the VB.NET/C# code-behind is compiled. WSP files are compiled “dynamically” or “on-the-fly” by the web server; this results in a number of smaller libraries (.dll) for the various pages in your application. WAP files, on the other hand, are pre-compiled, meaning that you will get a distinct .dll for your project. A little bit of a history lesson will reveal the reasons behind the presence of these two seemingly incompatible models.&lt;/p&gt; &lt;p&gt;The original versions of Microsoft Visual Studio (Visual Studio .NET and VS2003) gave developers a single model for creating web applications: the “ASP.NET Web Application”, which was basically a project that had to be compiled before it could be deployed to a production environment. This was the environment in which DotNetNuke was born. When Microsoft came out with Visual Studio 2005, they had scrapped this model in favor of a more “dynamic” approach: the Web Site Project (WSP). This new model was characterized by how VB.NET/C# source code was compiled. The WSP allowed code to be compiled “on-the-fly”, or dynamically. This was great for a number of reasons, not the least of which was allowing new developers a simple way to code, test, and deploy their web sites&lt;/p&gt; &lt;p&gt;The WSP model, however, was a bit of a step backward for more complex applications. Without a pre-complied web application, it was impossible for developers to protect their intellectual property, because the entire source code was required . There were also some problems with implementing Provider Patterns (which DotNetNuke was doing) and making references to distinct .dlls in the web.config. Microsoft soon realized the need to address these issues as the developer community grew more vocal. In fact, Shaun Walker and a number of other early DNN Core developers were among those instrumental in bringing these concerns to light. Without their direct feedback to the Microsoft team in charge of Visual Studio, it might have taken a good while longer to see this problem fixed. In the end, Microsoft released the Web Application Project (WAP) in VS2005 Service Pack 1 as a resurrected form of their original ASP.NET Web Application project template.&lt;/p&gt; &lt;p&gt;Around this time, the DotNetNuke framework underwent a major revision as it switched over to using WSP as a central part of its framework. This switch-over introduced a number of breaking changes which affected module developers. While painful, the overall result was very positive as it gave a great opportunity to make improvements to the overall architecture of DotNetNuke.&lt;/p&gt; &lt;p&gt;The changes to DotNetNuke’s framework also brought changes to the starter kit.Now, module developers were presented with starter kit templates based on the new WSP model. It was not until Microsoft’s release of SP1 for VS2005 that it was possible to bring back a clean WAP-based template for DNN module development. As of DNN 5.0, the Starter Kit boasts a total of seven templates for C# and VB.NET (one project template and six DNN extension templates).&lt;/p&gt; &lt;h2&gt;DotNetNuke Dynamic Module (WSP)&lt;/h2&gt; &lt;p&gt;The &lt;strong&gt;DotNetNuke Dynamic Module&lt;/strong&gt; template represents the de-facto pattern for creating modules since some of the earliest versions of the DotNetNuke Starter Kit. Available in either &lt;strong&gt;VB.NET&lt;/strong&gt; or &lt;strong&gt;C#&lt;/strong&gt;, it is a template for creating a &lt;strong&gt;Web Site Project&lt;/strong&gt; (WSP) or “Dynamic” module (as opposed to creating a “Web Application Project”, or WAP, based module). The files in this template will work as-is to create a fully functional module similar to the HTML module. The purpose of this template is not only to give a starting point for the developer, but also to demonstrate a possible module design. If you are looking for a sample of the most common places that your module will hook into the DotNetNuke framework, then this is a good template to explore.&lt;/p&gt; &lt;p&gt;The design of the module allows a user to add or edit content as regular HTML using DotNetNuke’s TextEditor control. Many separate blocks of content can be added per module, and each time content is added or edited the module will track the “who” and “when” of the user who last modified the content. Furthermore, the module allows this information to be displayed in a template-based fashion which can be customized through the module’s Settings user control.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_2.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;139&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; margin: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_4.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;136&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; margin: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_thumb_1.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This template will generate folders in two locations: DesktopModules and App_Code. The folder of items under DesktopModules contain user controls for View and Edit functionality as well as a user control for the module’s Settings. The folder under App_Code contains classes for the business logic layer (BLL) and data access layer (DAL) as well as a class for the custom business object (CBO).&lt;/p&gt; &lt;p&gt;When using this template as the starting point for your own module, plan on completely replacing most of the code in all of the user controls and classes. Most of the time, your own module will have a design that is very different, so you can expect to do a fair bit of work re-writing in order to adapt it to your own project idea. Nevertheless, this template is a good starting point for learning the basics of what you will find in a typical DotNetNuke module.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_8.png&quot;&gt;&lt;img width=&quot;241&quot; height=&quot;243&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_thumb_3.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_6.png&quot;&gt;&lt;img width=&quot;222&quot; height=&quot;133&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_thumb_2.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;DotNetNuke Simple Dynamic Module (WSP)&lt;/h2&gt; &lt;p&gt;The &lt;strong&gt;DotNetNuke Simple Dynamic Module&lt;/strong&gt; template is a trimmed down version of the full DotNetNuke Dynamic Module template. It is only available an a &lt;strong&gt;VB.NET&lt;/strong&gt; web item template. This simple version contains only the bare essentials needed to get started with your own module. This template is excellent for times when you don’t want to re-write code from the full version or when you only need a thin shell, perhaps because you’re intending to do all of your work in the code-behind of the form. It’s also a good choice when you need to create a DotNetNuke project that is actually a collection of related modules, such as the kind of supporting modules that make up the DotNetNuke Blog module.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_10.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;162&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_thumb_4.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_16.png&quot;&gt;&lt;img width=&quot;77&quot; height=&quot;244&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_thumb_7.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;DotNetNuke Compiled Module (WAP)&lt;/h2&gt; &lt;p&gt;The &lt;strong&gt;DotNetNuke Compiled Module&lt;/strong&gt; template is a full-fledged Web Application Project (or WAP for short). It is available in both &lt;strong&gt;VB.NET&lt;/strong&gt; and &lt;strong&gt;C#&lt;/strong&gt;. These Compiled Module templates are available in both C# and VB. Among the benefits of this approach in module development is that the underlying code of the module can be protected from reverse engineering, thus allowing some measure of protection of intellectual copyright.&lt;/p&gt; &lt;p&gt;In the early days of DotNetNuke (circa Visual Studio 2003), almost all modules were written as Web Application Projects. In fact, the entire DotNetNuke framework was a single Web Application Project of its own. When Visual Studio 2005 d&#233;buted, Web Application Projects were not included. In their place was the new concept of a &lt;b&gt;&lt;i&gt;Web Site&lt;/i&gt;&lt;/b&gt; – a special type of project that contained code that was compiled dynamically (or “on the fly”) by the web server.&lt;/p&gt; &lt;p&gt;One of the goals of moving away from Web Application Projects and toward Web Site projects was to make it simpler for beginning developers to quickly create and deploy web sites. A downfall, however, was that this new and simpler approach was unable to scale well for more complex web site architectures. In fact, it is thanks in large part to Shaun Walker and others in the DotNetNuke core team that Microsoft finally brought back the Web Application Project template in VS2005 Service Pack 1.&lt;/p&gt; &lt;p&gt;Eventually, DotNetNuke moved from being a WAP (Web Application Project) to a dynamic Web Site. The essence of the site’s architecture was retained, and a whole new set of possibilities was opened up for developers. Still, many DNN module developers of the day preferred using WAP rather than this new dynamic style or modules. Eventually, the DotNetNuke Compiled Module template was brought into the Starter Kit to provide the standard WAP approach.&lt;/p&gt; &lt;p&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;726015c8&#39;})&quot; href=&quot;/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_14.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;157&quot; class=&quot;wlDisabledImage&quot; style=&quot;border-width: 0px; margin: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/dagilleland/News-Articles/2010/Jul/WLW-b8baeafb5853_9284-image_thumb_6.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;DotNetNuke Skin (WSP)&lt;/h2&gt; &lt;p&gt;The &lt;strong&gt;DotNetNuke Skin&lt;/strong&gt; template is a WSP template in &lt;strong&gt;VB.NET&lt;/strong&gt; that is a starter kit for making a &lt;strong&gt;Skin&lt;/strong&gt; and a &lt;strong&gt;Container&lt;/strong&gt;. Both the Skin and the Container are provided as HTML templates (.htm) and User Controls (.ascx). They also come with a Cascading Style Sheet (.css) and an XML configuration file for skin/container tokens. The intended audience for this template are website designers (as opposed to programmers/developers).&lt;/p&gt; &lt;p&gt;If you’re new to DotNetNuke’s skinning engine, you will find there’s a bit of terminology to learn. First, in DotNetNuke the term “skinning” refers to creating a package of items that work to control the look and feel of a website. It’s very similar to the idea of creating a desktop theme for your computer or WordPress blog. Next, the term “skin” is one that actually has two meanings. In general terms, an entire skinning package is referred to as a “skin”. In a more detailed sense, a “skin” is a type of item in a skinning package that acts as a page-level theme. A “container” is another item in a skinning package; containers are a type of mini-theme that is used to wrap individual modules on a page.&lt;/p&gt; &lt;h2&gt;(Coming Soon) DotNetNuke MVP Module (WAP)&lt;/h2&gt; &lt;p&gt;I’ve had the good fortune to get involved as a volunteer on the &lt;a href=&quot;http://www.dotnetnuke.com/Community/Teams/QualityAssurance/tabid/1557/Default.aspx&quot; target=&quot;_blank&quot;&gt;Quality Assurance Team&lt;/a&gt;. My first tasks have been to contribute to the TestDrivenDNNModule project on CodePlex. This project will be the basis for another DNN template based on the Model-View-Presenter (MVP) pattern. Based off of the close cousin to the Model-View-Controller (or MVC) project type, the Module View Pattern (or MVP) allows developers to have the familiarity of Web Forms with the testability and abstractions of MVC projects.&lt;/p&gt; &lt;p&gt;By its very nature, the MVP module is done as a Web Application Project (WAP). The (soon to be released) MVP template is intended for developers who want to incorporate unit testing in their module development processes. Anyone interested in TDD (Test-Driven-Development) or BDD (Behavior-Driven-Development) should take a gander at this template. It will also be of interest to those with experience in MVC (Model-View-Controller) programming, as there are many commonalities between these approaches (at least, from a TDD point of view).&lt;/p&gt; &lt;h2&gt;Ultra-Simple Modules (Not a Template)&lt;/h2&gt; &lt;p&gt;All of the above approaches to developing modules begin with either a Project or an Item template that the programmer creates in Visual Studio. It’s possible, however, for a Super User (or Host) to create ultra-simple modules through DotNetNuke’s own interface. You don’t even need Visual Studio to create a DNN module!&lt;/p&gt; &lt;p&gt;In fact, the Module Definitions page under the Host menu of DotNetNuke allows a developer to create a single-page module whose source code can be edited in the browser. This simple user control uses inline VB or C# code rather than the code-behind approach that’s become the defacto-standard way of writing user controls and web forms. This inline code blends together the VB/C# server-side script with the ASP.NET mark-up. The approach is actually quite “retro” because in the days of ASP (before ASP.&lt;b&gt;&lt;i&gt;NET&lt;/i&gt;&lt;/b&gt;), server-side code was routinely mixed in with HTML mark-up.&lt;/p&gt; &lt;p&gt;While many DNN module developers will opt for one of the Starter Kit templates, this quick-n-dirty approach is a great way to do modules that are extremely simple or that don’t need the extra burden of a CBO, BLL or DAL to achieve its goals.&lt;/p&gt; &lt;h1&gt;Conclusion&lt;/h1&gt; &lt;p&gt;Each of these DotNetNuke Starter Kit templates represents a significant productivity boost for those new to building DNN extensions. However, they don’t represent the entire range of possible extensions (or possible templates, for that matter). Since DNN 5.1, there have been a number of possible extensions: Module, Dashboard Control, Provider, Authentication System, Library, Skin, Container, Skin Object, Widget, Core Language Pack, and Extension Language Pack. With these various extension types comes and ever-growing set of opportunities for developers and designers in the DotNetNuke ecosystem.&lt;/p&gt;","0","8/12/2013 3:50:00 PM"," "," "," "," "
"How to Set Up a Demo Skin","","","How to Set Up a Demo Skin","&lt;p&gt;When you are designing a site for someone that includes a custom skin, it is helpful for the end-users to see that skin “live”. With DotNetNuke&#174;, you can create a “skin preview” page that is visible to a select group of users and apply your skin just to that page.&lt;/p&gt; &lt;p&gt;To do this, follow these steps:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Log onto the site as an administrator.  &lt;li&gt;Create a new page named “Skin Preview” using the DotNetNuke Control Panel at the top of the page. This will create the page and navigate you to that page so that you can edit the content. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8800a249&#39;})&quot; href=&quot;/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_2.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;98&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_thumb.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Click on the Edit link in the “Actions” section of the DotNetNuke Control Panel. This will open the page settings. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8800a249&#39;})&quot; href=&quot;/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_4.png&quot;&gt;&lt;img width=&quot;51&quot; height=&quot;120&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_thumb_1.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Set the Page Permissions to the Security Role or specific Username that should have View permissions for the page. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8800a249&#39;})&quot; href=&quot;/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_6.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;155&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_thumb_2.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Open the section named “Advanced Settings” by clicking on the Expand/Collapse icon (&lt;img width=&quot;13&quot; height=&quot;13&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_11.png&quot; border=&quot;0&quot;&gt; / &lt;img width=&quot;13&quot; height=&quot;13&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_12.png&quot; border=&quot;0&quot;&gt; ). Then, under the “Appearance” settings, select the particular Page Skin and Page Container that you want to be applied to this page. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8800a249&#39;})&quot; href=&quot;/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_14.png&quot;&gt;&lt;img width=&quot;244&quot; height=&quot;46&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_thumb_5.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt;  &lt;li&gt;Scroll to the bottom of the Settings page and click the “Update” link to apply these new settings. &lt;br&gt;&lt;a class=&quot;itcexpando&quot; onclick=&quot;return mp.expand(this,{slideshowGroup:&#39;8800a249&#39;})&quot; href=&quot;/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_16.png&quot;&gt;&lt;img width=&quot;232&quot; height=&quot;34&quot; style=&quot;border-width: 0px; display: inline;&quot; alt=&quot;image&quot; src=&quot;http://www.hot4dnn.com/Portals/0/images/News-Articles/WLW/HowtoSetUpaDemoSkin_D3B6/image_thumb_6.png&quot; border=&quot;0&quot;&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt; &lt;p&gt;Now the page can be viewed with your demo skin. If you wish, you can then fill this page with demo content to go along with the skin, to give your end-users an idea of the complete design. This approach will allow your clients to have a “living” example, one where they can even play with the content to explore the possibilities and limitations of your design.&lt;/p&gt;","0","8/12/2013 3:50:42 PM"," "," "," "," "
"Git (almost) Anywhere with GitHub for Windows","","","Git (almost) Anywhere with GitHub for Windows","<p><a href=""http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML28dcea54.png"" rel=""shadowbox""><img title=""SNAGHTML28dcea54"" style=""background-image: none; float: left; margin: 0px 5px 5px 0px; display: inline"" border=""0"" alt=""SNAGHTML28dcea54"" align=""left"" src=""http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML28dcea54_thumb.png"" width=""244"" height=""131"" /></a>I was pleased to learn from <a href=""http://haacked.com/archive/2012/05/30/using-github-for-windows-with-non-github-repositories.aspx"" target=""_blank"">this article</a> (by <strong><em>Phil Haack</em></strong>, and yes, that’s his real name and he is a prominent software developer) that you can use <strong><a href=""http://msysgit.github.io/"" target=""_blank"">GitHub for Windows</a></strong> (<strong>GHfW</strong> or GH4W) on git repositories hosted on other 3rd party sites, such as <a href=""http://www.fogcreek.com/kiln/"" target=""_blank"">kiln</a> or <a href=""https://bitbucket.org/"" target=""_blank"">Bitbucket</a>. That was especially cool to me, because <font color=""#a5a5a5"">&lt;confession&gt;</font>my allegiances are starting to shift from <a href=""http://mercurial.selenic.com/"" target=""_blank"">mercurial</a> to <a href=""http://git-scm.com/"" target=""_blank"">git</a><font color=""#a5a5a5"">&lt;/confession&gt;</font>. GHfW (<a href=""http://haacked.com/archive/2012/05/21/introducing-github-for-windows.aspx"" target=""_blank"">launched in May, 2012</a>) is giving me the joy of git without the pain of reverting to <a href=""http://dilbert.com/strips/comic/2009-12-27/"" target=""_blank"">a bearded command-line guru</a>.</p>  <p>Just drag &amp; drop the git clone url onto GitHub for Windows, and GHfW will do the rest for you. GHfW will prompt you for your username and password (If the domain is one that you haven’t copied from before), so all you have to do is use the credentials that you have for that repository and start your download.</p>  <p>Now, there is only one (minor) catch with using GH4W with non-GitHub hosts: You have to have an account on the domain to download from that domain. If you’re trying to clone some open-source repo from some place where you don’t have a login account, you’re going to have to do it the old-school way and clone it via the command line or git shell. Why? As Phil explains, it’s because GHfW stores the login credentials:</p>  <blockquote>   <p>GHfW will securely store the credentials for this repository so that you only need to enter it once. GHfW acts as a credentials provider for Git so the credentials you enter here will also work with the command line as long as you launch it from theGit Shell shortcut that GHfW installs. That means you won’t have to enter the credentials every time you push or pull commits from the server.</p> </blockquote>  <p>Cross-posted between <a href=""http://kb.gilleland.info/"">my personal blog</a> and <a href=""http://www.dmit.nait.ca/staff/dgilleland/"">my work blog</a>.</p>","0","9/22/2013 7:40:41 AM"," "," "," "," "
"Practical Push/Pull with Git & Mercurial","","","Practical Push/Pull with Git & Mercurial","<h2>Background</h2>  <p>While I’ve worked on &amp; off for the last few years with version control (using Mercurial, or hg, as my preferred DVCS), I’ve been playing out in my mind scenarios of <em><strong>how</strong></em> to use my DVCS. Since getting more into using git in the last couple of weeks, my scenario usage thots have been coalescing a bit more.</p>  <p>You see, most of the time I don’t do “normal” development; the way I need to use DVCS is somewhat unique to my situation. Yes, I develop software. But the bulk of my work with software is as a <em>teacher</em> of computer programming. And using a DVCS in my curriculum delivery is a different sort of beast. Consider the following:</p>  <ul>   <li><strong>My revision history isn’t <em>just</em> history</strong> – I use tagged revision points as “starting kits” for in-class demonstrations and exercises. As such, I need to go back to these tagged revisions every term, and many times each term (depending on how many sections I have). </li>    <li><strong>My revision history must change, but still be my “history”</strong> – Since my tagged revisions are starting points for each class, I also have to deal with the fact that my curriculum can change term-by-term. So I need to update my tagged revisions with “newer versions” for the next term. </li>    <li><strong>My revision history can’t always be shared</strong> – There are exercises and exercise solutions that I need to give my students, and I need to “hide” the answers from my students. </li> </ul>  <p>It’s like this: History for me isn’t just two-dimensional. It’s <strong>three</strong>-dimensional. Maybe even four-dimensional. It’s kinda like trying to get DVCS to help me represent not just history, but history in “alternate universes”. Perhaps this graph will explain.</p>  <p><a href=""http://kb.gilleland.info/Portals/50/Users/010/10/10/image.png"" rel=""shadowbox""><img title=""image"" style=""border-top: 0px solid; border-right: 0px solid; background-image: none; border-bottom: 0px solid; padding-top: 0px; padding-left: 0px; border-left: 0px solid; display: inline; padding-right: 0px"" alt=""image"" src=""http://kb.gilleland.info/Portals/50/Users/010/10/10/image_thumb.png"" width=""640"" height=""478"" /></a></p>  <p>The first time through a course, the graph is simple. Branches for <strong><em>Topical</em></strong> demos, <strong><em>Exercises</em></strong>, and <strong><em>Answers</em></strong>. I can keep the <strong><em>Answers</em></strong> branch in my local repository while the others are published in a central repository that students can access.</p>  <p>The next time I offer the course, however, I might have bug fixes for particular <strong><em>Topics</em></strong>, and those fixes might trickle down to the <strong><em>Exercises</em></strong> and <strong><em>Answers</em></strong>. I also might want to do experimental branches for new topics or additional intermediate topics. The thing is, it just gets so messy so quickly.</p>  <p>So it’s hard to know the best way to manage this. Do I lump topics in a single branch called “Topics”, or do I put each topic in its own branch? What about topics that “build” on each other? Do I include the Exercises in the same branch as its related topic, or as separate branches? What about “hot fixes” mid-way through the course? Should I do clones/forks to separate each term that a course is offered?</p>  <p>It’s not an easy set of decisions. Add to that the subtle and not-so-subtle differences between the way Mercurial and Git work in terms of branches and pushing/pulling, and the problem becomes more difficult to figure out. Remember – I need to step into a class and cherry-pick a tagged commit as my starter-kit-for-the-day.</p>  <h2>My Current Plan</h2>  <p>First off, it seems the only way to deal with changes term-over-term is to just do a new fork or clone of the repository each time.</p>  <p>Secondly, it seems that each “starter kit” for a topic really needs to be in its own branch. In other words, topics are themselves branches. Exercises are probably best put into the topic branch they apply to, but answers <em>definitely</em> have to be in their own branch (to keep them isolated and hidden).</p>  <p>As to hot-fixes for topics part-way through the term, it’s looking like “patches” are the best way to go, though I’m not yet practiced on using those.</p>  <h2>Getting Practical</h2>  <p>Choosing between mercurial and git has been really hard. On one hand, mercurial allows multiple heads (git doesn’t), and that could be a good thing in my starter-kit-for-the-day requirement. With multiple heads, each topic is effectively “open-ended” and I can treat them more independently. But perhaps that multiple head feature isn’t quite as important, and I can go ahead and just use git with branches that never merge into the master. I’m not sure if it might make for a wonky looking tree in git, however, since git only works on the idea of a single head. Having to constantly bounce around to different revision tags is kinda like always changing heads.</p>  <p>On the other hand, the <a href=""http://git-scm.com/book/en/Git-Branching-Rebasing"" target=""_blank"">rebase feature</a> of git is very appealing, not only in terms of potentially bringing in patches, but in terms of just presenting a “cleaner” revision tree. I believe that in mercurial, you can “kinda” get the equivalent of re-basing, though it isn’t seen as “natural” among mercurial uses.</p>  <p>My biggest problem, I think, is just not being as experienced with either git or mercurial to make a reasonable choice. For now, the promise of “clean” revision trees and rebasing in git, along with the <a href=""http://www.urbandictionary.com/define.php?term=easy%20peasy"" target=""_blank"">easy-peasy</a> way that you can use <a href=""http://windows.github.com/"" target=""_blank"">GitHub for Windows</a> (students like “easy”), even with <a href=""http://kb.gilleland.info/Home/tabid/808/ctl/ArticleView/mid/1674/articleId/215/PageID/232/Git-almost-Anywhere-with-GitHub-for-Windows.aspx"">non-GitHub hosts</a>, makes me want to convert it all to git. Not that converting is all that hard – I use <a href=""http://www.fogcreek.com/kiln/"" target=""_blank"">Kiln</a> by <a href=""http://www.fogcreek.com/"" target=""_blank"">FogCreek</a>, and their <a href=""http://blog.fogcreek.com/announcing-kiln-harmony-the-future-of-dvcs/"" target=""_blank"">Kiln Harmony</a> makes switching between git &amp; mercurial almost trivial. (My strange requirements might break that, though.)</p>  <h3>Tools of Choice</h3>  <p>Picking tools for working with DVCS is important, because I don’t want my students to get hung up on command-line stuff and lose the “big-picture” of what the course is really about. Therefore, the tool has to be simple, quick, and easy to use. For mercurial, my tool of choice is <a href=""http://tortoisehg.bitbucket.org/"" target=""_blank""><strong>TortoiseHg</strong></a>. The workbench has pretty much all I need, and it’s easy to use (once you get over all the options and know what to focus on).</p>  <p>For git, I just have to recommend <a href=""http://windows.github.com/"" target=""_blank""><strong>GitHub for Windows</strong></a> (GHfW). The interface is so clean and simple, it essentially hides the fact that you’re driving the power of a first-class DVCS. At first, I was concerned because GHfW is integrated with GitHub, and I don’t want students inadvertently sharing their labs (students can’t afford paid hosting for private repos). But when I learned that <a href=""http://kb.gilleland.info/Home/tabid/808/ctl/ArticleView/mid/1674/articleId/215/PageID/232/Git-almost-Anywhere-with-GitHub-for-Windows.aspx"">it can be used with non-GitHub hosts</a>, my aversions have basically gone away.</p>  <h3>Hiding Branches</h3>  <p>First things first. I gotta keep my exercise answers hidden from students. The key to that is branches. The trick to that is not pushing the branch to the public repository.</p>  <p>In git, this is really easy, since a push in git is branch-based by default. That is, a push or pull in git just does the <em>current</em> branch. With mercurial, however, the default is to push or pull all the branches; you have to be explicit if you only want a specific branch synchronized with your central repo.</p>  <p>GitHub makes this sweet and obvious. If the branch already exists in the central repo, your changes show up as a <strong><em>sync</em></strong> option. Branches that aren’t in the central repo will be highlighted as <strong><em>publish</em></strong> (note to self: don’t press that!).</p>  <p><a href=""http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML2cd15913.png"" rel=""shadowbox""><img title=""SNAGHTML2cd15913"" style=""border-top: 0px solid; border-right: 0px solid; background-image: none; border-bottom: 0px solid; padding-top: 0px; padding-left: 0px; border-left: 0px solid; display: inline; padding-right: 0px"" alt=""SNAGHTML2cd15913"" src=""http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML2cd15913_thumb.png"" width=""640"" height=""129"" /></a></p>  <p>In TortoiseHg, its not as obvious at first, but it is simple to isolate a particular branch (or even revision) for a push. Just select the <strong><em>Target</em></strong> checkbox and select the branch you want to push.</p>  <p><a href=""http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML2cdbf59f.png"" rel=""shadowbox""><img title=""SNAGHTML2cdbf59f"" style=""border-top: 0px solid; border-right: 0px solid; background-image: none; border-bottom: 0px solid; padding-top: 0px; padding-left: 0px; border-left: 0px solid; display: inline; padding-right: 0px"" alt=""SNAGHTML2cdbf59f"" src=""http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML2cdbf59f_thumb.png"" width=""640"" height=""57"" /></a></p>  <h3>Dealing with Patches</h3>  <blockquote>   <p>This part is not yet developed. Stay tuned for future details.</p> </blockquote>  <h3>Cloning/Forking a New Semester</h3>  <blockquote>   <p>This part is not yet developed. Stay tuned for future details.</p> </blockquote>  <p>&#160;</p>  <hr />  <p>Cross-posted between <a href=""http://kb.gilleland.info/"">my personal blog</a> and <a href=""http://www.dmit.nait.ca/staff/dgilleland/"">my work blog</a>.     <br />Thanks for reading!</p>","0","9/23/2013 1:25:21 AM"," "," "," "," "
"Adding Remote Support in GitHub for Windows","","","Adding Remote Support in GitHub for Windows","&lt;p&gt;Here&amp;rsquo;s hoping that this &amp;ldquo;open letter&amp;rdquo; (blog post, actually) to &lt;a href=&quot;http://haacked.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Phil Haack&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;http://windows.github.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;GitHub for Windows&lt;/strong&gt;&lt;/a&gt; team isn&amp;rsquo;t taken as being too pushy &amp;hellip;.&lt;/p&gt; &lt;p&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;unabashedFlattery&amp;gt;&lt;/span&gt;First, I gotta say that &lt;a href=&quot;http://windows.github.com/&quot; target=&quot;_blank&quot;&gt;GitHub for Windows&lt;/a&gt; (GHfW) is making me a &lt;strong&gt;huge fan&lt;/strong&gt; of both Git and &lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;!!!&lt;span style=&quot;color: #0000ff;&quot;&gt;&amp;lt;/unabashedFlattery&amp;gt;&lt;/span&gt; As an instructor teaching computer programming to post-secondary students, tools like this are part of what make my job and my students&amp;rsquo; jobs &lt;em&gt;so&lt;/em&gt; much easier!&lt;/p&gt; &lt;p&gt;What would make this tool the &lt;a href=&quot;http://en.wikipedia.org/wiki/Pi%C3%A8ce_de_r%C3%A9sistance&quot; target=&quot;_blank&quot;&gt;Pi&amp;egrave;ce de r&amp;eacute;sistance&lt;/a&gt; for collaboration through forking and pull-requests would be the inclusion of &lt;strong&gt;Upstream Syncing&lt;/strong&gt; in the GitHub for Windows tool. At present, if one has forked a repository so as to contribute through pull requests, they have to go to the shell and do a &amp;ldquo;&lt;code&gt;git fetch upstream&lt;/code&gt;&amp;rdquo; and a &amp;ldquo;&lt;code&gt;git merge upstream/master&lt;/code&gt;&amp;rdquo;. I know, I know &amp;ndash; that&amp;rsquo;s not really a lot of work. But it can be easier. In fact, it could look like this:&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML423b4e79.png&quot; rel=&quot;shadowbox&quot;&gt;&lt;img title=&quot;SNAGHTML423b4e79&quot; style=&quot;border: 0px solid; background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px;&quot; alt=&quot;SNAGHTML423b4e79&quot; src=&quot;http://kb.gilleland.info/Portals/50/Users/010/10/10/SNAGHTML423b4e79_thumb.png&quot; width=&quot;640&quot; height=&quot;174&quot; /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Part of what gives &lt;a href=&quot;https://www.google.ca/search?q=open+source+software&amp;amp;oq=open+source+software&amp;amp;aqs=chrome..69i57j5j69i65j69i60j69i61j0.2857j0j1&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8#q=open+source+software&amp;amp;safe=active&amp;amp;tbm=nws&quot; target=&quot;_blank&quot;&gt;Open Source Software&lt;/a&gt; power and effect is the ability of people to contribute in the development of a project. In GitHub, you can do this easily by 1) &lt;a href=&quot;https://help.github.com/articles/fork-a-repo&quot; target=&quot;_blank&quot;&gt;forking a project&lt;/a&gt;, 2) adding your new feature or bug fix to your fork, and 3) submitting a &lt;a href=&quot;https://help.github.com/articles/using-pull-requests&quot; target=&quot;_blank&quot;&gt;pull-request&lt;/a&gt; through your GitHub repo to the project you forked (known as the &amp;ldquo;upstream&amp;rdquo;). Pretty easy, huh? Except, maybe, for one thing: What if your fork is outdated, and you don&amp;rsquo;t have the latest developments on the &amp;ldquo;upstream&amp;rdquo; project? You could be facing merge conflicts that you don&amp;rsquo;t even know about, and your pull-request devolves into a series of discussions that boil down to &amp;ldquo;&lt;em&gt;please fetch &amp;amp; merge our latest work to resolve the conflicts and then we&amp;rsquo;ll consider your pull request&lt;/em&gt;&amp;rdquo;. I think they call this a &amp;ldquo;&lt;a href=&quot;http://en.wikipedia.org/wiki/Experiential_learning&quot; target=&quot;_blank&quot;&gt;learning experience&lt;/a&gt;&amp;rdquo; (&lt;a href=&quot;http://emailfunnypictures.files.wordpress.com/2010/04/tank2.jpg&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://www.searchquotes.com/Learning_Experience/quotes/about/Pain/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.google.ca/search?q=github+pull+request+problems&amp;amp;oq=github+pull+request+problems&amp;amp;aqs=chrome..69i57j0j69i64.9337j0j1&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8#q=github+pull+request+merge+conflict+site:stackoverflow.com&amp;amp;safe=active&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;As it currently stands, GHfW lets the developer quickly see if their repository fork is out of sync with their &amp;ldquo;origin&amp;rdquo; (the &amp;ldquo;central&amp;rdquo; repository, typically hosted online at wonderful hosts like GitHub). But what developers &lt;em&gt;don&amp;rsquo;t see&lt;/em&gt; is if they are out of sync with the &amp;ldquo;upstream&amp;rdquo;. At present, I have to train my students to always do an upstream fetch and merge to see if there are any conflicts before they make a pull-request. Yes, I suppose it &lt;em&gt;is&lt;/em&gt; my job to teach my students, but just think of how you can make &lt;span style=&quot;text-decoration: line-through; color: #ff0000;&quot;&gt;my&lt;/span&gt; &lt;span style=&quot;color: #008000;&quot;&gt;all our&lt;/span&gt; jobs easier through an extra GHfW feature: &lt;strong&gt;Upstream Syncing&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;Oh, and thanks (in advance). &lt;img class=&quot;wlEmoticon wlEmoticon-smile&quot; style=&quot;border-style: none;&quot; alt=&quot;Smile&quot; src=&quot;http://kb.gilleland.info/Portals/50/Users/010/10/10/wlEmoticon-smile.png&quot; /&gt;&lt;/p&gt; &lt;p&gt;Cross-posted between &lt;a href=&quot;http://kb.gilleland.info/&quot;&gt;my personal blog&lt;/a&gt; and &lt;a href=&quot;http://www.dmit.nait.ca/staff/dgilleland&quot;&gt;my staff website&lt;/a&gt;.&lt;/p&gt;","0","9/27/2013 5:33:29 AM"," "," "," "," "
"ASchool Project","","","ASchool Project","<p>RnD:</p>  <ul>   <li>PetaPoco</li>    <ul>     <li><a href=""https://github.com/dagilleland/PetaPoco"" target=""_blank"">MY Copy</a></li>      <li><a href=""http://www.toptensoftware.com/Categories/PetaPoco"">http://www.toptensoftware.com/Categories/PetaPoco</a></li>      <li><a href=""http://www.toptensoftware.com/petapoco/"">http://www.toptensoftware.com/petapoco/</a></li>      <li><a href=""http://www.toptensoftware.com/Articles/137/Long-Time-No-Post-and-PetaPoco-v5"">http://www.toptensoftware.com/Articles/137/Long-Time-No-Post-and-PetaPoco-v5</a></li>      <li></li>   </ul>    <li>General</li>    <ul>     <li><a href=""http://sravi-kiran.blogspot.ca/2012/11/UnitTestingAsynchronousMethodsUsingMSTestAndXUnit.html"">http://sravi-kiran.blogspot.ca/2012/11/UnitTestingAsynchronousMethodsUsingMSTestAndXUnit.html</a></li>      <li><a href=""http://www.infoq.com/news/2013/08/vs-unit-test-generator"">http://www.infoq.com/news/2013/08/vs-unit-test-generator</a></li>   </ul>    <li>Testing &amp; Repository &amp; Unit Of Work</li>    <ul>     <li><a href=""http://jamesheppinstall.wordpress.com/2012/06/16/petapoco-quick-and-easy-unit-of-work/"">http://jamesheppinstall.wordpress.com/2012/06/16/petapoco-quick-and-easy-unit-of-work/</a></li>      <li><a href=""http://programmers.stackexchange.com/questions/163128/how-do-i-make-code-bound-to-an-orm-testable"">http://programmers.stackexchange.com/questions/163128/how-do-i-make-code-bound-to-an-orm-testable</a></li>      <li><a href=""http://www.nielsbrinch.com/5-steps-to-set-up-a-generic-repository-pattern-with-entity-framework/"">http://www.nielsbrinch.com/5-steps-to-set-up-a-generic-repository-pattern-with-entity-framework/</a></li>      <li><a href=""http://stackoverflow.com/questions/10766721/how-to-unit-test-service-that-is-using-petapoco-database"">http://stackoverflow.com/questions/10766721/how-to-unit-test-service-that-is-using-petapoco-database</a></li>   </ul>    <li>BDDfy</li>    <ul>     <li><a href=""http://docs.teststack.net/bddfy/index.html"">http://docs.teststack.net/bddfy/index.html</a></li>      <li>Consider testing Story.MetaData ???</li>      <ul>       <li><a href=""https://github.com/TestStack/TestStack.BDDfy/blob/master/TestStack.BDDfy.Tests/Story/StoryCanBeSpecifiedInFluentMode.cs"">https://github.com/TestStack/TestStack.BDDfy/blob/master/TestStack.BDDfy.Tests/Story/StoryCanBeSpecifiedInFluentMode.cs</a></li>     </ul>      <li><a href=""http://www.mehdi-khalili.com/bddify-in-action/introduction"">http://www.mehdi-khalili.com/bddify-in-action/introduction</a></li>   </ul>    <li>xUnit</li>    <ul>     <li>Comparisons - <a href=""https://xunit.codeplex.com/wikipage?title=Comparisons&amp;referringTitle=Home"">https://xunit.codeplex.com/wikipage?title=Comparisons&amp;referringTitle=Home</a></li>      <li>Data Theories</li>      <ul>       <li><a href=""http://www.tomdupont.net/2012/04/xunit-theory-data-driven-unit-test.html"">http://www.tomdupont.net/2012/04/xunit-theory-data-driven-unit-test.html</a></li>        <li>InlineDataAttribute</li>        <li>ExcelDataAttribute</li>        <li>PropertyDataAttribute</li>        <li>ClassDataAttribute</li>        <li>SqlServerDataAttribute</li>        <li>OleDbDataAttribute</li>     </ul>      <li><a href=""http://geekswithblogs.net/thomasweller/archive/2009/08/22/keeping-your-enums-in-sync-with-corresponding-database-values.aspx"" rel=""shadowbox""><img class=""wlEmoticon wlEmoticon-star"" style=""border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none"" alt=""Star"" src=""http://kb.gilleland.info/Portals/50/Users/010/10/10/wlEmoticon-star.png"" />http://geekswithblogs.net/thomasweller/archive/2009/08/22/keeping-your-enums-in-sync-with-corresponding-database-values.aspx</a></li>      <li><a href=""http://www.codinginstinct.com/2008/05/waitn-and-xunitnet-integration-testing.html"">http://www.codinginstinct.com/2008/05/waitn-and-xunitnet-integration-testing.html</a></li>      <li><a href=""http://blog.rajsoftware.com/post/2010/09/19/Why-you-should-consider-using-xUnit.aspx"">http://blog.rajsoftware.com/post/2010/09/19/Why-you-should-consider-using-xUnit.aspx</a></li>   </ul>    <li>[Future] Integrating with DNN</li>    <ul>     <li>Using DAL2 in a real world module - <a href=""http://www.bitboxx.net/Blog/Post/190"">http://www.bitboxx.net/Blog/Post/190</a></li>      <li><a href=""https://dotnetnuke.codeplex.com/SourceControl/latest#Trunk/Content/Community/Library/Data/RepositoryBase.cs"" target=""_blank"">On CodePlex</a>: Trunk –&gt; Content –&gt; Community –&gt; Library –&gt; Data –&gt; PetaPoco</li>      <li></li>   </ul> </ul>","0","10/1/2013 12:18:01 PM"," "," "," "," "